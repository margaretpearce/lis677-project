<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='TableauData (Electricity Access)' inline='true' name='excel-direct.42464.922868634300' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Electricity Access.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' name='Year' ordinal='2' />
            <column datatype='real' name='Access to electricity (% of population)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Access to electricity (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Access to electricity (% of population)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Access to electricity (% of population)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TableauData (Electricity Access Urban)' inline='true' name='excel-direct.42464.929428923600' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Electricity Access Urban.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' name='Year' ordinal='2' />
            <column datatype='real' name='Access to electricity, urban (% of urban population)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Access to electricity, urban (% of urban population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Access to electricity, urban (% of urban population)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Access to electricity, urban (% of urban population)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TableauData (Electricity Access Rural)' inline='true' name='excel-direct.42464.924322743100' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Electricity Access Rural.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' name='Year' ordinal='2' />
            <column datatype='real' name='Access to electricity, rural (% of rural population)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Access to electricity, rural (% of rural population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Access to electricity, rural (% of rural population)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Access to electricity, rural (% of rural population)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[excel-direct.42464.922868634300].[avg:Access to electricity (\% of population):qk]&quot;' value='% of population' />
          <alias key='&quot;[excel-direct.42464.924322743100].[avg:Access to electricity, rural (\% of rural population):qk]&quot;' value='% of rural population' />
          <alias key='&quot;[excel-direct.42464.929428923600].[avg:Access to electricity, urban (\% of urban population):qk]&quot;' value='% of urban population' />
        </aliases>
      </column>
      <column datatype='real' name='[Access to electricity, rural (% of rural population)]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Access to electricity, rural (% of rural population)]' derivation='Avg' name='[avg:Access to electricity, rural (% of rural population):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Access to electricity, rural (% of rural population)]' derivation='Sum' name='[sum:Access to electricity, rural (% of rural population):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.42464.922868634300].[sum:Access to electricity (\% of population):qk]&quot;</bucket>
            </map>
            <map to='#7b66d2'>
              <bucket>&quot;[excel-direct.42464.922868634300].[avg:Access to electricity (\% of population):qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.42464.929428923600].[sum:Access to electricity, urban (\% of urban population):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.42464.924322743100].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.42464.924322743100].[sum:Access to electricity, rural (\% of rural population):qk]&quot;</bucket>
            </map>
            <map to='#d898ba'>
              <bucket>&quot;[excel-direct.42464.929428923600].[avg:Access to electricity, urban (\% of urban population):qk]&quot;</bucket>
            </map>
            <map to='#dbd4c5'>
              <bucket>&quot;[excel-direct.42464.924322743100].[avg:Access to electricity, rural (\% of rural population):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='excel-direct.42464.922868634300'>
        <column datatype='real' name='[Access to electricity (% of population)]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Access to electricity (% of population)]' derivation='Avg' name='[avg:Access to electricity (% of population):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Access to electricity (% of population)]' derivation='Sum' name='[sum:Access to electricity (% of population):qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='excel-direct.42464.929428923600'>
        <column datatype='real' name='[Access to electricity, urban (% of urban population)]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[Access to electricity, urban (% of urban population)]' derivation='Avg' name='[avg:Access to electricity, urban (% of urban population):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Access to electricity, urban (% of urban population)]' derivation='Sum' name='[sum:Access to electricity, urban (% of urban population):qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Access to electricity by %'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Electricity Access Rural)' name='excel-direct.42464.924322743100' />
            <datasource caption='TableauData (Electricity Access Urban)' name='excel-direct.42464.929428923600' />
            <datasource caption='TableauData (Electricity Access)' name='excel-direct.42464.922868634300' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42464.922868634300'>
            <column datatype='real' name='[Access to electricity (% of population)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Access to electricity (% of population)]' derivation='Avg' name='[avg:Access to electricity (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42464.924322743100'>
            <column datatype='real' name='[Access to electricity, rural (% of rural population)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[Access to electricity, rural (% of rural population)]' derivation='Avg' name='[avg:Access to electricity, rural (% of rural population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42464.929428923600'>
            <column datatype='real' name='[Access to electricity, urban (% of urban population)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Access to electricity, urban (% of urban population)]' derivation='Avg' name='[avg:Access to electricity, urban (% of urban population):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42464.922868634300].[none:Year:qk]' included-values='in-range'>
            <min>#2012-01-01#</min>
            <max>#2012-01-01#</max>
          </filter>
          <filter class='categorical' column='[excel-direct.42464.924322743100].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42464.924322743100].[avg:Access to electricity, rural (\% of rural population):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42464.929428923600].[avg:Access to electricity, urban (\% of urban population):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42464.922868634300].[avg:Access to electricity (\% of population):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.42464.924322743100].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel-direct.42464.924322743100].[avg:Access to electricity, rural (\% of rural population):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42464.929428923600].[avg:Access to electricity, urban (\% of urban population):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42464.922868634300].[avg:Access to electricity (\% of population):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.42464.924322743100].[:Measure Names]</column>
            <column>[excel-direct.42464.922868634300].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.42464.922868634300].[avg:Access to electricity (% of population):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42464.924322743100].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42464.924322743100].[Multiple Values]</rows>
        <cols>([excel-direct.42464.924322743100].[none:Country Name:nk] / [excel-direct.42464.924322743100].[:Measure Names])</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42464.922868634300].[Year]</column>
          <column>[excel-direct.42464.929428923600].[Country Code]</column>
          <column>[excel-direct.42464.929428923600].[Year]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Access to electricity by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Electricity Access)' name='excel-direct.42464.922868634300' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42464.922868634300'>
            <column datatype='real' name='[Access to electricity (% of population)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Access to electricity (% of population)]' derivation='Sum' name='[sum:Access to electricity (% of population):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.42464.922868634300].[sum:Access to electricity (% of population):qk]' num-steps='5' palette='tableau-blue' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42464.922868634300].[sum:Access to electricity (% of population):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42464.922868634300].[none:Country Name:nk]</rows>
        <cols>[excel-direct.42464.922868634300].[sum:Access to electricity (% of population):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Access to electricity map'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Electricity Access)' name='excel-direct.42464.922868634300' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42464.922868634300'>
            <column datatype='real' name='[Access to electricity (% of population)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[Access to electricity (% of population)]' derivation='Avg' name='[avg:Access to electricity (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.42464.922868634300].[Longitude (generated)]' field-type='quantitative' max='18927065.652133599' min='9466200.3441112973' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.42464.922868634300].[Latitude (generated)]' field-type='quantitative' max='4349851.0030607814' min='-2612137.1044396572' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.42464.922868634300].[avg:Access to electricity (% of population):qk]' num-steps='5' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42464.922868634300].[none:Country Name:nk]' />
              <color column='[excel-direct.42464.922868634300].[avg:Access to electricity (% of population):qk]' />
              <geometry column='[excel-direct.42464.922868634300].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42464.922868634300].[Latitude (generated)]</rows>
        <cols>[excel-direct.42464.922868634300].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Access to electricity by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42464.922868634300].[sum:Access to electricity (% of population):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42464.922868634300].[none:Country Name:nk]</field>
          <field>[excel-direct.42464.922868634300].[none:Year:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Access to electricity by %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[excel-direct.42464.924322743100].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42464.922868634300].[none:Country Code:nk]</field>
          <field>[excel-direct.42464.922868634300].[none:Year:nk]</field>
          <field>[excel-direct.42464.922868634300].[none:Year:qk]</field>
          <field>[excel-direct.42464.924322743100].[none:Country Name:nk]</field>
          <field>[excel-direct.42464.924322743100].[none:Year:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Access to electricity map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42464.922868634300].[avg:Access to electricity (% of population):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42464.922868634300].[avg:Access to electricity (% of population):qk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Access to electricity by country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Access to electricity by %' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO2dWWwcSZrfI4/KrPtknbxFHSR19kzfPb09M9s969kxZrHGAgsbu7AxsA1j
      AL8sYL/4pZ8W++IXv8z6wcbagGHAi1kbY0/PdE+LaknU2dOSSJEUKbLIKtZ931l5px9CHQpm
      kUWqSi21pPg/CMpg/jIiM7/84osvIrMowzAAEdGgop93A4hebBEDIhpKxICIhhIxoFdLuirf
      vH71yo07vbFvqVxG/y+kt7Yz5fh2/NADUiSIfqWU3VrOav4pP7+2crfVUZy+ETsNstm0zRVo
      dppAalqDk14b67PSt9dSo2MjDrWbbspWQ2yoIOTzl/MZf3T6jz/6AB2QfY4nQ/Ts5fWHby7e
      jouG002pilzK51RZi0XCTodLkQRH6JgXtBvcBAU6P3zvu598ftVONUTgOn3ilJeldLGk6IaF
      tuAHJB7olZNh6AagKAAMAChgAEBRFIX+du/LG9Nn3/TYHnkWXddp+nGco+s6RWH7D2BApiMS
      8BUHn/gQnU5ngFoJ+LKCZBRGNJSIARENJWJAREOJGBDRUHp2eSClU/tvv/x71h74J3/yjyjD
      YFgWGIamaTTDGppK0WBtdevUTPR//f0v7SMTP/3xD3XdYGmgExP/duvZGZCuSNlCQVfLn/5D
      RbG5rK6QXNzNV5s8Y620ytGxWQ/HHR/3Ob0xu1D/7Nef3Ppy6fhkeO69D+cnw8+skURPqmf3
      fFM043a5An631eH//h+8m916oFH86XMXYgG3x+MZCXjtVivNsvn0VkGjdV0OjridIxOvnzn+
      zFpINICeOJHYarVcLtcANZlAwzBQQtMw9D35UABgq2DJ06qRgN8EyHz88cdPxEud+ie//Wwz
      njp2/BiD3XIAQC27U2hSXrcVACDUijvpeiDgRn+VZZnnebS5Jx1OUYpQfZAqh/weVIJ2kGW5
      U839+jef0XbfiA87Z12+s7wZjYyggrXV1UyxMhII0DQFQbFVTldkv8cOANBVeXX1QSgc2ues
      DGV1fScU9O/bVHhqZcHwOG39Lw4ES5l4vmX43Xb8T+1q7v/+v09KTWlr9avltS1Wly5eXqy2
      5InRCEU9Asu5nZsrO9nNu7Qr5rZz2w8fAKvHxjF4Q9dX1/2hILW3xkJifSme316+bg9POXj2
      4foS7w6Vkxvbu2m718+z+BH2gL9fvNjV6Gs3b87MzNB77ybUxtKdYrXqCYQY6jFoYahPf/MJ
      Q2krO9knjoEMTby3ssGoyljM+dvfLc6fOpnLpUPBcLVS8ti83ujkL//7F1MnTxYKBbs9+Kt/
      SHz/p3/++twUwjWh+MmtLa28tbq68/Yf/PCrq5fe+ehHKzcuT5yZa0rg4v/5H+HJE5lM3k6r
      57734/deOwWphSvX3v3BH2my+F9+8Z9Y72g9nWKt1Ojsqc2vVu7cv2uXOgrvtAIlUayNjU+W
      M9u/X838+7/61wCAVr28eOvh75qFseljqZ2UhbXcuXXT4gt2CxnB6g3xYlVgFLE0PnNeU/SH
      d67WDO/P/uJPe8+6Vc7cXL32G4Xh5bItdLyaSdo8I//8n/3ZvpeoVkpndGrMpfztL/7rxKnT
      xULx1IU3z4TYnd10ptriLPSP3pj99ecLbY2utrT33ryA7lujkvn8s8vWTumC5vy72zdGJ6fC
      4dxXv18+Phl1cXS+WtOt/rCNK6Q37sWLP/83/8pCP0Krud1PP78r13N1jXtwf/nU6WP3H2wm
      N7fHJsaXl1ZCfluh0moIcsRNVVXXz/7yzxG4vba0c325oShyq1xtyCMea64iBIPebF2Z8BrF
      ijDitrJ2R6Oev3xr7d/+/OcOngEA6Kry5dVLK6vrqoUaIAaiGJbxuPi11QeKplXbytmz87VG
      S+x2FVmrF7KCohQLFaDpqioLolzd3bl98/fZcusRTTPbq3cyhabdYcnks7yVWV1daohSuVIT
      qvmaIBeKxamZydHYlNARUJWTUf9vfvW/791fShcbjVIhPHEsEgpqimQASpRlSRYVUZRklaJ0
      WVG3d+JSs6UaAABAUZShq+e++3a9XtN0RTeAoqpyt+tyR3wuW6vTNnTgc9p2NndEubudKrab
      1QNOmtZV7c3X5ovVRqVcljW90a4ffIXor64vXPz8SktWc7mcAYDUlQBFnZj/7s//5b+QmuVL
      N5YmY8HX33zdUCV9TwhBTYQcgckz+fSOpmrtppDejStC9/hUeCnTGg17i6mtblfaiScFsaNq
      GEixUTc7Nn8mGd/WdakjGYosAYrWVfm11+ZuPCj5aUU1KJvNuZvOSoqOOLc/wlDayZOToiQZ
      qqxp4MLsVLPR6oiiIEqGKhuA1mQpuR0XRElU1K+rA8dPnqQs/Mzc6SeOgcrl8iP3bhjG1z1R
      Or52d2Xz3Fvfn4x4DN2gaEo3DJqi8Im3brdrs9kAAOhPFE0buk7RNNANiqYAAI829wqC8FB4
      5ITasOfeURTaB9UIpesGTVOGrgPUPz7CH81Iw4b1griMR83Wvrx3983vvL5vU7GdDYqmjjJt
      2VOjYRiPzgUA8HD1K5EPnT8+rhuApinswvfU+PWf8CASnT5FAcMAsH8312gYOgDw9Dfv//5h
      Rf2jP3iLph6V4EfDQbHVeG5BNAFfDpCk6YiGEjEgoqFEDIhoKB08jDf0eq3J0lq2JgSdlroE
      psciz7BhRC+GDjSgUmrr6v3dAEfrOrUuy3aanRgNU6/wAmpDNwB++jQFANCwsTS1XyLuCY5v
      6AAfmNP0EWs0gYCigAG+0abiOtCAguNT/t0KkARNNwAwdEpXVVWRJF3XD0JeblWXEuXbW2hz
      9MevKXb3f/wPG6jktbe9P/oz78DHz+ysit0W2jx++t36aqp4/fHxYx+do0b8f/Pv1lHJme96
      fvJPfdnEWldoosKZ+XfqD9LFxce7Rf/wLBsd+eu/eoBK5i64f/oX/oGbiqtPJpp97exphlIL
      NSHg5BqiwVssvMXSarUORl4ANR5mG+sZtBl655Q16O6z/yslXVE1UUGbrNN6qK862IAo2uNx
      AwCcbj8AYPAn61smtSV2c4+TyJqk9Nn5qahbaAiZCtp0HQtzXsc3Xelgam7lC1ceO6oTP/sB
      ZTlksou8WPiNq5uvl798/I4w73d+aw1oABED2l/Z5JokPpqMo2l68sR3nm97vrUiBgQqRekX
      f/04Or7wtu+Dn7hUVdFUGZboA72A94qIGBAwDCB2Hw8tFfkVHWYOJvJsEQ2ll9wDqYpsGF97
      FIqyWPi+uxM9sV5yA8om12Tp61iYYY/Nvvl82/PyiXRhREPpRfVA1aVEdTmJNkc/Om+LvDTJ
      zhdJT8eAmlv5TurxF/YC3z3G7X0n4alLVzRNkNGm8arO0D13PR0DEsvN5sMc2vSeHgdkfuml
      0N2btV/+XRpt/ulfjp48t+cTdy9qF0b0jGSAPWtFepbzkCCaaCgRAyIaSsSAiIYSMSCioUQM
      iGgoEQMiGkrEgIiGEjEgoqFEDIhoKB2Sib57e3E73w66+KYIfvLjHzy119GIXhYdYkDNarnd
      aDksoz4LK8qy+gq/WEi0rw4xoGA0KtLegI9vCJSV4yiOe7ovFkrVtlx//OMd9piPsXJP8fhE
      37QOMaD582/Nf5PVN7dy1bsJtDnxJ2/YIsSAXiSRIJpoKBEDIhpK37r1QKW89D//8+O1quff
      9H7ne4d8nZnoOepbZ0CqohezEtpsNdQ+OxM9d5EujGgoEQMiGkrEgIiGEjEgoqFEDIhoKBED
      IhpK37ph/KugVkP52795/NG7uQvuD/54kJ+tGFKNal6WumhzJDI1wEGIAT0H6TpoVB9/3FNo
      P59cV7tZ6XYaaHMkPDnAQUgXRjSUnqkH0rQ9jxrDEP/3wuuZ3sJUfElVHk1TMCw3fcr8g21E
      L5xIF0Y0lIgBEQ0lYkBEQ4kYENFQIgZENJSIARENpUOG8dV8Jp6tRvz2mgjOzc48mzYRvUA6
      xICuX1+UaWelwFspRj4xZajqk/7OPNHLrUMMyOXxNpqKokqyTlP7fGLxQDVqyq0vHv/K2uRx
      e2yKvBj9EuoQA3r3/Q/agmznGVEFFoYBDCPLcn8Eqt1Urvy2hDbf+3AkNuUcqqVE30odYkAW
      zurjrAAA8iMlRPuKjMKIhtIeA9J1PZfLvei/y0z0LLXHgPL5/J07d1ZWVp5Xa4heOO2JgXw+
      n6qqLtdzWF750qhZK6jK1+MMivIHx55rc75x7TEgiqJmZ2eLxeLzas1LoEatIHXb8P/UK2BA
      e7qwzc3NjY0Nj8fzvFpD9MJpjwfy+/3NZtNisRy0NxGRSXs8kM1m43m+2+0etDcRkUl7DCib
      zeq6HolEnldriF447TEgjuMAAJIkHbAzEZFZe2KgaDR64sQJijpk1jObXFPVRyNVluVik9/o
      dziJvtXaY0BHzADJkoBSHbpFe/qNInpxRObCiIYSMSCioUQMiGgoEQMiGkrEgIiGEjEgoqFE
      DIhoKBEDIhpKh30fyDCKhRJLq1URHJ+IPZMmEb1IOsSAUvHVT69tTkbctEZNjUcpXScvFhLh
      OsSAsrk8kDqabtcMSlNVVZaJARHhOsSA3nr/w7lzLaBLTcngLRbeYiHvbBDhOvwbiW6PCwCX
      +xm0hegFFBmFEQ0lYkBEQ4kYENFQIgZENJSIARENJWJAREOJGBDRUCIGRDSUXp7fy2nWlYu/
      KqDN6VOOmfmX5+y+PTIMfXv9Ntp8eS6xKGhfXauhTYahZuZJ/vwbkY79bBfpwoiGEjEgoqFE
      DIhoKBEDIhpKxICIhhIxIKKhRAyIaCgRAyIaSsSAiIYSMSCioUQMiGgoHTIXtnTnZjxZ9rqs
      bYn+xz/5ITE3IpMOMYnpySnaYgc6G+BZSZZbrZau68+mZUQvhA7zQPfvu9xurxPUO8DKcRTH
      PZcXCw1dx9+HpWniCr8tOsSA3v/+R8+mHf21G19S5Effz2cYy/TsG8+3PURI5FEmGkrEgIiG
      EjEgoqFEDIhoKBEDIhpKxICIhhIxIKKhRAyIaCgRAyIaSsSAiIYSMSCioUQMiGgoEQMiGkrE
      gIiGEjEgoqFEDIhoKBEDIhpKxICIhhIxIKKhdCQDWr7z5cLil+Rnnoh6daRvJNaqAg9o7WX6
      oiLRU9KRPBDLaVVZZr7pthC9gDqST3n3/R8AADRVVVVVURTdoA3wyJx0gxZFUWOA4bSg/WVV
      0XTDF3x8BM6mKYpigMegAWhRFFV6L6gpmk7hIG/TFEXRDepxjY9AYy+oqkDeA9rNoHEQSEs4
      aHXoJhDsByq6qqj7gToOUqIoqrS+p0Zd05U9oM2hK4qi4TVSlCiKCrUHVAwNKHvO0ebsAQGQ
      JEntAXV5T412Z29TgShJCtgDipJEMwoO0qyqKDpOUUf/CUtN0zRN63Q6DocDAKCqKsuyAIDe
      EkVRAAAWi6X/bqhE0zSGYeCfdF3nOG4AUNM0nuefFNQ0TVXVAUBd12VZtlqtRwR1XacoiqIo
      XdclSbLZbE8KGoYhiuIAIABAEAS73f6kICoxDMMwDPg+pwl8glEYwzAcx7Esy3GcxWKRJElV
      VY7jeJ7nOI7jOMMwBEHgMFEUJYoiRVE4KMuyCdR1/YigoigHgbDwiKBhGJ1Ox2KxPGmNCLRY
      LLCQpmlRFAEAOKgoiizLvU2FNT4RCK+qqUZJko4IsiyLQIZhJEkyDAMHVVWVJMkE9h6q2+1C
      BP6LDjXgMH5zczObzQqCAACApm0Yxo0bN+r1OgAAni0A4M6dO9VqVVUff5c6Ho+n0+lOp4OD
      N2/erNVqAADYOADA3bt3K5UKDiYSid3dXVONN2/erFarvSB0gVC7u7uJROKgGhmGge7n3r17
      lUpFlmUEptPpnZ2ddruNg7du3eoFy+UyXmMul9va2jLVCEH4HEO/tbS0VC6X8RoLhcLDhw97
      a6xWqzi4vLxcKpWgDUGVy+X19XX41jkCb9++DUGKoqDfWl5eLhaLeI3VanVtbc1U45dffrnv
      ofDPIqysrBSLRVEUBzSgUCi0trYGzQWKoihVVZPJJL6b0+lcWVnB7SAYDK6vr/eCiUQCB10u
      18rKCn5XAoHAw4cPobkgUNf1nZ0dHHS73SbQ7/fH43ETaBjG9vY2Dno8nvv37+MX1+fzbW9v
      VyoVExiPx3HQ6/WurKzgt9Pj8SSTyXK5jIMURW1tbfUH3W53Op0ulUo4SNP01tYWHmn4fL6V
      lRXovaCcTmc2mz0U9Pv9Kysr3W4XlTgcjnw+XygUcJBhmHQ6jZdYLJaHDx/iBhQIBFZWVgRB
      GNCASqXSa6+91mw2UYlhGHa7HfamSIIgnD59Gr95lUrl/PnzJtBms0GPhdTpdM6ePYvfvGq1
      evbsWfzTDoZhWK1W6AZw8Ny5c/jNq9Vqp0+fhg8ZAqF/xsFWq3X+/Hm8xkajMTc3Bx0JDtrt
      dvxSNptNE9hsNk+ePAmdJQJZlnU6nZqm9QFbrdbMzAx+gw3DYBjG4/HgD2Gj0Th//jx+Vdvt
      9vT0NG5S0GN5vV78WarX6xcuXMBBQRAmJydxI4YeC784MAAKhUL4brVa7cKFC7VabRADMgzD
      6XQ+ePDA7X78YxSCIMAoG5V0u12n07mxseH3+xFot9s3NjZMoK7r+AUSRREePxAIINBms21t
      bblcLhw0DAO/QJIkOZ3OtbW1kZERBFqt1ng87nQ6cRB8Hen3ATmOSyQSMGBEIAyV0OdBZFnu
      BVmW3d3dhf4fgTRNC4IAA3AcxM+RYZhMJgO7GwQyDNNut9GTqShKL0jTdC6Xgx0cAlmWbTab
      6MlEIH47AACFQgE3Fwji9xFGmZVKBe2maRo8lM/nG9ADxeNxt9uNP9b1el0QBNxIVVXNZDJO
      pxP3N9vb206nE3ckjUaj0+mYwHQ67Xa7cXBnZ8dut+M1NpvNdrttAlOplNvtbjQaqDCRSPSC
      rVYLBzVN6wWTyaTVasU9UKvVajQaiqKgfgGBeKecSqV4nsfBdrvdaDTgGBOW6Lq+u7trqjGd
      TlssFtx1dTqdWq2GP5mapiWTSROYyWRYlsVrhKBhGOjJ1HUdgvhVzWaz0LJRiSAI1WoVd2bd
      brdSqVAUhR45GDnAQw1iQBRFjY+PQ8NEhfARxLswh8Ph8/na7TZ6FimKGhsb63a7JpCiKBy0
      2+1+v7/VaplAURRxMBAI0DSNgzabLRAImMDR0dFut4t3kYFAgGEY5AwAAFardWRkpBcURREH
      /X4/y7L414l4nu8FY7GYJEm9IBpUAwA4jgsGg72gLMs46PP54CmjSnmeD4VC7XYbOSqKoqLR
      6L6gruvoNDmOC4fDvaCiKDjo9Xrh4AsvsVqtaLQPAGBZNhqNttttq9U6oAeCteKPNawSjlCg
      aJqGHQHe6WqaZnpWYOt7QZ7n8fgAJmAOBXVdt1qtOAgvYi+I+4w+IH6OEGw0GsgDIRA/R9in
      4CC89Pj33fYFAQAUReHuGYLtdht5IDh04HkeP3EYMvfWKAgCchsURcFUmQnct8Z8Po9KoAlK
      koTcEjyU1Wqt1+uDzG4ZhtFsNm02G+pNAQCJRCIQCOAxf6PRgNUEg0EE1ut1h8OBg8lk0u/3
      ezweVNJsNmFyLxQKIbBarTqdTp/Ph3bb3d31er14cNNqtVRVtVgs4XAYgZVKxeVy4TWmUimP
      x4PHKO12G+Z7cLBcLrtcLrxG2LHabDbkDzqdDkyZ4E0tlUput9vr9SIwk8m4XC6r1Yr8Aezu
      TWChUPB4PPilyGazDocDZl9gSbfbhZ4YB/P5vOlS5HI5u90O006wRBTFbrfL8zx+O3K5nM/n
      w+O8fD5vs9nQwcHXQVIgEECuS5blTqcDneiAXdjx48c5jsMf6+npaavVio8gPB5PJBKhKAoV
      QtBiseDg1NSUzWbDO1232x2LxWiaxsETJ05wHIf31pOTk3a7HQddLlcsFmMYBu2GmoqDExMT
      DofDNAweHR09FBwfH3c6nTCBBkscDsfY2Nih4NjYmMvlkiQJeSC73T4+Ps6ybH9wdHTU7XbL
      soxAm802MTGBe3F0VXEwFot5PB5ZlpHrslqtk5OThzY1Go16vV48QIxEIj6fT1VVFE5xHDc9
      PQ0bP2AXBqMz09gbdk+m3WiaRh0/LNE07VAQZtOfSo0AgCOCeIyCQNNuaCpjABCGQWCvTCX7
      XgpTjVCmD0X2XlVd1/et0QT2Xhxd102fUtV1vfe7lHDYOKABwegSPzHDMCRJMiVXBEHgeR6v
      WxRFlmW/URAm+1GJJEmmkPmINUqSZArS+4D48WVZ7gVFUTwKCPYOROAcAs/zuB30gjDQ2Rfs
      XyMcUeIG1AvCEqvV2tsGeuDPncKZnWQyicdfgiDUajU8GQ07y/X1dRzsdDrJZBIfTAqCUK/X
      8WS0LMuCIGxsbOCn0el0dnd38eGrIAiNRgNPRiuKIggCXiMEU6kUHjULgtBsNk2gqalwLimd
      TuNRZ7fbbbVaeBYbgg8ePDDVmMlk8ABZFMVms9kLrq+vow4R1pjNZvFYXhTFVquFp78RiPwE
      rDGXy+EZVFhjL7ixsYH6NVhjLpfDs9iiKBaLxWKxaGoDnklXVbXT6Wxubg64REzXdbvdHggE
      8MyexWKx2WyTk5OohKZpu90+MTGBSmAuMRAI4LlEONs3NTVlAsfGxvAaYdiOx5hw0m16ehqV
      UBRlt9tjsZipqX6/H49qofvsBaPRKN5Um83m8/nwOJplWbvdfuzYMRMYiUR6m4pH7izLOhwO
      vEYAgN1uD4fD6MmGaU+fz4eShPvWCMFQKISefwSifCaqsRcMBoOmFIbX60WRNQRHRkbwOBq2
      YWZmxnSosbGxAT2QzWZTFAXPmQIATPkDuJuqqniGFGYUjgIqimIC4ZjuKCB+fJ7ne0Gr1WoC
      7XZ7LwhH2ibQFDFAEN+N53mYhjCBphxSLwibNABosVhM8w8QNPXdvSAMknpB0zlarVaapnsP
      ZbPZBjQglJvHx+1woIiXoN1QSbfbpShqABCutTDtdhCIj/LggMK0W7fbxQeMAIBOp2MCRVGE
      3b8JxIdv+zYVDtN6QXwUtu81hKOtfUHT3EIvqGlaL4iPwvYFFUVRVbX3GvYeCu6JXy6YXRvQ
      gODTWSqVUPIKZpM1Tdvd3UW79ZbAxSXlchkFTxCEqX20m8Vigal3vAQmdVDwBEHDMEy79R4K
      ppFQ8IQS33gMtC8IAKjVaih42heEjcfbAPep1+soeEJNxeO83hoh2Gg0UPCEauwFU6kUusfQ
      kTSbTRQ89akxlUohO2YYhqbpVquFgicIiqKIoqJ9rzPHcZqmZbPZJ1iRCNVqtZxOZ6fT6Z3T
      7na7cJoNbjabTRh/QA/8RKCmaQ6Hoxe0WCy4BzaBrVYLThniIJys3Rd0OBww/oBzai6X61BQ
      FEVVVRHY6XREURwAFARBEAS3290LsiyL96SiKMKTgmC322232x6PZwCw1Wp5vV4chNfBBEKH
      hxKt1WoV7gDNtNVqORwO6KqtVivz8ccfP4n9AJh43draWlpa0jQNz4devXqVZVkUOYqieOvW
      rXQ6HQ6HOY6DYDweX15eVlUVz/kuLi4yDINASZJu3bqVSqVwcHt7e2lpSZZlFK4ahnHt2jWK
      olDIKcsyBEOhEM/zOChJUi/o9/vhxUVgMBhE4M7Ozr1790RRRJG1YRjXr18HAAQCAQgqinLr
      1q3d3d2RkRGr1QrBRCKxtLQkCAKK5eFqO8MwUI0I9Pv9NpsNgslk8t69e51OBwdv3ryJg6qq
      QtDn8yFwd3f33r177XZ7dHTUBPp8Phg/aZoGQa/Xa7fbIZhKpe7du9dsNtF4BYIcx6HBSqPR
      uHnzZrFYhLlWWZYZhllbW1tZWRkwBoJrjhiGwcMIOD+CO2SPxxMMBsfHx02eHADQH3S73aFQ
      aHJyEnfIsO/D4w84K4T7VZfLFQ6Hp6amcIcMg2gTaPLtTqczEomYQDgCMDUVAJBMJvFMdC8I
      b4+pRhMIR3xTU1P4OcI0dy+YSCTwTHQsFjOBLpcLhoM4SNM0DlqtVgji/aPH4xEEwVQjTdP4
      XFg4HA4Gg7BtsASOYVmWbbVaAw7jnU7n/Py8Kd1UKpXwoTIAIBQKZbPZ8fFxVOJwOE6fPm0C
      y+UyPo8DwUwmc/bsWVRit9v3BU2jpFAolEqlTOCZM2fw3WAsZUr4hkKh3d3dM2fOoBKbzbYv
      COd6cTCZTJ4+fbo/CG8bnlYOhUKJRGJ+fh7txvN8L1ir1XRdxzPUoVBoZ2dnbm7OBOLdEATh
      /AMaUoXD4e3t7dnZWbQbx3G9YL1exwdcFEX5fL5Wq4U3DE4vut3uAYNojuOWlpZM87rz8/Om
      pPvY2NiJEyfwu87z/PLysmmB6dzcnOl2jo6OmkCO4+7fv28CZ2dnTQPOWCx28uRJ0xB3ZWXF
      tDL11KlTpmF8NBo9deqUCVxdXTWtTIVTcnhONhKJnDp1Cr8HLMuura2ZQDjrhI/Gw+Hw7Oys
      CXzw4IFpZerMzAw+mQoACIVCs7Oz+GQwy7Lr6+t46o+iqGPHjvE8j4PBYHBubg4HGYbZ2Ngw
      gdPT03jqCwBw/Pjx6elpk1UtLy8PuB4IAOB0Ok+dOoUnhTVNazab+Lxus9nMZDILCwv4AluH
      wzE7O4unoXvBVquVTqe/+OILvF+z2+29YKPRwF1Xu91Op9OXL1/GuycI4hlzTdPq9TqeAm23
      26lUygRarda5uTl8jQSs0e12Iw8Ek+NXr17FU8z7gvV63ev1og5FEISDQDyVoGlarVbz+/1o
      CN3tdpPJ5OLiIp5i5jhubm4OTyXoum4CRVFMJBKLi4t4QnlfsFqt4o9uqVSKx+MXL17Er2Eg
      EJiZmanX6wMaULFYrNfreNI5k8mY7EDX9Y2NjdnZWbxfK5VK1WoVB7PZbKPRMIGbm5snTpzA
      M7mVSqVSqeBgLpdrNBr48wTBmZkZPJNbrVbL5TKeDc/n841Gw+S34/H49PQ0DlYik1UAAAa+
      SURBVNbr9WKxaALr9TrMqiFwe3t7YmICTwE3Go1CoYCDhUKhXq/Dt2EQuLOzMz4+joPNZjOf
      z+MgvM4syyJHAqO30dFRPHfcbrdzuRweKhSLxVqtxjAM8tCGYezu7kajUTzF3Ol0TDFGqVSq
      1Wr4VYXrPOfm5nCrymaz7XZ7YmJiQANyOBzwlTxUAhcnmLJzPp9vfn4ef9YdDodpBfTY2JjF
      YjGBHo/HBNrtdnyBJgBgdHSU5/l9QXyexGazmcBYLGZaeQIAcLvd8/Pz+DwJemkQB202mykL
      CkH8IYHzjjgYjUbtdrsJdLlcc3NzeGcBJ01xMBKJwFE63tReEHaOOBgOh10ul6lGp9M5NzeH
      P5bQpnEwFAq53W5TjeFweH5+Hu/04X1UFOXRmvujC672SiQSMDuJ/2lzc/N3v/tdfzCZTMJl
      cibws88+OwooyzL+p62trf4gHN/BZV/4n+Lx+Keffqrr+pOC29vbn332maqqfcBUKtVut3vB
      zz//3FR4FHBnZ+fixYswLX4QmE6nW62WCUwkEgsLC9CG9gV1XU+n081msxe8ffv2vhQEu91u
      KpWCma1BPBBN0+l0emFhIZPJ4OWtVgv3q/uCmUzm0qVLeFQEAGi324eCuVxuYWEhlUqZQLwL
      6BVFUblc7tKlS3g4dUSwUCgsLCyYXlhrt9twLXYfsFgsXrp0yfTCWqfT8Xq9+67sQWC5XF5Y
      WDC9sNbpdGDasA9YqVQuXbpkeu+s0+m43W7TIMOkarV66dKlzc1NvFAQBNwT94phmIcPHy4s
      LFQqlUGG8RRFhcPhsbExPAzK5/OTk5N4p7MvGIlEotEovrIC9vpHAYPBIB625/P58fHxQ8Fo
      NOr3+/HoO5/PwyWCh4IejwePHPP5/Ojo6KFgLBZzOBx4EJ3P52OxmMvl6l3eZQJNr3MUCoVo
      NOpyufqbrGkdJgQjkYjL5epvsjDxiPfmhUIhHA7jMUCv4KJhl8tVqVQGjIHGxsZgTahE07Qv
      vvji1q1b/cFoNFosFnFQ1/XLly/fuHGjPxiJRCqVCg4ahnHlypVr1671B0OhUL1exyNHAMCV
      K1cWFxf7g9BecZCiqKtXr169erU/6Pf7TT6VpunFxcUrV64YfSeOfD6fIAi4a6Rp+tq1a5cv
      X+7/a+sej0eSJBxkGObatWtffPFFf9DtdiuKYlo9cv369aWlpT4UAGB0dDSXy8VisQETiXDA
      iT8WsVgsHA4fukLNarXiqTMAQDQaxdfEHCSe5/HUGQAgEomEQqEjgvh1DIfDJnvaV3CIi4Oh
      UAjWeNAyUxyEcRJsXjAYhKtwNE3rc4ksFosJHBkZGRkZgZ9A6FMjBGEoA8FAIBAMBuH3IUyL
      Z3CxLGsC/X7/yMiIKUnWK4/Hc/LkSZ7nBzEgTdN2dnYymYzD4Xj99ddhIZyT6m9AEMxmszab
      7Y033sDB/jXqur69vZ3L5TiOe+uttxA4MjLS/wmDr8DlcjmWZd9++20EBoNBfJ3DQWA+n6dp
      +p133sFBRVH6nCYCAQDvvvsuAuGrwX1CGV3XE4lEPp/Xdf29995DYDgcNr2eti9YKBRUVf3e
      976Hg3Dh6UEgjNDh5xbef/99BEYikT7GCgCQJCmdTsfj8QEXlFEUVa1WrVYrvn4PAHDs2DGX
      y9XHS1MUVavVOI4zgdPT03h2bl/V63WLxYIvNQQATE1NHQVkGGZfsA8FAGg0GjRNm8DJycn+
      ASYAoNls0jSNL6cEAExMTJjmeUyC6zEAAAOArVbLMAwTOD4+bkoo96rdbuu6bgLHxsYcDkf/
      q5rNZkdGRoLB4OBd2OTkJH4P0ul0oVCAYUqfbsVqtY6Pj+P3IJPJFAoFGBj1B0dHR00vWxWL
      xXw+D18eOgjked6Um89ms8ViMZPJ9AHhLOzk5CSeNcnlcsViMZ1Oh0Khg3wJBMfHx3G3ms/n
      i8UinO3v40t4nh8bGzOBpVIpmUx+9NFHfXwJx3GxWAyPgQqFQqlUSiQSH374oWm60AQeP34c
      D9eKxWKpVCqVSh988MFBFJy+hTM/gxgQTdPnzp0zFcKlenhOc18Qn+ZEYLfbxdOv+4L4NCeU
      KIrw4xIDgJ1OB1+C3SuKovD5UQS2Wq2pqan+gylTkAe+Xt8+PT3dfzBlCvIAAJIkNRqNY8eO
      9R9M7QvW6/VDQXxiFYGmqYJecRx34cIF+P+n9t1VnucnJiZMzvCI4Pj4eH/LOwgcGxvrb3kH
      gaOjo/2vUR+wv+UdBMZiMdOK+iOC0WjUtDD+iGAkEjEtgz86ePRzHGRFYv9ECAFfKfD/A1RA
      hJkQ+QjAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Access to electricity map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
