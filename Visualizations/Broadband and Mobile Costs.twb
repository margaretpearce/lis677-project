<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' inline='true' name='excel-direct.42472.868056562500' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Telecom Costs (Single Sheet).xlsx' password='' server='' validate='no'>
        <relation name='&apos;Cost Data$&apos;' table='[&apos;Cost Data$&apos;]' type='table'>
          <columns header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='as % GNI p.c. (Mobile cellular sub-basket, 2014)' ordinal='1' />
            <column datatype='real' name='USD (Mobile cellular sub-basket, 2014)' ordinal='2' />
            <column datatype='real' name='PPP$ (Mobile cellular sub-basket, 2014)' ordinal='3' />
            <column datatype='integer' name='GNI p.c., USD (Mobile cellular sub-basket, 2014)' ordinal='4' />
            <column datatype='real' name='as % GNI p.c. (Fixed broadband 2014)' ordinal='5' />
            <column datatype='real' name='USD (Fixed broadband 2014)' ordinal='6' />
            <column datatype='real' name='PPP$ (Fixed broadband 2014)' ordinal='7' />
            <column datatype='real' name='Speed in Mbps (Fixed broadband 2014)' ordinal='8' />
            <column datatype='string' name='Cap per month in GB (Fixed broadband 2014)' ordinal='9' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband postpaid)' ordinal='10' />
            <column datatype='real' name='USD (Mobile broadband postpaid)' ordinal='11' />
            <column datatype='real' name='PPP$ (Mobile broadband postpaid)' ordinal='12' />
            <column datatype='integer' name='Monthly data allowance (MB) (Mobile broadband postpaid)' ordinal='13' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband prepaid)' ordinal='14' />
            <column datatype='real' name='USD (Mobile broadband prepaid)' ordinal='15' />
            <column datatype='real' name='PPP$ (Mobile broadband prepaid)' ordinal='16' />
            <column datatype='integer' name='Monthly data allowance (MB) (Mobile broadband prepaid)' ordinal='17' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband postpaid 1GB)' ordinal='18' />
            <column datatype='real' name='USD (Mobile broadband postpaid 1GB)' ordinal='19' />
            <column datatype='real' name='PPP$ (Mobile broadband postpaid 1GB)' ordinal='20' />
            <column datatype='integer' name='Monthly data allowance (GB) (Mobile broadband postpaid 1GB)' ordinal='21' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband prepaid 1GB)' ordinal='22' />
            <column datatype='real' name='USD (Mobile broadband prepaid 1GB)' ordinal='23' />
            <column datatype='real' name='PPP$ (Mobile broadband prepaid 1GB)' ordinal='24' />
            <column datatype='integer' name='Monthly data allowance (GB) (Mobile broadband prepaid 1GB)' ordinal='25' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GNI p.c., USD (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Fixed broadband 2014)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Fixed broadband 2014)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Fixed broadband 2014)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speed in Mbps (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Speed in Mbps (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Speed in Mbps (Fixed broadband 2014)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cap per month in GB (Fixed broadband 2014)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cap per month in GB (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Cap per month in GB (Fixed broadband 2014)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband postpaid)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband postpaid)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband postpaid)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (MB) (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband prepaid)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband prepaid)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband prepaid)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Monthly data allowance (MB) (Mobile broadband prepaid)]' peg='0' size='500' />
      </column>
      <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile cellular sub-basket, 2014)]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile cellular sub-basket, 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile cellular sub-basket, 2014):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Telecom Costs.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:22:59 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]' formula='SYS_NUMBIN([Monthly data allowance (MB) (Mobile broadband prepaid)],500)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11' timestamp-start='2016-05-01 05:22:59.495' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Cap per month in GB (Fixed broadband 2014)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cap per month in GB (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cap per month in GB (Fixed broadband 2014)</remote-alias>
              <ordinal>0</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unlimited&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>3</remote-type>
              <local-name>[GNI p.c., USD (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>2</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>949</statistic>
                <statistic aggregation='Max' datatype='integer'>53986</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>3</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>4</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>60</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-alias>
              <ordinal>5</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>500</statistic>
                <statistic aggregation='Max' datatype='integer'>2048</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-alias>
              <ordinal>6</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>500</statistic>
                <statistic aggregation='Max' datatype='integer'>4200</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>7</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Fixed broadband 2014)</remote-alias>
              <ordinal>8</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>7.1500000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>78.280000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>9</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.4400000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>51.590000000000003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband postpaid)</remote-alias>
              <ordinal>10</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>5.1699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>11</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.46</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband prepaid)</remote-alias>
              <ordinal>12</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>5.1699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>13</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>9.0399999999999991</statistic>
                <statistic aggregation='Max' datatype='real'>29.600000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Speed in Mbps (Fixed broadband 2014)</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Speed in Mbps (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Speed in Mbps (Fixed broadband 2014)</remote-alias>
              <ordinal>14</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.5</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Fixed broadband 2014)</remote-alias>
              <ordinal>15</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.8900000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>51.299999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>16</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.4900000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>22.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband postpaid)</remote-alias>
              <ordinal>17</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.0</statistic>
                <statistic aggregation='Max' datatype='real'>22.100000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>18</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.5</statistic>
                <statistic aggregation='Max' datatype='real'>22.100000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband prepaid)</remote-alias>
              <ordinal>19</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.0</statistic>
                <statistic aggregation='Max' datatype='real'>15.779999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>20</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.7599999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>19.399999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Fixed broadband 2014)</remote-alias>
              <ordinal>21</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.69999999999999996</statistic>
                <statistic aggregation='Max' datatype='real'>14.789999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>22</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband postpaid)</remote-alias>
              <ordinal>23</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>4.1200000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>24</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.48999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>5.1500000000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband prepaid)</remote-alias>
              <ordinal>25</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.26000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>7.3099999999999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>26</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.19</statistic>
                <statistic aggregation='Max' datatype='real'>8.6199999999999992</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid) (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid) (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>8</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.283082' measure-ordering='alphabetic' measure-percentage='0.636516' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Fixed broadband 2014):qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid):qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile cellular sub-basket, 2014):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid):qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid 1GB):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid 1GB):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TableauData (Mobile Cellular Subscriptions)' inline='true' name='excel-direct.42472.869711678200' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Mobile Cellular Subscriptions.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' name='Year' ordinal='2' />
            <column datatype='real' name='Mobile cellular subscriptions (per 100 people)' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile cellular subscriptions (per 100 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile cellular subscriptions (per 100 people)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Mobile cellular subscriptions (per 100 people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Mobile Cellular Subscriptions.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:23:58 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='202' timestamp-start='2016-05-01 05:23:58.506' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>0</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BRN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VNM&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>1</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mobile cellular subscriptions (per 100 people)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mobile cellular subscriptions (per 100 people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mobile cellular subscriptions (per 100 people)</remote-alias>
              <ordinal>2</ordinal>
              <family>TableauData$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>202</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.015785413008589301</statistic>
                <statistic aggregation='Max' datatype='real'>158.130119762151</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>TableauData$</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1996-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#32a251'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#82853b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#acd98d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TableauData (Internet Users)' inline='true' name='excel-direct.42490.980789548600' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Internet Users.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Year' ordinal='2' />
            <column datatype='real' name='Internet users (per 100 people)' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet users (per 100 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet users (per 100 people)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Internet users (per 100 people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Internet Users.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:23:34 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='194' timestamp-start='2016-05-01 05:23:34.989' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>0</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BRN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VNM&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>1</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Internet users (per 100 people)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Internet users (per 100 people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Internet users (per 100 people)</remote-alias>
              <ordinal>2</ordinal>
              <family>TableauData$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>188</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>82.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;01/01/1996&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;01/01/2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='excel-direct.42472.868056562500'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.42472.869711678200'>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.42490.980789548600'>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='excel-direct.42472.868056562500' target='excel-direct.42472.869711678200'>
      <column-mapping>
        <map key='[excel-direct.42472.868056562500].[none:Country:nk]' value='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='excel-direct.42472.868056562500' target='excel-direct.42490.980789548600'>
      <column-mapping>
        <map key='[excel-direct.42472.868056562500].[none:Country:nk]' value='[excel-direct.42490.980789548600].[none:Country Name:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Internet users by cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
            <datasource caption='TableauData (Internet Users)' name='excel-direct.42490.980789548600' />
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42490.980789548600'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Internet users (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Year]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Internet users (per 100 people)]' derivation='Sum' name='[sum:Internet users (per 100 people):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42490.980789548600].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;01/01/2014&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42490.980789548600].[none:Year:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42490.980789548600].[none:Country Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='log'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42490.980789548600].[sum:Internet users (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Fixed broadband 2014):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.869711678200].[Country Name]</column>
          <column>[excel-direct.42490.980789548600].[Country Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance postpaid (500mb)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (MB) (Mobile broadband postpaid)]' derivation='Sum' name='[sum:Monthly data allowance (MB) (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='9'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='log'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (MB) (Mobile broadband postpaid):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance postpaid 1GB'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:Monthly data allowance (GB) (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (GB) (Mobile broadband postpaid 1GB):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance prepaid (500mb)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (MB) (Mobile broadband prepaid)]' derivation='Sum' name='[sum:Monthly data allowance (MB) (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='13'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (MB) (Mobile broadband prepaid):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance prepaid 1GB'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:Monthly data allowance (GB) (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.42472.868056562500].[none:Country:nk]' />
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (GB) (Mobile broadband prepaid 1GB):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Postpaid computer-based (1GB)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.869711678200].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42472.869711678200].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.869711678200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.868056562500].[Country]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Postpaid handset-based (500MB)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.869711678200].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42472.869711678200].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='8'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='exp'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.869711678200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.868056562500].[Country]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Prepaid computer based (1GB)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.869711678200].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42472.869711678200].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.869711678200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.868056562500].[Country]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Prepaid handset-based (500MB)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.869711678200].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42472.869711678200].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.869711678200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.868056562500].[Country]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.868056562500].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Fixed broadband 2014):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid 1GB):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.42472.868056562500].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[none:Country:nk]</rows>
        <cols>[excel-direct.42472.868056562500].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Mobile Cellular Subscribers vs Cost'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='15' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6482' id='14' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='93518' id='7' param='horz' type='layout-flow' w='100000' x='0' y='6482'>
              <zone h='93518' id='5' type='layout-basic' w='82262' x='0' y='6482'>
                <zone h='46759' id='1' param='vert' type='layout-flow' w='82262' x='0' y='53241'>
                  <zone h='46111' id='10' param='horz' type='layout-flow' w='82262' x='0' y='53241'>
                    <zone h='46111' id='12' name='Postpaid computer-based (1GB)' show-title='true' w='41352' x='0' y='53241'>
                      <layout-cache minheight='165' minwidth='145' type-h='scalable' type-w='scalable' />
                    </zone>
                    <zone h='46111' id='11' name='Prepaid computer based (1GB)' show-title='true' w='40909' x='41352' y='53241'>
                      <layout-cache minheight='165' minwidth='145' type-h='scalable' type-w='scalable' />
                    </zone>
                  </zone>
                </zone>
                <zone h='46759' id='3' param='horz' type='layout-flow' w='41131' x='41131' y='6482'>
                  <zone h='46759' id='4' name='Prepaid handset-based (500MB)' show-title='true' w='41131' x='41131' y='6482'>
                    <layout-cache minwidth='145' type-h='fixed' type-w='scalable' />
                  </zone>
                </zone>
                <zone h='46759' id='13' name='Postpaid handset-based (500MB)' show-title='true' w='41131' x='0' y='6482'>
                </zone>
              </zone>
              <zone fixed-size='160' h='93518' id='6' is-fixed='true' param='vert' type='layout-flow' w='17738' x='82262' y='6482'>
                <zone h='39384' id='8' name='Prepaid handset-based (500MB)' pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' w='17738' x='82262' y='6482'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Monthly Data Allowance vs Cost'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6482' id='12' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='92870' id='10' param='horz' type='layout-flow' w='100000' x='0' y='6482'>
              <zone h='92870' id='1' param='vert' type='layout-flow' w='82262' x='0' y='6482'>
                <zone h='46435' id='3' param='horz' type='layout-flow' w='82262' x='0' y='6482'>
                  <zone h='46435' id='4' name='Monthly data allowance postpaid (500mb)' show-title='true' w='41907' x='0' y='6482'>
                    <layout-cache minheight='165' minwidth='151' type-h='scalable' type-w='scalable' />
                  </zone>
                  <zone h='46435' id='5' name='Monthly data allowance prepaid (500mb)' show-title='true' w='40355' x='41907' y='6482'>
                    <layout-cache minheight='165' minwidth='141' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
                <zone h='46435' id='6' param='horz' type='layout-flow' w='82262' x='0' y='52917'>
                  <zone h='46435' id='7' name='Monthly data allowance postpaid 1GB' show-title='true' w='41020' x='0' y='52917'>
                    <layout-cache minheight='165' minwidth='133' type-h='scalable' type-w='scalable' />
                  </zone>
                  <zone h='46435' id='8' name='Monthly data allowance prepaid 1GB' show-title='true' w='41242' x='41020' y='52917'>
                    <layout-cache minheight='165' minwidth='139' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='92870' id='9' is-fixed='true' param='vert' type='layout-flow' w='17738' x='82262' y='6482'>
                <zone h='39384' id='11' name='Monthly data allowance prepaid 1GB' pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' w='17738' x='82262' y='6482'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Postpaid computer-based (1GB)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
          <field>[excel-direct.42472.869711678200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Prepaid computer based (1GB)'>
      <cards>
        <edge name='left'>
          <strip size='168'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
          <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
          <field>[excel-direct.42472.869711678200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Prepaid handset-based (500MB)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
          <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
          <field>[excel-direct.42472.869711678200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Postpaid handset-based (500MB)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
          <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
          <field>[excel-direct.42472.869711678200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Internet users by cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[sum:USD (Fixed broadband 2014):qk]</field>
          <field>[excel-direct.42490.980789548600].[none:Year:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance postpaid 1GB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance prepaid 1GB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance postpaid (500mb)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance prepaid (500mb)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Mobile Cellular Subscribers vs Cost'>
      <zones>
        <zone name='Postpaid computer-based (1GB)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Prepaid computer based (1GB)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Prepaid handset-based (500MB)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Postpaid handset-based (500MB)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Prepaid handset-based (500MB)' pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Monthly Data Allowance vs Cost'>
      <active id='12' />
      <zones>
        <zone name='Monthly data allowance postpaid (500mb)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance prepaid (500mb)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance postpaid 1GB'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance prepaid 1GB'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Monthly data allowance prepaid 1GB' pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Postpaid computer-based (1GB)' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Prepaid computer based (1GB)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Prepaid handset-based (500MB)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Postpaid handset-based (500MB)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO2deXRb93Xnf+9hX4h9IRYCJLjv4CZRokVKlLVZ8pqMnbhZTpLJmU4n05NO
      2mk707Ru2pzTeuK2qeM0p40T20mzOI4TRxJJ7ZREcRfFfSdBkMQOEPv+lvkDDi1CEgUCJAFS
      7/OHjg6Ai3vx+H2/9b77g3AcBwQEyQKnOwCCvQ05ObNIJEI0XQQgaQF5vV4mk7nJB0wm0+Tk
      ZFNTE51Oj3sLQRAyOUm/6bLFMAyCIAiCdt8vAACGk+woduFyQck1JG63m8vlbv6ZsbGxhYWF
      U6dOMRiM+1+PRCJUKjUJp2m0RVEUAEAikfaQ3xRdJ2i7g2OgysrK0tLStrY2j8ezc14I0svO
      DqKLiorq6uouXbrkdrt31BFButhZAUEQpFarGxsbr1y5sra2tqO+CNLCjk/jIQhSKpWNjY3X
      rl0zm8077Y5gl9lMQDiGGlaMaDTY29W95vYM9PU5vIEkfMQ01NzcfPv2baPRmGyoBJnIZgKy
      r8xf7uodvnNLZ1jpvXmbRGMNdo8m7Ukqlba2tnZ1den1+qS/hCDT2GyiL1Lly+YNCBasr6vo
      7OjPyS8AAPP7/QiCIAgSiUQ2/2qLJ/Qn748uOYJ/8nT+f6lTAgCysrJaW1uvXbsWDoeLioqS
      CBdF0cf63Qnb2DpQbFK9y37B7yfzu+w6QdtN14FwTL9iyBayu/tGSivK52em8ku1MhEHJLYO
      9IPOhX/omAYACFjUoW+eWH/d5XJ1dnbm5+eXl5dvdYmMWAfaNdcJ2m661AjBalUOAOBY61EA
      QLZEvKUI5Dw6DAEMBzmCDQuJTCbz9OnTN27cCIVCdXV1SS+zEmQCSa5zJ8KZShmC4XpH4NN1
      yri36HT6008/3dnZ2d3d3djYmPRye+aD4/idhbUf9+irlbz/cayATkmyLclYdnAr41Gst40I
      gvT29oZCoZaWFgqFsiXbVPwmQdJdiT+MHPtOp9UbBgC8+dmaZ6vlu+M3xp7Zyrj44buv/7/v
      XOvpnl61JG5FJpMPHz7M5XLb29tDodC2REKwy2xP32FcWYyGqGb9XO/ldps3kC0V250+fxAT
      QF5crMIt8zArhw37/AiFwUJdroDNsaY98erXXz0Nw3BdXd3U1FR7e/uxY8d4PN62xJM5MKmk
      f3yp4p0efZWSd6JMmu5wtp/taYFCEVijYN8dvOfx+8+8/BXL/KyisNRuNVndIYPFQGFwWCBq
      XQurBAxHEKmvqWSJFUHXx7tjMAyXlZXV1NRcvXrVarVuSzyZAwRBTfmCd7988Bsni/ffAAhs
      1xjIZlqe01uKijThQCCLL1odu/PPb/80t+7EmfoiKpPV8etfPfOZLwromNkdVUh5DCZjamwq
      r7RCxGXd/50Gg6Gnp6exsVGhUDwq8yajx0A4PtrX2T82f/L5l1WSTy5OJBKeGh2tqm9Y/0le
      4/zokl9ZmK8Ws7fB76PZhcu1U4Noj9vNzuLAMARwHEHR++dZm0TmdDqvX79eUVFRVFT0oIZQ
      DI9EInQaNbnErp0WUNhl/Ps3fvz1r33+dmf39MKCqrh4fuyeJ4Iz2TLP4k1ZWWuJijUxay7U
      SPtu3OBpWrhcyOc0nH75SzX5ilT8bsKeGUQ/CIfLhWEIAAAgKPFZOp/Pf+aZZ2ZmZgYHB+Pe
      mjC6W9/obHnj9rWpDO3mIBjCMRzForPTU07X2sBwX7Ykl5+jYEXdKk2lBHg7r/SdPJz3g3//
      z8995hmPyzExrzctzc4abekOPCXSOY3f5ANdXV0wDDc1Na1P7//0VyMf3F0FANSoeL/5o6ad
      8PsgOI4v2v0YhucKGTAEPa4lwCfv3ukdnT9yuLGrt0+uUudIZVGAoj6/07rkIYmq1Lyee/NN
      Bys6b96pqGzweNdWVlfqnnq6Mv+Rc/vMb4EyUUAAABRFBwcH7Xb7sWPHYsnXP7i58A/t0wCA
      l+uVr3+6eof8xvHRsOEvfj2GA/wvTxd/rlFNbGU8SIYuAZNIpAMHDkxMTFy+fLm5uVkgEHyp
      KZfPpPpDkZfqcnYtjIujpmAUBQBcGDV+rlG9a373EJm4D4XjeDAUgiCosLBQW1Nz/fr1Zb2e
      QiK90pDzuYM5PObHt8Xmjxa5ApHfjRjnLN5UHj86ViIhwRAJhlpLJEl/yf4mE1sgPOp/8Xjr
      f7Rf//oXPvt/XvuWP4K/8ca3mk59ig7TC1RSuVyiW9SvWD2Ix1FRWTy77Djx9FEaecO8LBRF
      v/TOwL1lF5NK+vC/Hy6RcZKL5DMNOZUKLorjZdmPmW8/sWSigAAAzYcr/+kv/hLi5V3+7Qdz
      S6vSwtxfvP9+ZMV0+tmnLTYXTEYMFr9IplpeHh0aXS0sry3O2TAg84aiUyYPACAQQccN7gQF
      hCJB3cpagVo0ODqeV1AqZDNxJKjm0rPYtKQzcvY9GSkgCC6sbvVPjDzXWLs0OyrgccVcISgB
      S8EgoACdG/mDpwqvBWd4AgnkXuPzOQBC4r6Az6S+WKP4cMigEbGOFCWchYLj773zwz84VfvR
      jemmJs/q3JyIGZkwMLjMQKm2wbYwAfEVmFPv8EfJdMEXPvcKk7oPV5a3SobOwtbBMQxAEARB
      OIZhODj/wU9mLaGvfv5lDpdLgmEcxwB4+AOjURQzuUN8JiWLTknYL/7+D77Tq/edPFL08w86
      uUIOl4wKuaqskrq12V6n1bTgxBoLlR5yMJvCfebVr+aIWZt+WzK/N47Mn4WRXnvttUe9h2PI
      6rKRy+MYl5chEml4aIiaxWfRqQCAcDj84DPLCYKiaOJXZP2BYgiCYBjSFJXlyCRdXV08Ho/D
      4fz+XexWx8VL1zsX5pazstVcJgUAAGHIyuywzRuViQX3+x0fHeUIxWT4oWvZUIFGYfZTD1Zq
      FOo8PIw81dzstq1pGw8L6FAUwbNlyvrayhy1Si1TyHJUDGpC7feWfm8csds76Zy7VFwnaLtZ
      C2TTz17smXj13FPffevnzU211Cy+1ew9daoR7GIL9FBbu91+8+bN0tLS0tLSmLx8TsvfvvH6
      83U1P7o6/NyJE8vzo4xsJQczj+pDAhosVKiNc5O83CJ20NoxMPvWW2/xGVu7rERK66PY7B4S
      qzTZ86uTI8M8LtVscebxRfhWkuofReqZ3hwO5+TJkzdv3jSbzQcPHqRQKBQqlUqjkkmkF77w
      yq0LvyX5Akb9SoWY5lxDwjA+tqSr0x5F/Wtzy95DFcWRSCSyxT8JkVT/KB6TVL+yalQqFXaL
      mc5kjY6N5Jdos4VZIN0tUOz/GIb19fU5HI6WlhY2k94/fE8jFASYfINuTjc9RebLSxRZbh+y
      qFvkCLOLCwoQJOiz6BfWkJdfeo5O3lqnQLRAjyLTB9Gb2+I4Pj8/PzIycvjwYbn8MdmixFMZ
      O2GbkdP4hImtVnM4nO7u7uLi4pKSEuIZj11mP1xuqVR6+vRpnU7X1dUVjUbTHc6TxX4QEACA
      wWCcOXOGyWS2tbURpWR2k30iIABALD9fq9VeunRJp9OlO5wnhb09BoojVo6IzWbfuXPHbrfX
      1tYmPfwkSJD90wKtIxQKT506FQwGr1+/HggkU4+GIHH2oYAAADQa7ciRIyqVqq2tzWw2ExWJ
      d4591YXdDwRBxcXFQqHw1q1bBQUFFRUV6Y5of7I/W6B1RCLR2bNnHQ7H1atXg8FgusPZh+xz
      AQEAaDRaS0uLWq3u6OgwGAxGV3DJ7scwolPbHvZtF3Y/MAwXFRVxudx3fnP53TE/EKj+7HTZ
      l5/KS3dc+4H93wLFgCBIIBDY+WVrTpdjZuD9ntl0R7RPeFIEFONwUTZTXUnhyXiOiZWVlXSH
      sx94IrqwdV6qVRZI2IEwWiKi3LrZqdPpGhsbk96vJgBPWgsEAKhS8hrzhTwu55lnnmEyme3t
      7Xa7Pd1B7WE2y4nehF3LiU7a9ne/+ndcnOcyGugM2r2u613TNhYchCh0i2E1hEJBt8MTRsVc
      VhCFf/nu2zCZBEh0HueRD3+lkpu8v3OiN3RhOI6HQqFQKMRkMmk0GsDxSDRKIZM8Xj+LzQoG
      Agwmi0zaG42Wz+v+4Ef/ygKk5bWoQsxyh0JzIzwUWTA62VIqumzQRyKUbBmbxMuXUcB//uTd
      mXnbr3/3c0FWVroD32NsEJDT6TQYDDiOoyhaVFQUsK1cvDPZUpe/sLLqduMkCuAIVa1PVaUr
      1i0BwzAEWOeO17/90R2H1cYSSV0OC49Hyy/XykMrTo8DggWq3KwbXdPySr7L5ydB4d9eaD96
      sD4vLy+5+kNPJvEprVNTU0ajUaPR5OXl4Thy6catk81NF893MNlsdX7R0vzqoaaqWFJ9VrI3
      6+50YfcTRVAKmRQJh6k0WuwVHEMxAMEAx3CIRIJRFIVJJJ/X29XVxWQyDx48GNdBp3JiYSq/
      N8UTC3e7CwMABAIBt9sdq5kKAUjI5c2O9jsRoBaLx8eGVIVVLBYLAOB2u/fQqYPrFpvb0oTC
      Z599dmxs7Nq1a3V1dSqVav0tIif6UWwQkNVqDQQCTCbz44R5iNRQVwsAKKkFAIDK6sp937bD
      MFxdXS2Xy3t6egwGQ11dHTHJ35wNbaNEIpFIJGz2wycj+14964jF4tOnT5NIpIsXLxLZIJsT
      37maTCYYhru7u/1+f1oCyhCoVGpDQ0NjY2N3d/fg4CCCxNdvIIgRL6CcnJxIJHLkyJHNT/V+
      EoAgSCaTnTt3DkGQ8+fP22x7uxrmDhEvIJvNlp+fbzabn5wOa3OoVGpjY+OhQ4e6urr6+vqS
      flJ4vxIvIIVCMTIykpOze3UIMx8IgrKzs8+ePQsAaGtriy2VJWJo84bnrT50X+cexU/jjUYj
      k8nU6XQCgSAtAQEAfKGoN4RIOHTSw4uwpAcqlXrgwAGbzdbd3S0SiWprazfv5ccN7q++N7jm
      j7zaoPib5/fG6msSxLdAcrk81oulJRoAwKoz8Kl/6zn2RufrHdOZljcIQZBEIjl79iyLxWpr
      a9Pr9Zs0RVenLCZ3KIxgv75n2s0gd5l4AZnN5kOHDqUxV+bKpGXG4g1FsZ/06mMldjMNCoVS
      U1PT2to6MjLS19f3qI/VqwVUMgwAaMzbb0cQ3U98F8ZgMJaWllAU9fl8j1oQ2lEqFVwaGQ4j
      WJWSS91iEZbdRCAQnDt3bmho6MMPP2xubhaJRHEfeKpQdPF/PmV0h+pz9vMG7Ya9MBzHY8UJ
      KBTK5rOwnSvvguP4uME9b/W1lkq5jPhjDDPttB4cx1d1Mz989+dVNXX1tVUKZa7TthqIwiQS
      JstWkqCP/TqsNolMRtp6IsMe28pYXl6OLSTy+fzCwsLkHD8IFg3OLuiZHH6OXPoQVeKY3eUS
      8QUruvlAFOTm5VYqeZXKzZp9n9tFZnHp5PQPsSEIElOdqwEQ7PjN2z96q+noc4UK3sicubJM
      SYtEAmSOlIYuWH1CNpPDJi3bAs2NlV13Bqu1lQN3x59/+TMyHuPxPjKbDQKiUqkIguA4vr0b
      QCHT4L98/xoM/C+9cNJtc9Q0NnrstvHJKU1Fnd8wQxWrzdbVV559/p//6q8aTjVfuJWVzyGL
      8yodC3dxnqamWGqzOsbnV+srcodnDNWF8nsTC5jTLqhqsC0tHDpUM9B7l0olFVY01lVotjHm
      xMFxYDevHmw5zrNN4H7DD390XqN9Sm/QeYzhEkXW2wOGLz6t+d6FqQOVtCp17r+++X0qg9E/
      OhLxeUsbn5bx9vxyyQYBxZpKEom03WWa8GDQT4vYrnVdLc2Wj89PTw93kRlV0+/9m87sobF4
      +fWFAACeIPulT73wf//xjeU1jDIww8BDfKmb4uXcm1ia06+Ylgum55ZWl3MXRyc4PAXd6bLM
      jy86zHK+MOBArFev1FX8t22NOVHIbMlXvvqHzzU33LrZniPPprPES0YbjAncpjGX5oSKPTti
      R/7rp1soDKRQIePys4cnJqUyqclg5TJpaQl4e9kgIL/fH2t7trcmAYkhVsgETLq8uExRnqv8
      xa/bq+tKOfwyVEGWLy4iTLFSLQQAcAT0f3nzvePNJ4fvjZKYgkKJkEtHbvaP5aqlZBqTyeKV
      l5IZfKq6uCSLJ0UxlF9cwhLJSovyUJwSdjq3MeAtQeHnP9ecDwBobjkDAPjG/6oJBoP9/f1Y
      CPr0uVPW+prS8tL1Fr2oHBw7eTpdoe4EGwbRgUDAbrfjOC4SiWJ5P48ihUE0HolE1y9ozHvc
      gB3H8Y9fuS84CAI4DqLRaGyA/1DDzdnNvBwcx81m88DAQFZWVk1NTdKHCWf+IHpDVxUOh6em
      plAU3cnN5w1/8oem+X3yCvQJ6xXp1//N5N262EbsmTNnpFJpe3v76Ojofq29Fz+NR+8/3xTH
      w+EIlUp2uj1cDsfr9bLYWRQyCWRMldZds02lJXA6nZOTk3a7va6uTi6Xb2l8mfkt0IYxEARB
      y8vLOTk5sXG0TT9z8c7koRL5onUtEoZhEsbiKVqPJHNa4JMMi8VqamoyGo1DQ0MzMzP19fWx
      QxrSHdf2EJ9UPzExYTaby8vLs7OzY0n1HBSU1RW+/97V1ueeXppbPfTU3kuqT912W5LqY1Wt
      R0dH8/LyKioqErm/Mz+pPl5A/f39DodDLpdXV1cDHL07PKYWs24OTGoKC5YX5tXF1dqSXEB0
      Ycn6xXEcQZB79+7pdLrq6uqioqLNxZH5XVi8gKanp0dHRw8fPqxUKtdfjE2LPpkcEQJK2a/b
      7R4aGvJ6vbGB0aPatswXUPxmaiQSUalUcXl3909/CLYFLpfb0tJiNBrv3bs3NzdXXV3N4/H2
      4hXe0H7iOO71esPh8MjIiM/nS1dMTwgwDCuVyjNnzsjl8suXL/f29u7FInzxjzazWCwqlcpk
      Mvfi3bAXIZFIRUVFeXl54+Pj58+fjx2C9slKSsYTPwZCEMTlcgkEgs0Hd8QYaCf8BoPBu3fv
      GgwGrVZbWFgIw/DeGwN5vd7YjhiHk+RR2QRJw2AwmpqanE7n8PDw3NycVqvNzs7O8K4gvpmZ
      mpqampqanSVKCKaHWC3HY8eOHThwYHR0tKOjI8MfjY1vgSQSSTgclkqlaYmGIEYse//UqVN6
      vb6vry8rK6u2tlYgEGRgaxQvIIvFUlFRkZZsaII4SCSSWq1WKpUrKyudnZ1isbi2tpbFYmWU
      jOK7MD6f397evra2lpZoCB6ERCLl5+e/+OKLUqm0o6Ojt7c3o1ZY4gXk8XhOnjxJ1J3MNGAY
      Li4ufuGFFzgcTkdHR3d3d4bIaIOAotEol8sdGhoSi8XpCohgE8hkcnl5+bPPPhurL9vb2+v1
      etMb0gYBeTwev9/P5/MzRN0ED4VGo2m12nPnzlEolEuXLqVXRhsExGAwnE4ngiDEIlDmw2Aw
      6urqzp49S6FQ2tra+vr6AoHA7k/4NwiIyWTy+XwOh+NMX446wZaIyej555+nUCjnz58fGBjY
      5UMaN0zjvV6vxWIxmUxsNjsnJ4eYzO8V6HR6TU1NZWXl9PT07du3xb9nux/Peggb9sJCodDk
      5KRYLObz+Zurh9gLy1i/OI4HAoHJyUmdTpeTk1NRUZFc7mgyT2XQ6XQMw+bn5+9fBwp51m7c
      uGmxO7pu3zbaPUmEQrCbQBDEYrHq6+vPnj2L43h7e3tPT8/OjbIfklBWXV29tLS0XiXZsDi2
      op8z2pyVZSXjdyezTxyINVqpjNf2nG2KPzktfplMZn19vVarnZmZuXLlilgsLi8v31LaWiJ+
      4wWkVquHhoZqamrWX3Gs+eoP1NzqHMZwDAVYOBxGUTSVZ8dQFE16MT5dtrHk9uT+kOnyG3NN
      oVAqKipKS0uXlpYuX77MZrO1Wm0ie50Jhh2fD9Td3e1yuSQSSX19feyVSMDdNzBWoa2am54s
      KK0WcBiAGAPtBb8PusYwTKfTTU9P4zheVlamUqk2yVxLPqler9c/VqSEgDLf76NcYxjmcDiG
      h4fdbnd5eblGo6HRHlLmIZlBNI7jbre7pKTEarUmFzFB5gPDsFgsPn78+PHjx51O54ULF3p6
      ejyeJKdHG1owu92+trbm8Xjy8ogTjfc5sTJihw8f9vv9c3NzV69eFYlEhYWFUql0S6tHGwQU
      G6gbjcZdXs0kSCMsFkur1VZWVi4tLfX29lKp1JKSErVanaB5/BgqGo0iCLJ5bReC/Ucs6yg/
      P99ms42Ojg4ODubn5xcXFz92ETJeQH6/PxwO79daJASPRSwWt7a2BoPBsbGxtrY2qVRaXFy8
      Sb/2kFkck8ncQ88lEWw7EAQxmcyamhqtVmswGIaGhiAIys3N1Wg0D560HD+Nj0ajZDL5sStI
      xDQ+8/2m6HrdFsdxh8MxPj7ucDikUmlFRQWHw1lvkOJbmu7ubi6Xq1QqH6ycTfBkAkGQSCQ6
      evRoMBicm5u7desWmUwuKytTKBQUCuUhj/XMzMxwOBxCQARxMBiMqqqqiooKi8UyMzPT29ub
      n58fLyCn0ykQCFwuV1pCJMhAluz+P/7FPZs3/M1zZc9UymAYlslk2dnZ0Wh0ZmYmPic6NkoS
      CoVpipYg4/hZ//LoqtvkDv3TlU+eV4YgiEqlVlZWbhAQlUqNpSPFNoEJCAAASj4jNqXK4T/k
      YIYNXRidTi8sLJRIJDabjdjNIIjxSkMOBYbt/vDL9Q85mGGDgDwez9DQ0NraWmNj426FR5Dp
      0Mikzx5UPerdDQLy+XyRSITNZhOnXD+ZBJdv/6wL/8qrTYPdXSSenIG4g2Setqzg23/9NYwh
      80aji4MzeSpeabn21vCCAPJ86c+/vUFAEokkNzfXYDAQK9FPKBAAOAitGT/66Hcz1lCZWkUJ
      uAq+/XcYjobDkTylglEn/7PPl/3N67/xOR0uLCwRsjcIhUwmO53OSCRitVrlcnnsRRxDLRab
      QCR0ra1xBSIaJclVUYLMByKz7vZ/CDmlniCSxWAzoICXJaDDsFxT/tzLf8iK2r7xjb97/W3d
      sdNHAnQV09k/pzfFb2VMTk66XK7c3Nx1Ac3c7Z1asXDZnBCCUBni4y1aQGxl7JbfcATxhqMc
      Bi250z+Tdo2hKIKiFDIZBxC86dnZ8V2Vx+NRKBQWi2VdQGtOK5dDX5xdbTnRsjRv8Pv9sUr1
      caWAEwdF0T1nG6tUH5PRrvmNotj//nDi2rT1sEb43VeqaFvXUIqXK5GPxbdAkUjEZDIplcr1
      u81hWuwanMhVa5b1i7kl2srCHEC0QLvid3TV9dL3uxEMhyHws682Nmq2vLqbhiKbPp8vGAwG
      g8H1J1OFMs1z5/IABFVVlmVUbax9j4zLEGfRTO4Qj0lRCZjpDufhxAtobm4uGAz6/f66urr1
      Fz/WDaGe3UWcRXvvyw09C44DGqE8U4/n3SCgcDjM5XLNZnNZWVm6AnrSwFDEbDKhOKDQ2RIh
      L27EqhGxNCKWPxBfwR6JRCAKlZQBd/QGAdlsNpPJBEGQ3+9PV0BPGkg0fPujH7XPhxtKKsoL
      RTaXD0LB4ab6a9d7DjRqJyfmzpw9+d233vnmX3zNZpi/0TN+QFvcc3cqallUHT1rHb936MS5
      HHE6izltEJBIJPL5fB6Ph8nM0B53/0Gls06eeGqVF8Bs+htXR+hcslwg+/of/+23v/XFP/3r
      Pz/74pe+99037QEKAOAHb3zPCUVv3e4LeNYqCwrcvW0TU6YZF/rNP/p8GuOPHwMZjca6ujqD
      wUCUit41KCyhKptFZeBiIZ8jpEq4fBRifvDb22dPnDtwoLH0uZM/fPPNt956K7emgby6nMUT
      uu0MqUzig3GlOFxWVJTe4DdM4z0ez9TUlNlsPnDggEwm28SMmMbvrF8cxwEOQfFnZWAYBkMQ
      BnAIQAAAHOAQgDeZ2+z2qc2x0ogNDQ02my05rwTbAwRB0EOWDWEYBhAEQ3Ds/E0Y2kw9u8OG
      KBEE4fP5U1NT2dnZ6QqIYG+xQUArKys3btzw+/2ZfLoHQUaxQUBqtfrkyZMQBBF1ogkSZIOA
      5ufnBwYG2Gw2g5Gh654EmcaGaXxRUVFRuqeFBHuLHa8jTLC/IQREkBKEgAhSghAQQUokJKCA
      zxeNRk1GYyhKPO5DsIHHCwhDgj/+j3cmRobHJqa77oztQkwEe4jHP/813HU5DKAlnam8tnpp
      3kgk1e+yX5Bwfvv2uk7QNj6p/kEwFF2anaVx2PeGR/KKteUFSkDsxu8Fvym6TjKp/kFgEklT
      WgoAkMuVRFI9QRxbmIUR6iF4EGIaT5AShIAIUoIQEEFKEAIiSAlCQAQpQQiIICUIARGkBCEg
      gpQgBESQEoSACFKCEBBBShACIkgJQkAEKUEIiCAlCAERpAQhIIKUeHxGokE3OTA6IxTKrRaD
      qkjbUKnZhbAI9gqPF5AoO1e5YtabLdW1DUtzBr9GSiTV76ZfkNlJ9Y8X0OJ47+UR3fGaksHB
      XomiiMViAQDcbveeS4wnkup3wvbxAiptaC1tAACABgyFYeKoHoINbGEQTaiH4EGIWRhBShAC
      IkgJQkAEKUEIiCAlCAERpAQhIIKUIAREkBKEgAhSghAQQUoQAiJICUJABClBCIggJQgBEaRE
      ogLC0Oi9u4OuQHhHoyHYcyQqoOXpMRSi9t4e3tFoCPYcCbdAGEZnMCCQZG4lwX4lUQEpC4od
      ltUybemORkOw53h8ofE4YpXqg8Fg0qcaIghCJj8+lTajbGPJ7TCczJwjXX5TdJ2g7Za/PZZU
      DwBIulJ9KlXu02UbCoUgCKLRaHvIb4quE7RNUp4UCiU5wz1qC8Nw0nXWU/Gb9PMYqbtO0HbL
      XRgBwf2QXnvttSTMvPaVC22XXQFYIeVdOn9+dmlVk58Hb3qPfmwShJVS3ge//Kk7TFHKJQne
      1DiODd++aMHF2Tx615VLgyMTuUXFFDjRJkE3NTi85MpTiPtvX+kfW1Sr1RRyYqMKHO+/fbOn
      f0iqznOvzF6+1gnofLEgKzFb9HrHpbsjU/mlxcPd13qG59RqNZWcYIuCD3Xf6eyLkAoAAATj
      SURBVOq7m5Ob71qdvXS1E6NyJUJOYrZAPzV65UYng69iorZ3f3mBxRWL+OwEbQEANy/8BuVk
      c6mg4/yFhRVrvka9Seub5OjMYjFXHjrk8VgxJExliTgQHkEf05JZLOaqQ4c9biuGIQwa22wz
      Ylto/CARlxmI4gBggQipRMReC25hQSGLzcHQKAA4hkAY4nUHt7AcWq6tpkEYCYatK6aG5qP2
      1dWETWFtbRUJwmGAY1EAYf4tLMPioLy2GvO7/BHEumxsOHrcvrqSeMxyTWE2h7Tm8fo8QYko
      a8ViTtzWrBufWrUHAsGw35slVlORMLbpXylJAYkEopHuPgqJumyy+dYMtlD4se2BiC8c7u6l
      kKi6lVWURAFoFCSsHwiCuDwBDIGFRR0J9U2YHRzaFiLP4vLIZNLC4gJGIeFRJHHZ4gBc+uBX
      XpxmMy1RuFn9tzpZInGitljkg5/+kszizC8uYFQSjiB44j8YgLuDg2QW02rUkbmc/s5rLJEk
      cVvd7MRaBEZc+lVPBMVwgGGJ2zK4Ik2O0O+ymZw+h2Heg+Kbj/2SHwNhGAbBMBSbakLQ5v3X
      AyYoBCU5LMVxHMcBnHD/FWeNYjgp2VkximHJ2ibh9xOTrfv9xBbDUAgmJXexMAwD0GOuNDGI
      JkiJfb4b77Sb19x+p8sJAAA47rSbF3T6UCjocvsiQZ/X6/GFH3mMcMjvttpsgTAS8LkD4SgA
      AEUiPn8QANxps/l+P5AK+7xh5OF9RCQUdNnXHjo69Ho8D71zUTSKoJ98G44hHo8fx3GPx+ty
      uRL/4btGkutAmQo2dncwQmJzKFEXQm2oLh0ZvOf2BXgqTcsBfsRvvXZjsDhf1L+yPDA88mxz
      tckdoSnrqkTY3ZGJnIJStUwwMTyA04UVJQUQwLrv9Ad8NoqkHNF3iWpPR+0Gcbag687IkWNH
      HdP9AV4BM+rOKSxH9KM9FqSxstBkNDAZ1CjM5NNRszOcrxD0dnWjQQhky1oOVM1NjYlkKqfF
      mCWRIx7ryKz+s595ZWlqxOoK5+VIZhaNpcXqmVkdkxQOQHw87C0sK1+Zm2ILRZEQHvVal8wh
      ARduPv40lZRZ93yS0/gMBY/euT2wvLQC0IDO6KqsKGaz6Garxb1mJbGFLNRpjwpoiEW/bMkv
      yBvoH5JkZ5M4cqZ31U3OWpqdzlNKR8f1SqUgi8OFQXRGb6TDjEjE7rN6fKGgOrdg6F6fMrfU
      pJ/0WG02r9PtC4bdXj4Nysov6Gtr48oUNos/6llecbr0Or3N6SwpybebnOWHq/quXPVHovrl
      RTJXGjAvrflJPCYpN79gqPeujEf5RcfgqQZVx81Jl8PMEglA0MuUFU90X/YEo8vLy26LnSKV
      k1GMxyBnieUMambd85kVTcrgLA6NlsWmZdGlNAAAEAp5cnWRY2WODMMsSSF97JoFQYtKS3jS
      HCmLSuHwYTYV8oD58ZHq2hqjZY1Jj+hNViRK0mgUIBSRKuQk2BeWF1AYJP3CbGlR9cqSXp5X
      AnN5OE9sM61KFKosZmRsfKSy4YBIoTQg4/6wJBsOwUJyXq5sYcmoKsiZHx0rraxesZg5PJ5S
      IaOGOYbVZT9gQACEQu4FG/2Z5ur+KXN1lcawauBn8fXL4zrbYG1F9dKKmcXhZQskVvsqnSP1
      hux0Wsb9vf4/jh++XfHkEVAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Internet users by cost' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance postpaid 1GB' width='192'>
      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
      mvQgJEmS/j/U69+U+Kf6DQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance prepaid 1GB' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance postpaid (500mb)' width='192'>
      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
      Gx2J/P8B5KyB6QFkf6YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance prepaid (500mb)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mobile Cellular Subscribers vs Cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly Data Allowance vs Cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
