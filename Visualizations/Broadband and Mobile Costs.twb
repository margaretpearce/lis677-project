<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' inline='true' name='excel-direct.42472.868056562500' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Telecom Costs (Single Sheet).xlsx' password='' server='' validate='no'>
        <relation name='&apos;Cost Data$&apos;' table='[&apos;Cost Data$&apos;]' type='table'>
          <columns header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='as % GNI p.c. (Mobile cellular sub-basket, 2014)' ordinal='1' />
            <column datatype='real' name='USD (Mobile cellular sub-basket, 2014)' ordinal='2' />
            <column datatype='real' name='PPP$ (Mobile cellular sub-basket, 2014)' ordinal='3' />
            <column datatype='integer' name='GNI p.c., USD (Mobile cellular sub-basket, 2014)' ordinal='4' />
            <column datatype='real' name='as % GNI p.c. (Fixed broadband 2014)' ordinal='5' />
            <column datatype='real' name='USD (Fixed broadband 2014)' ordinal='6' />
            <column datatype='real' name='PPP$ (Fixed broadband 2014)' ordinal='7' />
            <column datatype='real' name='Speed in Mbps (Fixed broadband 2014)' ordinal='8' />
            <column datatype='string' name='Cap per month in GB (Fixed broadband 2014)' ordinal='9' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband postpaid)' ordinal='10' />
            <column datatype='real' name='USD (Mobile broadband postpaid)' ordinal='11' />
            <column datatype='real' name='PPP$ (Mobile broadband postpaid)' ordinal='12' />
            <column datatype='integer' name='Monthly data allowance (MB) (Mobile broadband postpaid)' ordinal='13' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband prepaid)' ordinal='14' />
            <column datatype='real' name='USD (Mobile broadband prepaid)' ordinal='15' />
            <column datatype='real' name='PPP$ (Mobile broadband prepaid)' ordinal='16' />
            <column datatype='integer' name='Monthly data allowance (MB) (Mobile broadband prepaid)' ordinal='17' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband postpaid 1GB)' ordinal='18' />
            <column datatype='real' name='USD (Mobile broadband postpaid 1GB)' ordinal='19' />
            <column datatype='real' name='PPP$ (Mobile broadband postpaid 1GB)' ordinal='20' />
            <column datatype='integer' name='Monthly data allowance (GB) (Mobile broadband postpaid 1GB)' ordinal='21' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband prepaid 1GB)' ordinal='22' />
            <column datatype='real' name='USD (Mobile broadband prepaid 1GB)' ordinal='23' />
            <column datatype='real' name='PPP$ (Mobile broadband prepaid 1GB)' ordinal='24' />
            <column datatype='integer' name='Monthly data allowance (GB) (Mobile broadband prepaid 1GB)' ordinal='25' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GNI p.c., USD (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Fixed broadband 2014)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Fixed broadband 2014)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Fixed broadband 2014)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speed in Mbps (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Speed in Mbps (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Speed in Mbps (Fixed broadband 2014)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cap per month in GB (Fixed broadband 2014)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cap per month in GB (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Cap per month in GB (Fixed broadband 2014)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband postpaid)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband postpaid)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband postpaid)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (MB) (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband prepaid)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband prepaid)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband prepaid)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Max Cost' datatype='real' name='[Calculation_2170502013938548]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX(&#10;MAX(&#10;MAX(&#10;MAX([as % GNI p.c. (Fixed broadband 2014)],[as % GNI p.c. (Mobile broadband postpaid 1GB)]), &#10;[as % GNI p.c. (Mobile broadband postpaid)]),&#10;[as % GNI p.c. (Mobile broadband prepaid 1GB)]),&#10;[as % GNI p.c. (Mobile broadband prepaid)])' />
      </column>
      <column caption='Economy Classification' datatype='string' name='[Calculation_7610502200112783]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt;= 1045) &#10;THEN &quot;Low income&quot; &#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt; 4125) &#10;THEN &quot;Lower-middle income&quot; &#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt;= 12746)&#10;THEN &quot;Upper-middle income&quot;&#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &gt; 12746)&#10;THEN &quot;High income&quot;&#10;ELSE &quot;No data&quot;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Monthly data allowance (MB) (Mobile broadband prepaid)]' peg='0' size='500' />
      </column>
      <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile cellular sub-basket, 2014)]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Calculation_7610502200112783]' derivation='None' name='[none:Calculation_7610502200112783:nk]' pivot='key' type='nominal' />
      <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile cellular sub-basket, 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile cellular sub-basket, 2014):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Telecom Costs.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:22:59 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]' formula='SYS_NUMBIN([Monthly data allowance (MB) (Mobile broadband prepaid)],500)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11' timestamp-start='2016-05-01 05:22:59.495' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Cap per month in GB (Fixed broadband 2014)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cap per month in GB (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cap per month in GB (Fixed broadband 2014)</remote-alias>
              <ordinal>0</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unlimited&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>3</remote-type>
              <local-name>[GNI p.c., USD (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>2</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>949</statistic>
                <statistic aggregation='Max' datatype='integer'>53986</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>3</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>4</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>60</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-alias>
              <ordinal>5</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>500</statistic>
                <statistic aggregation='Max' datatype='integer'>2048</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-alias>
              <ordinal>6</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>500</statistic>
                <statistic aggregation='Max' datatype='integer'>4200</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>7</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Fixed broadband 2014)</remote-alias>
              <ordinal>8</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>7.1500000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>78.280000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>9</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.4400000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>51.590000000000003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband postpaid)</remote-alias>
              <ordinal>10</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>5.1699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>11</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.46</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband prepaid)</remote-alias>
              <ordinal>12</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>5.1699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>13</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>9.0399999999999991</statistic>
                <statistic aggregation='Max' datatype='real'>29.600000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Speed in Mbps (Fixed broadband 2014)</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Speed in Mbps (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Speed in Mbps (Fixed broadband 2014)</remote-alias>
              <ordinal>14</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.5</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Fixed broadband 2014)</remote-alias>
              <ordinal>15</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.8900000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>51.299999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>16</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.4900000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>22.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband postpaid)</remote-alias>
              <ordinal>17</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.0</statistic>
                <statistic aggregation='Max' datatype='real'>22.100000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>18</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.5</statistic>
                <statistic aggregation='Max' datatype='real'>22.100000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband prepaid)</remote-alias>
              <ordinal>19</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.0</statistic>
                <statistic aggregation='Max' datatype='real'>15.779999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>20</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.7599999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>19.399999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Fixed broadband 2014)</remote-alias>
              <ordinal>21</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.69999999999999996</statistic>
                <statistic aggregation='Max' datatype='real'>14.789999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>22</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband postpaid)</remote-alias>
              <ordinal>23</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>4.1200000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>24</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.48999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>5.1500000000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband prepaid)</remote-alias>
              <ordinal>25</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.26000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>7.3099999999999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>26</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.19</statistic>
                <statistic aggregation='Max' datatype='real'>8.6199999999999992</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid) (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid) (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>8</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.554439' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Fixed broadband 2014):qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid):qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile cellular sub-basket, 2014):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid):qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid 1GB):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid 1GB):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_7610502200112783:nk]' type='palette'>
            <map to='#1c70ae'>
              <bucket>&quot;Upper-middle income&quot;</bucket>
            </map>
            <map to='#26456e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#69afd5'>
              <bucket>&quot;Lower-middle income&quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TableauData (Mobile Cellular Subscriptions)' inline='true' name='excel-direct.42472.869711678200' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Mobile Cellular Subscriptions.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' name='Year' ordinal='2' />
            <column datatype='real' name='Mobile cellular subscriptions (per 100 people)' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile cellular subscriptions (per 100 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile cellular subscriptions (per 100 people)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Mobile cellular subscriptions (per 100 people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Mobile Cellular Subscriptions.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:23:58 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='202' timestamp-start='2016-05-01 05:23:58.506' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>0</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BRN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VNM&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>1</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mobile cellular subscriptions (per 100 people)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mobile cellular subscriptions (per 100 people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mobile cellular subscriptions (per 100 people)</remote-alias>
              <ordinal>2</ordinal>
              <family>TableauData$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>202</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.015785413008589301</statistic>
                <statistic aggregation='Max' datatype='real'>158.130119762151</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>TableauData$</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1996-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#32a251'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#82853b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#acd98d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TableauData (Internet Users)' inline='true' name='excel-direct.42490.980789548600' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Internet Users.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Year' ordinal='2' />
            <column datatype='real' name='Internet users (per 100 people)' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet users (per 100 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet users (per 100 people)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Internet users (per 100 people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Internet Users.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:23:34 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='194' timestamp-start='2016-05-01 05:23:34.989' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>0</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BRN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VNM&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>1</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Internet users (per 100 people)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Internet users (per 100 people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Internet users (per 100 people)</remote-alias>
              <ordinal>2</ordinal>
              <family>TableauData$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>188</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>82.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;01/01/1996&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;01/01/2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Telecom Costs Grouped)' inline='true' name='excel-direct.42492.894420509300' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Telecom Costs Grouped.xlsx' password='' server='' validate='no'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Service' ordinal='1' />
            <column datatype='real' name='as % GNI p.c.' ordinal='2' />
            <column datatype='string' name='Pre or Post Paid' ordinal='3' />
            <column datatype='integer' name='Data caps' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Service</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Service]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Service</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c.]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>as % GNI p.c.</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pre or Post Paid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pre or Post Paid]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Pre or Post Paid</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data caps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data caps]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Data caps</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Data Cap (GB)' datatype='real' name='[Calculation_7510505153128292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data caps]*0.001' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Pre or Post Paid]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Pre or Post Paid]' derivation='None' name='[none:Pre or Post Paid:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Pre or Post Paid:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Postpaid&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Prepaid&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='excel-direct.42472.868056562500'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.42472.869711678200'>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.42490.980789548600'>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='excel-direct.42472.868056562500' target='excel-direct.42472.869711678200'>
      <column-mapping>
        <map key='[excel-direct.42472.868056562500].[none:Country:nk]' value='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='excel-direct.42472.868056562500' target='excel-direct.42490.980789548600'>
      <column-mapping>
        <map key='[excel-direct.42472.868056562500].[none:Country:nk]' value='[excel-direct.42490.980789548600].[none:Country Name:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Costs Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.868056562500].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Fixed broadband 2014):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid 1GB):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid 1GB):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.42472.868056562500].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Fixed broadband 2014):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid 1GB):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid 1GB):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.42472.868056562500].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.42472.868056562500].[:Measure Names]</column>
            <column>[excel-direct.42472.868056562500].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.42472.868056562500].[:Measure Names]' value='135' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[none:Country:nk]</rows>
        <cols>[excel-direct.42472.868056562500].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Costs and Data Caps by Service'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs Grouped)' name='excel-direct.42492.894420509300' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42492.894420509300'>
            <column caption='Data Cap (GB)' datatype='real' name='[Calculation_7510505153128292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data caps]*0.001' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='string' name='[Pre or Post Paid]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Service]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c.]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pre or Post Paid]' derivation='None' name='[none:Pre or Post Paid:nk]' pivot='key' type='nominal' />
            <column-instance column='[Service]' derivation='None' name='[none:Service:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7510505153128292]' derivation='Sum' name='[sum:Calculation_7510505153128292:qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c.]' derivation='Sum' name='[sum:as % GNI p.c.:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42492.894420509300].[none:Service:nk]' />
              <shape column='[excel-direct.42492.894420509300].[none:Pre or Post Paid:nk]' />
              <tooltip column='[excel-direct.42492.894420509300].[attr:Country:nk]' />
            </encodings>
            <reference-line axis-column='[excel-direct.42492.894420509300].[sum:Calculation_7510505153128292:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='Above line: Unlimited' label-type='custom' scope='per-table' value='4.5' value-column='[excel-direct.42492.894420509300].[sum:Calculation_7510505153128292:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42492.894420509300].[sum:Calculation_7510505153128292:qk]</rows>
        <cols>[excel-direct.42492.894420509300].[sum:as % GNI p.c.:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Economic Classifications by Gross National Income per capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column caption='Economy Classification' datatype='string' name='[Calculation_7610502200112783]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt;= 1045) &#10;THEN &quot;Low income&quot; &#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt; 4125) &#10;THEN &quot;Lower-middle income&quot; &#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt;= 12746)&#10;THEN &quot;Upper-middle income&quot;&#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &gt; 12746)&#10;THEN &quot;High income&quot;&#10;ELSE &quot;No data&quot;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[GNI p.c., USD (Mobile cellular sub-basket, 2014)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7610502200112783]' derivation='None' name='[none:Calculation_7610502200112783:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GNI p.c., USD (Mobile cellular sub-basket, 2014)]' derivation='Sum' name='[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[excel-direct.42472.868056562500].[none:Calculation_7610502200112783:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Lower-middle income&quot;</bucket>
              <bucket>&quot;Upper-middle income&quot;</bucket>
              <bucket>&quot;High income&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.42472.868056562500].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.42472.868056562500].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' scope='cols' value='Gross National Income per capita (USD)' />
            <format attr='subtitle' class='0' field='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42472.868056562500].[none:Calculation_7610502200112783:nk]' />
              <text column='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' />
            </encodings>
            <reference-line axis-column='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Avg: $&lt;Value&gt;' label-type='custom' scope='per-table' value-column='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' z-order='1' />
            <customized-label>
              <formatted-text>
                <run>$</run>
                <run>&lt;</run>
                <run>[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[none:Country:nk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Internet users by cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
            <datasource caption='TableauData (Internet Users)' name='excel-direct.42490.980789548600' />
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42490.980789548600'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Internet users (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Year]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Internet users (per 100 people)]' derivation='Sum' name='[sum:Internet users (per 100 people):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42490.980789548600].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;01/01/2014&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42490.980789548600].[none:Year:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42490.980789548600].[none:Country Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='log'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42490.980789548600].[sum:Internet users (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Fixed broadband 2014):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.869711678200].[Country Name]</column>
          <column>[excel-direct.42490.980789548600].[Country Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance postpaid (500mb)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (MB) (Mobile broadband postpaid)]' derivation='Sum' name='[sum:Monthly data allowance (MB) (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='9'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='log'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (MB) (Mobile broadband postpaid):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance postpaid 1GB'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:Monthly data allowance (GB) (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (GB) (Mobile broadband postpaid 1GB):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance prepaid (500mb)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (MB) (Mobile broadband prepaid)]' derivation='Sum' name='[sum:Monthly data allowance (MB) (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='13'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (MB) (Mobile broadband prepaid):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance prepaid 1GB'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:Monthly data allowance (GB) (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.42472.868056562500].[none:Country:nk]' />
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (GB) (Mobile broadband prepaid 1GB):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Postpaid handset-based (500MB)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.869711678200].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42472.869711678200].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='9'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='exp'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.869711678200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.868056562500].[Country]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Prepaid handset-based (500MB)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.869711678200].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42472.869711678200].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' scope='cols' value='Cost as % of Gross National Income Per Capita (Mobile broadband, prepaid)' />
            <format attr='subtitle' class='0' field='[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.869711678200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.868056562500].[Country]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Mobile Cellular Subscribers vs Cost'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='15' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6482' id='14' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='93518' id='7' param='horz' type='layout-flow' w='100000' x='0' y='6482'>
              <zone h='93518' id='5' type='layout-basic' w='85689' x='0' y='6482'>
                <zone h='93518' id='3' param='horz' type='layout-flow' w='42844' x='42845' y='6482'>
                  <zone h='93518' id='4' name='Prepaid handset-based (500MB)' show-title='true' w='42844' x='42845' y='6482'>
                    <layout-cache minwidth='145' type-h='fixed' type-w='scalable' />
                  </zone>
                </zone>
                <zone h='93518' id='13' name='Postpaid handset-based (500MB)' show-title='true' w='42845' x='0' y='6482'>
                </zone>
              </zone>
              <zone fixed-size='160' h='93518' id='6' is-fixed='true' param='vert' type='layout-flow' w='14311' x='85689' y='6482'>
                <zone h='39384' id='8' name='Prepaid handset-based (500MB)' pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' w='14311' x='85689' y='6482'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Monthly Data Allowance vs Cost'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6482' id='12' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='92870' id='10' param='horz' type='layout-flow' w='100000' x='0' y='6482'>
              <zone h='92870' id='1' param='vert' type='layout-flow' w='85689' x='0' y='6482'>
                <zone h='46435' id='3' param='horz' type='layout-flow' w='85689' x='0' y='6482'>
                  <zone h='46435' id='4' name='Monthly data allowance postpaid (500mb)' show-title='true' w='43470' x='0' y='6482'>
                    <layout-cache minheight='165' minwidth='151' type-h='scalable' type-w='scalable' />
                  </zone>
                  <zone h='46435' id='5' name='Monthly data allowance prepaid (500mb)' show-title='true' w='42218' x='43470' y='6482'>
                    <layout-cache minheight='165' minwidth='141' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
                <zone h='46435' id='6' param='horz' type='layout-flow' w='85689' x='0' y='52917'>
                  <zone h='46435' id='7' name='Monthly data allowance postpaid 1GB' show-title='true' w='42755' x='0' y='52917'>
                    <layout-cache minheight='165' minwidth='134' type-h='scalable' type-w='scalable' />
                  </zone>
                  <zone h='46435' id='8' name='Monthly data allowance prepaid 1GB' show-title='true' w='42933' x='42755' y='52917'>
                    <layout-cache minheight='165' minwidth='140' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='92870' id='9' is-fixed='true' param='vert' type='layout-flow' w='14311' x='85689' y='6482'>
                <zone h='39384' id='11' name='Monthly data allowance prepaid 1GB' pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' w='14311' x='85689' y='6482'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Prepaid handset-based (500MB)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
          <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
          <field>[excel-direct.42472.869711678200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <axis>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Postpaid handset-based (500MB)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
          <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
          <field>[excel-direct.42472.869711678200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Internet users by cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[sum:USD (Fixed broadband 2014):qk]</field>
          <field>[excel-direct.42490.980789548600].[none:Year:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance postpaid 1GB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance prepaid 1GB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance postpaid (500mb)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance prepaid (500mb)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Mobile Cellular Subscribers vs Cost'>
      <zones>
        <zone h='6482' id='14' name='' type='title' w='100000' x='0' y='0' />
        <zone name='Prepaid handset-based (500MB)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Postpaid handset-based (500MB)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Prepaid handset-based (500MB)' pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Monthly Data Allowance vs Cost'>
      <active id='12' />
      <zones>
        <zone h='6482' id='12' name='' type='title' w='100000' x='0' y='0' />
        <zone name='Monthly data allowance postpaid (500mb)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance prepaid (500mb)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance postpaid 1GB'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance prepaid 1GB'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Monthly data allowance prepaid 1GB' pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Costs Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[io:Max Costs:nk]</field>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Economic Classifications by Gross National Income per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42472.868056562500].[none:Calculation_7610502200112783:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Calculation_7610502200112783:nk]</field>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Costs and Data Caps by Service'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[excel-direct.42492.894420509300].[none:Service:nk]' type='color' />
            <card pane-specification-id='2' param='[excel-direct.42492.894420509300].[none:Pre or Post Paid:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42492.894420509300].[none:Data caps:qk]</field>
          <field>[excel-direct.42492.894420509300].[none:Pre or Post Paid:nk]</field>
          <field>[excel-direct.42492.894420509300].[none:Service:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Prepaid handset-based (500MB)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Postpaid handset-based (500MB)' width='192'>
      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
      hux0Wsb9vf4/jh++XfHkEVAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Internet users by cost' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance postpaid 1GB' width='192'>
      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
      mvQgJEmS/j/U69+U+Kf6DQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance prepaid 1GB' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAe5UlEQVR4nO3daXAc533n8W93z31hBjcwAEhcJAESBMFLIilTlyXbUmzFdrIlW1lnXVkn
      m7VT8W62aqtSW95srbc2G9tVybqc8m5cWV+RJcsSZcmyKVEnJYr3fYEkLgKDYwbHHJh7prv3
      BUXY1AxFYIYcgMDzeSMIxNP9b2B+3U93P/20pOu6jiCsQJIkSfJiFyEIi8lQTGNd10mn07er
      FkEouaICoGkasVgMq9Va8DKy2SwGQ+Fl3O3tVVVFlmUkSSq4vaIoBa+/2PqLrUHXdXRdR5YL
      74wUsw3FbTlgNBqLCkA6ncZkMq3Y9tlsFlmWC/4AZDIZDAZDwQEqtn5d18lmsxiNxoLaa5qG
      pmlFhbCYbRDnAMKKJgIgrGgiAMKKJgIgrGgiAMKKJgIgrGgiAMKKNq+Lr6HJUY4ev0DHhk7O
      X+il5557qS6zF7fmUR8cPIjRZIQHHgKXq7jlCUIB5hWAY+8fIJKFg+8dZ+euTs6eHGL3rjWo
      qoqu62iatuAVS0cOI01PIQH6mdPoO3cteBlAwetfKu2LaXu9vaZpBd8Iux3bX8wyrte/WH+D
      eQXAZLGwwVvNvtevEAxHkIwWVFUtKgCKxTL3tW6xFLwBi/0BXuwP0O8uo9C2i1n/7dr+QttL
      8xkOnUpEOHdhkPUb1nDhwmU61q/HajKgqirxeByn07nwNUejcO4sqqKgbOqBAm+lL/ZQBjEU
      4u4dCiFJkjSvANzMrQKgqVl0SUGRb/7HWewP4GK3FwFY3AAUPRjuZtSoj7/462/hKa+ma2Mb
      mzZtIxaKsaalmouXh2lsasA37KOpycvIyChNbWuZ9vXjrGogPjOBYrEQiqTp2diJ/BEBEoRi
      3LEAaJKJpio3k5EkQwOXOXTgBE1uAz/GQWeZzs9eUMkE+2let4qE6mX6O/+Lim2fIOP/F2Zk
      SAyNITll/ug/fJv7O2vvVJnCCnfHApCNRwjMprFIOrpiw1PdxI6OasL9Ps5fPE1QdWHRZWLx
      JAOjl2lp6yQ+5cPsqqS9qR6jx01fYIYKl+XWKxOEAt2xAFir2vj2334TXZdQlOv9W53sr5/n
      7USKv/rTP6fB4yR09TjnJt3s3t6GpmrIyrWHQ3RdR1U1DIbCH/YQhFu5oyfB87HYJ6GL3V6c
      BC/uSbAYCiGsaCIAwoomAiCsaCIAwoomAiCsaCIAwoomAiCsaCIAwoomAiCsaCIAwoomAiCs
      aCIAwoomAiCsaCIAwoqWNwDXxuKrBc80IAh3i5xB2KFQiL6+PlKpFEajkQ0bNmCz2RajNkG4
      43KOAEajEZvNhizLtLW1YbGIRxKF5SsnABcvXiSRSFBTU8OVK1eKeneTICx1OV0gt9vNlStX
      mJiYoLW1FYDR3uPsPz9K95pmzl/qo2vbfaxbVVXyYgXhdssJgN1up729nWPHjs09pzkTSeAw
      Zzly9DJPPLGdE6cnaKiwks1mAYp6Vaqqqiu6/fV5PYt5S2QxFyuKrb/YGm7H1IjFbENOAEZG
      Ruju7sblctHX10dbWxtGs4yCjt2h8OY7R/C2bsbhcMw9FH83P5S+2O2Xw0PxkiTdlQ/FQ54A
      bNiwgXfffRdVVdm5cycAa7vupaXj2pP/mUwao7HwX5ggLCU5AUgkErjdboxGI6lUCqfTiSTL
      cwkzmcwlL1IQ7pS85wAGg4GWlhbMZvFhF5a3nABYLBY2bdq0GLUIQsnlBCAQCHDq1CksFguN
      jY00NzcvRl2CUBI5AaiursbtduPxeIhGo4tRkyCUTM61t2AwiNvtZmBggKoqcbNLWN5yAuB0
      Okmn00SjUSKRyGLUJAglkxMAg8FANBqlurpadIGEZS/v7cfa2lqCwSBer7fU9QhCSeUNQCAQ
      YOfOnfT396OqaqlrEoSSyRsAl8vFoUOHMBgMRQ+UEoSlLG8AwuEwTqcTg8GA1WotdU2CUDJ5
      A2C320kmk6xatarU9QhCSd30CGCxWEilUqWuRxBKKm8AysvLMRqN4gRYWPbyBmBmZgaDwcDJ
      kyeJxWKlrkkQSibvYzjbtm1DVVW6urrEkGhhWcsJwNTUFBcvXsRoNOL1emlsbFyMugShJHK6
      QNf7/62trQSDwcWoSRBKJicAsixTV1fH3r17qaioWIyaBKFk8p4DjI6O8thjj2G320tdjyCU
      1E2HQrz33nv4fL5S1yMIJXXTG2GSJIlLoMKyl7cLVF1dja7rN3SBUskUJpOR2WgMu8OBIhc2
      EZMgLCV5jwCRSASbzTY39WE2FeO7f/9/uXTmGPv3v8PRs1dLWqQg3Cl5Z4UYHR2lrKxsbiTo
      gX0vohmMXOqbZPeD3Zw4HSQajYq5QW9DezE36BKbGxSYK+b6f+99+LOYnCdpXFXJm/uPs2HL
      LjE36G1qL+YGXWJzg1ZXV88Ng76+UWarjR337wLAu2pNwb9sQVhq8u52TCYTly5dyrtXEh9+
      YTm56UlwfX094XC41PUIQknlDUBdXR3xeJyGhoZS1yMIJZU3ABMTE2zZsoXx8fFS1yMIJZU3
      AA6HA7/fz7p160pdjyCUVN4AZDIZhoaGmJ6eLnU9glBSeQOgaRqNjY1iblBh2csJwPU7wcFg
      UFzyFJa9vDfCPvOZzyxGLYJQcnnvP/f29uLz+WhtbRVviBGWtbznANFolGg0SiKRKHU9glBS
      ec8BEokEBoMBt9u9GDUJQsnkdIFkWaa6unoxahGEkss5AlRWVpJMJpFlmWQyuRg1CULJ5ARg
      amqKwcFB8UywsCLkBMDj8dDe3k4ikcDj8SxGTYJQMjkBUBSFWCzGqlWrxMxwwrKXE4Dx8XFm
      ZmY4duyYuAokLHs5V4FcLhf19fVUVFQU9ayoINwNco4A2WyW8fFxAoGAGAskLHs5R4B0Ok1j
      YyMmk4nJyUlsNhsOh2MxahOEOy4nAJWVlSiKQjgcpqGhQUyQKyxreccCSZJENpsVXSBh2csJ
      QDAYZHp6GqfTic/nIx6PM3jlDHte+BUDg/08/8JLDPpDi1GrINx2OV2gRCLB4OAgqVSKNWvW
      YLfbqfO2MnD2GG/s1/iD3+vhxOkRapwmstksmqaRyWQKLkBV1RXfXpbloqZGLEax9Rc7reH1
      qRGLnd6x0G3ICcDw8DAmkwmPx8Pk5CRr1qxhuP881vIaTJE4J0/3Ynatxmw2YzQaSSaTRU1r
      p+v6im4PFDU1oq7rKIpScIBux/Zns9mCl3E7pkYsZhtyWnV2djI8PIzP52PLli0ANK/pwjkT
      Yft95UxNzVBRVYWi/PYPVuy5wkpuf31i3EKXUWz768soxmLXf305hcjZ7QwPD1NZWYnBYGB4
      eBgAo9lKXV0NBoOR2toajEpheytBWGpyPskGg4FwODx3L0AQlrOcANTX1yPLMoqisHr1avFY
      pLCs5QTAbreTSCQYHx9nZGREHAWEZS3nJNhgMLBx48a5M3txM0xYzvJeOzpz5gx+v5+mpiYx
      P6iwrOW9nKPrOpOTkyiKUup6BKGkbjo36KOPPlrU3TlBuBvkDYDZbKavr6/oO5yCsNTlDYCq
      qqRSKSwWS6nrEYSSuuk7wux2uzgCCMte3gB4PB5GRkbES/KEZS9vAMLhMJWVlSIAwrKXNwBV
      VVWYTCba2tpKXY8glFTeACSTSa5evSqOAMKylzcALpcLRVHIZrOlrkcQSipvAILBIBUVFbhc
      rlLXIwgllTcAiUSC9vZ2RkdHS12PIJRUTgCmp6fRdZ3333+fmpqaxahJEEomJwCqqqLrOl6v
      V4wFEpa9vG+IsdlsjI+PixdlC8teTgBkWSaTyVBTU0M8Hl+MmgShZPIO9unp6SGZTIrHIYVl
      L+9VIL/fz8mTJ5mamgIgEQ1x6MgJkqkEx46fJJER9weE5SFvAIaHh5EkiUAgAIBvZIRy0yw/
      +MGL2CwSBw/3lbRIQbhTcrpAmUwGq9WKpmkYjUYAPG4Xrx0YYeOaKtxlDsamEkSj0bk7xel0
      uuACVFVd0e01TStqZrTrV+0KVWz9xdZwfV7QYuYXLWYbcgKgqiqRSARZlqmtrQVgMjBBpcdK
      w+rVnLs4wKZt9+Jw2FFVlXg8XtS5QjqdXtHts9lsUXODZjKZombvKLZ+XdeRJGluZ7lQt2Nu
      0GK2IWetFosFRVHw+/04HA68Xi8d3ffQ8cG/t7Q2F1yoICw1eWPn9XpxOBxiLJCw7OUEIBAI
      cOjQIbxeb9FzzwvCUpfT8ayurmbTpk0oikJ1dfVi1CQIJZO3C7R27drbMme7ICx1eQMwNDTE
      2NgYLS0t1NbWFnyFQhCWupxP9vVX3iiKwtjYGDMzM4tRlyCURE4ApqammJ6eBq5dDaqsrCx5
      UYJQKjkBqKqqQpblou8wCsLdICcAgUCAkZGRom9PC8LdICcANpsNg8GALMvEYrHFqEkQSiYn
      AA6Hg5aWFnRdx+l0LkZNglAyea9vTk1NYTQaxQsyhGUvbwBaW1tJpVJidmhh2csbgPHxcVpa
      WvD5fKWuRxBKKicAoVAIk8nEmTNn5p4HEITlKicAmUyGsbExcQ9AWBHyPhBTWVmJqqriPoCw
      7OUcASKRCKlUCk3TxFFAWPZyjgBerxev17sYtQhCyYlxzsKKJgIgrGgiAMKKJgIgrGjzCoCa
      TXH8xHGiMxP8+jevMT4TvdN1CUJJzGuwTyIyw/neq2RDETZ3t3H+zBAVO9fMPTRTzPQpmqat
      +PZAwZecr6+/0AkMiq3/+nMjhS7j+uX2xfobzOsI4Civpc7jxGJRGJuYRDGLQXLC8jDvT/K2
      e7ficlrpvTJEZ1c7JqOCqqpzD9AXSlXVFd1e1/Wi5gbVNA1FUYqaXLfY+nVdL3gZkiTNbUOh
      itmGeQZAwu3xANDZsa6gFQnCUiSuAgkrmgiAsKKJAAgrmgiAsKKJAAgrmgiAsKKJAAgrmgiA
      sKKJAAjLTzYFmQTMY3yVGNQjLC+zY3DmX64FoO2T0LD9I39cHAGE5WXsGCRmIJuAq/tv+eMi
      AMLy4vQCHwwMdDXc8sdFF+g2i4SnMdo9WA3X9i2ammUmFKWywv2R7aYDfsqra1gOryUMjF1l
      YipCXaMXdJkqj4PxwCQKoFgdVLh+O+u4ls0wFZyltuY2vYmotgeMdsjEoKrzlj8uAnCbvffa
      s6j1G5m6dIVtO3dw5O29jKUr2FAD7qa1BH394KzHa03ji8qsLle4PB7DlApTXV/J4Hicp578
      /bv60PzT//M/qe1+hBd+9n36pnX+9ZN/wMjAJSYnQ7S0ryUWCbOhq5vLF85Qv6qVqcAEqXiM
      ps4tEOwnZqjEkg2SMFby+EM7cpavZVMk0mC3mXNXLsuEDZVEkg7KUhpR/wgYzFR5nPgnp5AN
      ZmprqpE/2NOIANwBF4++x/rV6/ju332HR//wS/jeeYZB8yMkev+JGUcXDak+Xr58Gjljo31z
      O1cGgqxymTlzyci5Ixf4/JO/j22xN6IIajbN0OAwOx76OOr5Kc69+UsmjQ5susbJA6+x7qEv
      809/+z/Y+Ht/zOGnn6Ha68Tc2EPorZ/z6qE+mmqtmB1uMsbqvAFIjBzi54cV/s2/uod9r7yM
      saoZSzJAwlTFgzt6+O4/fJOqpvVcujrIVH+IrlYHZqeXXn+cisw4n/3qf2Fz+7V3YC+ZAIwN
      XuDAsfNs2LqLjub6m/+gGuXC8AxtVS727nsd2VbBpz7xIPN/HEKnt7eftWtb78h7kOsaWsnY
      M6xtbuXxJ3R6T+2n/d7HmLhyjvrVu+j0rqJcT1PTUMVoIEtjvRlZ99BY4yKYCKL3rCOWBpup
      uDrOHHqLvkCKxz/1CGbjjb8dLR1l0BektaXxhu+PXx1kOpKiob0dt6XwB1S6tj7AvZ/+Em4m
      ScpXsM6amcoYMUs6M0O9vP/mS+x45GEOHnmDHbsfpMycwtGwFmtTGWZnJSnJhEHOksy48q9A
      BnRIzvh485399PlfpbtjPabw22zb3o2aTTE2FmBzRxdXlCh/9sW1/M23X2J6NsLVeJivN3jm
      FiXpRcx/qKoq8Xi8qDfJpNNpTCYTL/3ztxnNujg/6KezzoZq8PDgtjbGZ6OcPHaObTt30nvm
      FJ2bu/AHFR5uM/P9547S2ZhiMOFCiYXZ2LWFg6dO0dK6ngZ7mkA0TDBhxKMFmZXLsMsp/ME0
      07NxupscjMYV6suN9PaOYDJqfOLzX2F9c0VB9d+MrutIkjT3zO/10F3/f1XNIssKsix/8D2J
      heQyk8lgMBhuCHPMd5xv/vAof3h/M/0TMfzjI/Rs2cD+/YfBbKXWZefAwcPc/8nPYVcD+GcV
      WmpN7NnzBlt3PIDRqjAzPcmffPWruAwf3Rm7/lpdo9E4r3pDI5eYlOvwWmYZDEJHSx2aps29
      i+LDH8d8O6mk/yzf+Ptf0tlUycjkFLNphdVumZDs4T9//Ss89/xPePTxp7Bkpvhvf/NtrG4H
      Dz+wm4hUQ1niLJL3HnZtWI0kSdISCsB3CNkaeG/vXrxbe1ACs3SusdM/leGe9Zt4/tmnSdgq
      qS83YGns4Su7V/PDly6wq8vA0/tOYUpHsJlraNjyAL7LF6jR/CQsMlcmdBots8xgwWo0ceXE
      Rdo/thvX7CCnrgZZ191Knc1DU1stgUg9T31uO9879T1eHXqVh5oe4i83/yUG+eYHyrkApKPw
      yn+CkcOw42uw9csg3bonn81mi3okMl8AQpf38/3XAjz5cDN7XnqDq8OXqGvzUlu1joFQGqX/
      IM6We4j2n0Z3ummrNbC/188jWzs53x9mMpFkpv8I3/jRy6x13rjtIf84r37/H0jH49z/pX9L
      Y2fXXAAyfj8T3/ivZMZGqfr613E+/PAt69c07YYALJSuaWR+J4ALOaovqQD0Hn+H/ScuU93Y
      SkWFC2t8mgOnLrFl+1aa6734JsY5e+oknVu2oEo2tqyu4Mc/ex7FXs7WDfUcOX2Z2uo6Vq3Z
      xNj5dxkKpGhudDARVKgwxojIVpRslJlQgqaOzaRGzhCIy7StaaK6zE1ZpYtwzIq1NsEXXvkC
      GS2DIin85FM/oauq65b1c+4F+MWXr33T4oa/OA72W1/ZuBMBgCx7nv4pgZhKR2sT5y/3s7q1
      CW/dasIpFX1yiCvDPjxNnTjTfnxhibUNNo5fGKW7o4Or46NEZvw89tSf0VxuuWF9b/zz9zn1
      6q8AqGtfxxf++7fmAjD5j//I1P/+LgDGxkba9r12y/qLDQDc+ih8M5IkSUviHCCjanjX7+RP
      enajyL/9Q269/xNzX3tXreKee+69od2/+9rX5ja+Z9sDc9/ftO6L81jrPUDuL29kdgSzYiaj
      ZTDJJhwmx/w2wuq5tsfXNbC4QJlfl+BWsulr030YTPPrk+u6TlaVeeLJP0b+4He5+6FHPvRT
      Xez+4Kvf3f6dD956+Vbnb/vlVteNfXSD+7d9a8XjYb7UrIaEhqxId+S87KMsKABaJsnRE+fY
      uHkTVuPtyU40leXf/+w4p31hvri9ib9+rOOGEJRao7ORb93/Ld4afov7Gu6juax5fg2bd8MT
      3wPfMeh5CixlRdcyO53kV987TTat8sk/7aKq6aOPtLquc344yoA/gdtu4N61bky36MMv1NZP
      fw5ZkUnFE2z+1Kdv+Leyz38OLZ0iOzaO56n57IQgOBGl//Q4siyxdlsDzvLSXv9aUBfoxDtv
      Ya+pxDdp4OGPddyWLtALx67yH39xDgCzQeaNv7qfBs/8fwmFHv6WSvuP6gIdf/Uqh/b0A9B5
      Xz0P/lHujBy/2wVKpFX2nZpC/eC9JltaXTRVWe9o/Qs9Cf6ws+8OMjuTAKDS62LN1lvfvf2w
      YrpAC9o9ZDUdh92CrmUXvLKbaat2YDFeK6Op3EaZ9fZ0HZaDino7snLtaFjZeOuumFGRsFuu
      HZllCZzWJdHD/Uj2Mkver0tlQUeARGSK946eZdPWe6gqs922k+Cz41FO+8J8fF01TRX2Bbdf
      rkcATdO5em4aNaPR3F2Jkqc78+GT4FhKZXwmicdupNxpvGWferGPAJl0lqnRMAajgYp6Z0EX
      A4o5AhR8FSgajZLNZkmlUlgshSc3m80WdQXgbm+vqiqyLC/azG7F1n99btBCayi2PRS+DW63
      e/Evg4bDYcrKCj9hvNvbx2IxzGZzwR/C2dlZ7HZ7wZdRi61fVVUSiQQOxzyvln1IJpMhk8lg
      sxV+8lvoNiz4HCDPAop+m3yhh87l0r6YeT2BRf/9F/sZkCSpqL0/FLcNRR0BBOFuVvQRAGB6
      5CLP/vw5Tl4cIZOI8PKePex76/2PbDM7NcLzv3iO949fRFczPPezH/H+sfPMN4m6muLFF19g
      JpZGTSf49Ysvsnff2wuaY//c4X0cuTQGwJu/eZGXX32H+b4VWc0meXnPi/zqN2+i6ToH9u3l
      hedfJKHOc/26xntvvM7Pn32BaEal7+whnn7uJaYjiXlWoPHu66/z7C9eRgOunDrK88/9gmF/
      aN7t3967l+f3/AYNOHbgDZ5/6VViycw824OWTfLznzxNXIXY1DDPPfsch09dnnd7NRPnmZ8+
      Q1KD0OhFfvDjZxn2h+fdPhUc5gc/fJpLQ36y6TivvLiHva+/s+D3LBQdgIHBYR7+9KP4x0eI
      B4NUrVoLidhHtvFPTNC1YyeRcABNy2I1OZiYHEObd/ESZXYLqgbpeBRnZSOmbBptAdte7nSQ
      ymqAhoSR2Owkiez8FiArRjZ3r+Xa/kMjllboqHIxHZ/v5WGJ7i2bMKKiSJBKqNgtOoFQZH7N
      dYnN23uITgdIazqBQIjtPRsJTE4vqH1kOkBG09EyIGkxQvHUPOuHE4feZTqRJJXJErjcz6ZH
      HicyNjLv9offfZvZTJpMVmU2nKS2ys7wRGDe7aORJDVVLkb8E6Sjs5RVr8aYTs17J3pd0QFo
      rKvlzVfewG4xMJnIMNZ3joT80X26yvIKTr9/CKNiYnDEh2owgpphvtVLigm324WaijI2M8v0
      WD8RVV/QKEqXx4Miy/T396EZDZDNzmcSAQCyyQg//tEe3BVu+gcGUbQYZ8cnKTPPd7iCxstP
      P0PG5MA3MkQCCU2d//pB4+Dho9hdVgYGB3A4TBw+eRKX+ybDh3OoHDxyHLvLwpX+fjSTgp7N
      LmjvWdfUjMeuMD02gFpexYl9r2D0zP+probmNhxGncDoANMpDU3NLuhpOE2RUXUNNR5mLBRj
      yneFWZ0FP1F3W84BNE1DkmWk619L8i0/jDe2UT9oU/hrfpBkCh1Boesaui7NjZ1ZeHsdXafg
      9qCjajrKAq7kfLhmVdOKaL/w9X+YqmnI8/i736QaVO3ai0IWFAJNRZKVuc/dQj8DRY8GFYS7
      2W05CV5usqk4I75xEvEIifS1Pn0mGaO/7wqh2TjTU9NoukYkMks4cus+u66phIJT+KdC6FqW
      qeAHJ6q6TiQyi65DOBIm9KFlzUYiH3lOo2sqkdlZZiOzN/2ZVCJOMj3/YSupeIxUKouaSRKN
      pwFIxKNkVI1oaIq+vj6S6TRXBwfwjfuJRcKk1fleOliaVvQRIOAbonfAx+omLwPD49y7awdj
      vWc4cuwiroYKHtj9MFaDxL5fPk9jZxe+iWl8pw+w6eHPEpjwoWXTfOrRj3Pm+DESWNm2eQMz
      40NcGJhg2/ZtWE0GxvtO4QsneenV0/z5k7t4+cA5dqxvQbd4uHLuMLXNG3AYYdjvp6OhllDW
      xNbuDn794jPYqlvx1lYSj4QIRRJsWN/K+bO9rG5vZ7j3LIG0gfDgANsefAg5FSSmmqmwS/gC
      Yda11rP/nXfpfuBxGh0aR0+eZ1VzCwMDPmorbUQzCm6zzkQoQWeLlzOXBqitqkCWTQxePIZ7
      9cfYvt7N//vxMzz2mSc48M77bOxqIRRPcuHsZWwmna7uHmZVM9u72hb7T1mQJfM8wGK5OjDA
      6NAwockgoegUbRu30NDSwlQwSP+onwOHj/LxXdtJawbKzDKnRgepbN7A1XNHyDjqcBgAdIZH
      pnHbskwlOjh77AId27pJZTJYjApDI37au9dQ63By+EwfHimJL5xF6z+PyenBmAhwfjiK1Syx
      /8gRzLqRDV0dmGxOKiwpTgfSKGMDfKy7mVd+cxC7Kcrlgats3rQFe3gSc+NqxgZPEZ6VmA1F
      qW4sp8lu4+0j5+lYuxYZnejMBEZbLafffQ2lqocD7xzEUe0hpZm4t8nJ60eDSKEJJmcizM7M
      8OCDPfhDOrLRTk9XG+lEDJunCi2RZGxwBB2QyWJ0OolcGoO7NACwhB6KXwwWh5myyipsdhtG
      s4xRljBZndgdZWxc6yAQv3ZlacO6Zs70DlDb0Ey5y8Wa1T0cvThJ2Qfj9manfVjK1hKf8NHU
      Vs+pM+doaWrF3N5KVZmdqaDO7ge2EIjOUtXUSHhmhlSdF1smRChlZH1bCypQX+4hNCthlqHc
      bmcskKRnWyOyI8aRXj8b168mMDFKVX0lk/5BXNWrCIWu4Kj2Ihumsdqt1DU0UGe3InliDA4M
      sa1lPaR1Llw8x5buzZgsXmrsEWYSMqHAEH0RJ2sbK5mQM1jKqljTVMeFC4Os23gfSBLllbW4
      q+qoGr3K1UCEptY1yIN9GCwWLGQxuO7m+Svg/wMe5Q5T50d2eAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance postpaid (500mb)' width='192'>
      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
      Gx2J/P8B5KyB6QFkf6YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance prepaid (500mb)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mobile Cellular Subscribers vs Cost' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO2dZ3gcyXnnq7sn54wJyDkHggEkmONqo1e7K68ty5blta2Tz+f4nO5OPksn
      S7LvbMmSZcWVtFqtVhu0gVymZQRBAkQiQAQiZ2AwOcfu6VD3YUgQABEGGeD27wMfoqeq652u
      /1RXeOstBEIIWFhWCrrZBrBsb1gBsawKVkAbDRWLUTQz52KMwOlldiUgZAicgBDiOD7nI5oi
      SZJeiXEQEji+LENYAa09DIX/x79/xxOOhR0j3/7RL2d+BCn86//4P4YtrvifloHWL3/1WzgZ
      +u9/+ZfWEPnorSBDfvjGq3/yhT/+0y9+qW1wauZHLddO/+C109b+lq/80w/m6PGn3/5a/d3R
      RSz0Wke/8nd//cd//IU3T1+fKZdYcOov/+Z/RhPTnnWw7cv/+E1OQmlZlkM05O1oaSo9+DRm
      a+u420Uw0D053NLWJdclV+8qisXwupqrI3r9oUP7p+y+/NwcLgpiMQIA4LaZG5pa+TL1wf17
      +VwMAHDnxoWz9Z3/62vfEoGYXKv1OqbqGu8IJKr9+/fSFEVRDEPTJEkFPY7OgYn9e3a0tzQm
      ZRWRsRjDQKd59PadDqFMdXD/vqHutim7F6eQEyeOivicttaGmCz1u//782GCck6NjbvDu0ry
      6mtv5eSlhEOBC2dP6w2pVTvLR/s7uwfG0nKKSnJSmm7XO3yhsso9UefolMuPxxiVlJ+fm8O2
      QGuPa3IkSMHm5paWltZYyN7XP/TP3/yXAEGf/+0vztbcQQBDUlTrrUvf//m7Prfl7t178ZcX
      EfJ+65++YfEEm66dfv29S/Fbdff17j50KjvVYExN4zLhb33t/1g8keYb519798LMEr328fc+
      ugghvH7+9NCUI36RJKI+n/fCe78+X9tSd+X81VtNHAzjcTEAQH5eUWCy6yevv4dgvMmBexdq
      6gEkT7/zpj2IQ4akKOq91398vrb5J9/5N6s9EAoFP3z9xx9crgd0zOby1l05d/lWG8IRRH3W
      trv3WAGtPcMjo7kFheMdNzrNsbz0pM62Blqie+mlF47v2zE8MAAB5/DxJz730nNDo6PFpcXT
      ufyOcbMnODYyECAYt9sWv4giKEVR8f/77GarOzA50uePkG6Ha8meSkdr493ObpKCgaAfAHD4
      yWee+tQxDooAAEw5pf/8rW8ICPu3f/CLOffhCeTPPv/ik4f3DI1O7jt0sKO9ye7y9Pb2f/qz
      f/z8Cy/tqygAABw7/uwzTxwtKS0GALCvsLUGwrHhkdKq4+bmc5SuOEfkHbD5Yn5Xa2tbW1ef
      sfSIe5QZHOh19jYn6XQzcgGuQCYR8PYeOCagIzsOHIlfLi8r+9dX389N0eLOSZFKw+MJqg4e
      FUGiqHLfSPMFiiEBAAxDMRAJer1321sn7a5dAAAAKCrWfKd57+HnbffqQ2GcCwCCPCzNMd7f
      3Gs2pZq670wCiLhttpbmJk84CgCgSLyro62hrTtr/3OZhpRnJcLTly9lyqQNtdelZDEq0gAA
      EPDwXtjXvva19X6knygggGMTY2U7qzKNyoyCHck6RYwnPV5VWFfXoEkreOm5Jzwuu3lsnOEr
      Pv+53xdyYCACy0oL3Q6rKiV/b0n6nZYWdzBSkF8qEfEAALrkTJ0EbW6+E8CZ3dWHK4tSW5pa
      XP5wQXGxiAtHJ2w7dpaaJ8Z37D0AIs6e/vEkU3JxaTkfxCKQt6c0v729Q6Ez8nm8dFOSIS1T
      r1bEjXS5rPU367xh5vc/+3v5uZnWsaGxKbfBlFxeXupxuydGhow5FS8+c6y55sqg2XPk1NPP
      PHlsqKejd2BEbUiWC7GktFy9RkZThD/CIOxMNMtqYPtALKuCFRDLqmAFxLIqHgoIQph4f2g6
      JcMw8YwMM3d6fibxZIt+ukSJM+8w81bTZj9q/7K+0fYlwa8580HFKwvCxSpl8dtOf3pfQI7J
      wX/9v//vx6/+wheJzUwXcFn6h6YezX/hzIc4AwBgfvXaGxQDY2H/m2+fXtB2JvbGG2/GZgts
      uLcjQMQvMb99510AFn8EzG/ffDOIUwAAx+RAS+vd//jOv/3nj96IhLyv/ud//Oz1twI+909+
      +IOf/uLtUMB9uabOYx6ov9vzzus//ffvfq+tZ7T26tUouZi+tzGQ/s3Pf/zv3/1eU3vf4k/Q
      Od5T19oPAHAMdZ2rbQUA1F74yB6ILJS+r72uvdc68wpJhO9198b/f7fhanv/OJgexnvtE5NB
      wA9NBWPcc2fe6x6acox2Xr7ZEnRPfHjxJkb5Pvzo43uDEyo++cvXfwM4aHNzR1qy6rXXftU9
      Yjl1/AhDhN56/bWO7l5jZvbpN37R1j8F/eZ3T5/r6p/UCGM/f/2toSl72DZS3zooAKHfvPOe
      1Y/XnXl32EVWlOYhgDn969faunokGkPT1XMXbzTzYeDNdz/SJek/eOfN200dOq38tdd+2TUw
      dvjIUT4X+e1v3iipqKy5cj09N4f2WaE2j3H0jZrNyrRyxN0fjCEfnrvGh8HeyUDIPqbUqdxh
      NF0a6zBHctP0q6urrQlz43rNoYN7rzd0dtw43zlgdZj7zl24wpWq3n/9J3UNzSpD6tXT79be
      6UFiXiDW9TRcvXC1hq9MKctPb2+8cbm2fsIRAiHLm++8rzYmv/3LX9ysa1Abkj/+4K2b9U1C
      nvjs+TMCubbu4pkrtfWBoOf9D87nlFQopaK+rubzH9+YsHkfvsIGOtpQVVbYNbDz6FOUc9RP
      0OFwVK1QV+w+xCND+5/8DPCMdg1OkESord/GB5H6W3XHn/3dFKU4nj0po+jYvoKOli5PJNbd
      3mixWkv3PxW0TdbeqH3qM3+gk4s5HCRChC+f+5gvlvb29qVlpJ568viHb/7yg0t1CkPaH3z6
      +JUrNTaXZ2Lgri1EEAQxcK9pxOqlI6733j2z5+jvZOtVAADIMDaLU6M3/MVf/7VrtGPMExaI
      BAK+IIJHhXwRj8udGBwUcoiau0MB5ziComlpGVbzuFqtGB8xb079rj9EOHir+d6nTh1yh5jP
      vniitvaWTCro6uxB+NLfObnn5o1bzkBo6F4TT6ryOG1dY76Xnzn1ICvn5T/8gmXonnliLBLw
      9A2Mk1B0and+7c2bfiD71PF9KIqR0YhncqixvV/AhSESKSrewYtYvv3t/whR8NSzL0Ztg9MC
      Qkqr9v/RZ18sKyy8du4DF8FTCIUBlxUK5J2Nl8cdgfPv/8pBCnC/jQHcYMDH4fDS05M/eOt1
      SwAHAAAE4fB4fJ4AD/l8gSCAkCAoDofDEwrSM1Lfff3n7hAOUJ5rckSfmeHzenZV7tSo5e+8
      8ZunXv7D509W++2TP3vzdEFehsPu4PK4bnsA4n6SIxMAGpWlPHVi98XTvx5x+gEACIrK5PJw
      0P/eW2/ag+ieHSX15z8YtMeOHTpUf/W9fmeMRpnPvPhsSXmVgkP6o0RDQ7PJZIqEcaVatgl1
      uyEI5co/euWVkpxUrkDAF4ozTEafP7Jn3x7bSP87p6+kGTUetxfFsEgI54okfNL1zvmrKIoA
      AACCcbl8kYA3Nj6Bcrker53D4XJ5XIlc4xrrvXitASAUykEcQVKnFkUIuG/3zpG+Vhet/Ju/
      +a9SLnrl3Ht+IL3fG5oJRVEMwzAMQ1F0/M+GS+/eGbQzDIxfZGj6Ycr5stM0PeM6Q1EUhJBh
      aIqmIYQkScbvT1JUPAVN0/E0dDzvg49omopnmVlQb9ut2+1DNEXFC6FpimaYB3njqZhZ5UN4
      7re/dgTwR7/pYwnDMCRJ0RTxkx/9lH7w9KZrhGFo+kH1zchCxx/7wys0TdMMZBiKpOJ/xiuI
      oh48bZqO6yShmWiaogCKYSiyZMqNAEKaYTAMSzwHSZJcLnf9LNqCxCt7A7718pYyGIYhCGL9
      rGFJHD6fj6LLmMYjCGLxqZaVsbzVeJIkAQDz6rq7uxvH8R07diAPln0pisIwDEESarfirSKH
      k5A9NE0jCJLg41uWGctqqzYxMUEQNE0vS0A4jovF4sTTJ2IGWIE7B4Zh81ZzSUnJzZs3BwcH
      CwoK4rUFIeRwOIkLCEGQBAUUv2eCb7HlmpGgDZubeNpJKHFQFE3cgATNAGu4lIGiaHV19fj4
      +Pj4+Frdk2Xrs5ZrYVwu9+jRo52dnTabbQ1vy7KVWePFVD6ff/To0aamJq/Xu7Z3ZtmaLCwg
      SPs8AZdlcsLinBgZcC+8aDIHiURSXV198+bNUCi0NjayLBOfx0tTsa7O7lDA1zc0tq7ryQt2
      kYbvtYwHuNbhbq1WyREkwQHbkZP7GYZBUXTJkb9ard61a1dtbe0TTzzB5/MTsWN6CivBxAiy
      jAmIZaXcFokX+ZQI+c9/fDnHqBpzBwYHJ5LUUq9OLxdzl2VA4jYv6BOt0sgmzG4OFyAxgsZ4
      KApMyXqCIOJD4nknQH/dOPbdKwNqMTdZIRSLxTwer7GxMTU1Na65JedPH/gYLM20a0eCiRNM
      CSGMTxBs/cTxuYl5x6EcniAQ8HIxIJFKrLaAUMzRm5IBQ8XnFSGEMHwX2n8C6QjkZXqso++e
      PkchCAkwqZC/ApsX/h1DOhSJUUSIAjyGDAslKqlYQBAEgiA8Hu/R5GZv5Ph3anGSydSIr//9
      YQAASZIjIyNms/nQoUNLjgbhMueBQMLDeJIkEx/Gb5d5IBzHMQxbKE04HBLweZNT9iSd0u0N
      mwxJCAKCwaBUKgUAgNFXAGkFCB+k/6T5Zs3lOxN6ncJpc4UjUVN6im18TGtIc/l9Wn4MZxRC
      NMyVKMfGx1GGlCTnfflLX5hT1sIVhmASsRCIhQAAAORLfmcJn6OR8M3eaJpGNH0xNzc3FovV
      19fv379/WYsPLKtBLJYAANLTUgAAyULJ3I+5BkBaAUcJUCFOAIVUMNDdHqLET+6vutzdK44G
      m1o7cDKUn6xmyCifj/JCIVNR8b2PLxAC3aNlLW8pY5EWCABg8UXvTfmrszViPgc8+OkDAFpb
      W2ma3r179yLNwFZogWIU/aU32/pswa89U3S8MCmRO2/NFmheHrZATAREOgE/G3A1DE35/EGx
      RAwZhoNhtZc+auge/eJ/+XMegtZf+7jqyAk+igAuj4OhFIFDjCcWzu3RrlBATvPIlbrWsh0l
      ScY0jUQ4b+LpmmMYpqGhgc/nV1ZWLlSRW0FAjSPul3/aCACoylS9/Wd7E7nzthRQwqzLUkac
      tqarE+ZwIOiNRPBoKJScljw6NmlUq4MAE0asqMgAyaBYpe7uGpKKgT5v1xdeerq+vr69vb2i
      omJlJW4AeXpppkZs8UWP5S/d/LDEWenWZkQkF4a6O+9SIuMLu3MvDk1xI4HmsakQBynVCogp
      n0CbHPD3JReV3r34UUxgii901NTU9Pb2FhQUrOlXWDOUIt77X9wTJqFRPn+byvIoK3yFkUTU
      6nCrVEqaZgRczsXTb7dPeP70jz7LwXj1V84dfup3GDyCCoR8Lg8PBThCqVwqAgCQJFlTU5OW
      lpaXlzfnzhv/Cgt7bb9554zMkPy7zz01fdEz2WvDFYU5hvif5t72fiezp6pcwptnxpV9hYG1
      6kRDCCEEcUdJCGG8tuatubiG0tPTc3Jypj+Kxujbw64CvcSoTMjfYE0EdOXNV/XVz4ip8Nuv
      fheXqWJupwuK1KTXz0hTtAqMCxwuDwdFhepsHuOdChE/+JdvzLnHYywgCGFfIBIjqVK1DABI
      kjSXg1EM5HIwhqYBgqIPvAvXJjoHgjysoMW7q1wu9/Dhw9euXcMwLCsrK37xv71990qPPVkp
      PPeX+xWi+Yd4a05+ZdlbH76LE/iUxSPji/btPRDiKaz1ZxhUxudyEC7C5/GEYhGXxx3st6Jy
      KQRwZlSKx5s6h/8f7g5DAL5alnFQGHjhla9+9c8+9cE9/85UNYqGcaFRyMDMtGQBRm9CeBce
      j3f06NGamhoAQFxDI84QAMAVJAI4tVYCghC+3zb1QZv5+XLDCztTH635lPzdf59TiaAoM8NB
      lnzyOIaiKIYxNI2iKMNAFEMZhkFm/kQ+AUxF7u/ZM4cJIIRpEu5v6nr5PvfNERrK1SQyFBu1
      7D1QbHFHNyc+EJ/PP3LkyKVLlzAMS09P//pzxa/eHDmUq0lWrlnvNRKjv362O4BT96b8z5Qn
      C7jzvO9QDAOPvArjFx/8iwAAluX493jwKZN6LBQlGebZFA0KI1/8qy+6cAD9DrPdpTEYY1TY
      nxdSCXF1fvWmBZji8/knTpy4du0ah8Opzk7el6WmaRpd+Fc+6gqHcLLYJE+wJeBhaLpG3Gn2
      p6uFnC2yHWD7IOdx/kdJ+oOumLy4YicAgIGwb3JKLhaZ1CoAoMvhUGp0azkTPYeFeq99LVf6
      /HKuqzPv6MtylPjFaz965ukX0tPTEQRBAYiR1EBvf1FJIQNQ0YN5z7sT3pd/2khQzDefL/7s
      nrQEO9EBnOyY9BUbJAqx4BO1FjYvqx+FvVVb//2zHwt43J/+1z/LNt7f5rsJLZDb7qxtbIz2
      1LdPhTs6Okt353z1H76i1ZsyTCaf09wz5d+xc3dd7emuCeRn3/96PMuIM0xQDACg1xpY+MbQ
      5w8qZBKHyylXavgcTIAwB3K08Y0ALKtnyGIDAOAxctLl3kwBiaWq0mRbQP28I+QxadRahdKQ
      lhEKR4YG2174vS/gFy4AjigWxNVyJQ1AvJE5UZj0UmWyK0y8sj9zkTu//8ar1UeP/OKN946e
      OuH3+KdGhjLT0hiBRMWjQkBIeKeCJJKWVXZkX9nGfNPHjM8eOeANh5MU8qq8nOmLm/AKmyZe
      NIIgDAOjkeD3vveDFz/zYnZWFoqiDGQQZMGey0KvMHNf4z/+y2tPPr3vrY8ac4x8njxbzQeq
      JJl1qG/AEdpXnOnlyQUh4i/+6ouL2My+whI3AywioIDTYvPTKUmigXFv1Dcl0qSV5qevrYBm
      AiHEcby2tjY7OzsrK8s82Pv62+8k6dP3nnq2KFXFMMzYQF+fxXLq8DEUie8LQxGEulHbduzo
      w1VPSJMtHfcyjCqnx987aMlN00ZjHI1GOj7YHaIFRblpFMZDiFhOfu4iNm93AUGGununo3zX
      jpbGVqNe1jfuOnygiouhyxcQ/cYPv2eO8bPSC1989hAAgI5Fb9VeS8rflZ+sQxAEQoAiCwvI
      aRm8NxaIOQcpRCbXpMOoZ+e+ymg0KhAIEnwQ8Z1viQso7pR4/fr19PT03Nzcn//oW+Vle986
      cyE9Oae54Zoxt0yqlWCWCRuFCUhcZ9T7Q6TYmPflP395Dc2gaTpxv6VNTEwQBJ/Pn7ciYpHQ
      pdpbxRlJ5651F+emapRiXUa+iAdJklxuC+Torbk0jnRdOi/X67khm5kAGh7NkRlaG+qLKnYi
      DCkRiRbsA2mTDGIrYcrKGTEHQ/5xsTxJKBTGayLxX9KyWqD4WtipU6dqa2sZhlEqtWKx9He/
      8Pkzv3pTpkkCKFejUg4PDHNlwn0HjlMh67jZpVAqEjEmcTPAAvtut1ri+Et8XngiiVGnlSh0
      qXqzUIwNW11ZJQIRnxMMBpe7VZ4rlCik6I59hwWScP3HEzypVKkS2/xhnVbNUaY/WW6609Of
      UB8IQia+XLGur7DpxVSapuvr66VSaVlZ2bQ/dXw2L+7Vf//xIQiKLDJztBIzHoNX2CwghA8W
      l1bZB4o/efDIumdCc6wIkugrYE3AMKy6ujocDjc3N8eXEabngmdOCmPo0ur5pLN2KzDTTx5B
      kOmV1PjU3VYEw7B9+/ZxOJy6urr1iCnBslZsUQEBAFAU3blzp0wmu379eiwWWzoDy2awdQUU
      p7y8PCUlpaam5tFz+Vi2AltdQACA3Nzc7Ozsq1evhsPhzbaFZS7bQEAIgmRmZu7YsePq1as+
      n2+zzWGZxTYQEAAAQRCj0XjgwIGamhqHw7HZ5rA8ZHsIKI5KpTp27FhzczMbw2rrsJ0EBACQ
      yWTHjh0bGBjo6e0dcYaCOOuqsc5QOHANAmrBEcw2ExAAQCgUHjly5EcX2w5/+Wcv/rjBH2U1
      tG4wNHjvFfDDfeC9PwHM/FEZt5+AAAAcDmeUm0oyoKu5ftS5iIsZy+qgCTB8HTAkGL4BqPnD
      O29LAQEA/uJITm5h2VNVhZOdjZFIotHTWJYHRwgO/j1QpIKDfwu4onmTbKZD2UxWvDPVbDa3
      tbVVV1er1erVm/G4LabOYJ0cypZ3anM8ZFWCfi3x9dvEF/Oml9wf+YB8++wHXBqSCGesr/1a
      fQ9KhwHGGR4cFIuEVpvbqFf/9sOz9skxFNAUKpCIBCs2g1nOIQqbmJiiKBRFlxVyKRaLLRlu
      8O2z74oRJIDTLsvI6Y8bRFiMwbgjg4N8obCvb0Ak4g8Mjw91d9IkEYpBuVQMHm2BHm6ig7Tf
      H8HDPoojArhfpDYoJcLNaYGY2Pd/9u+EFwk5JuRZuy0DTXnFlXVNl/ZW7mm8088B0JhimHRG
      pKTN44uV7T3593/9Jys2Y/u2QDOdXgI+v1DIGxieTE/RW93+rPQUJLEW6Ie/+mF0wopTiFBu
      iHiH+Yocu61Bpy+a7O/DaaAzJk85fOXZRrvdg/Fl3/jGV8BMp3oIYV9fXzgcRlG0oKDAMtQx
      EeQb1cKB7gahIhXpmzp6cj9cZnRLkHCAy+mYe/N9iORk5ol5ejpsv9c3XF51yG01H6w+caC6
      UiQyuLxug0EpU0YLUkqu1t7xR/3x+IErsGH7JnY4HFNTUxRF6fV6nVJ29sLHB6t34X7Le629
      GSalWq2Ti7mJ3DM7PZtvzEERZKC/R1e0x2udrCg7lFNYNGVMHrdZkwxGldKTlqJCBUKOSHnf
      pX3mTR0OR3d3t8lkys3NBXSgtmko4jVrjaledxiBdPX+XTiOL+RJ+SjLcuIEM1yWEkm50F7j
      3t7eiYmJAwcOiESiFZixXRI/6tJaU1PD5XKrq6sRBKmrv5WRrLt+ZyRFzoMIWrJzjwBjYrHY
      cvtAidg865WBomg4HL6fBxVXFOf6PHKAiUw6UijTboxLayKJF9lYWFpaqlara2pqDhw4MN2t
      /iS4tCIIMu30UlZazpB4VSmmUav8YVwtE8WDbK7g9KflRSibnJyE0+drIJhMJpHJHgnRuOUx
      mUwSiaS2trawsDA7O3uzzdkILBbLzFZZKpUCIJWrtAAApWp9i571ylAqlSUlJcFgcH3LXH/k
      cvmpU6cmJycbGxs/CQ6NRqNRKpWKRKJl9ZzWhFkCksvlDQ0Nbrf7MZia4/P5hw4dEggEV69e
      fQy+zpIEAgGbzbbxy8yzBOR2u/fs2SOXy6d7oNsaFEXLy8uLi4svX7782B8gJBQKtVptWlra
      Bpc7S0BGo7Grq2uhKd1titFoPHr0aFtbW29v7yKvM1eI+GX9aMuYZyNtW0PuHzyw4ftUZgnI
      arXyeDyn07muRdIMvDfld4c27uxVmUx24sQJn8938+bNhc58/cqHXV872/PKG3cnPNvyfed0
      Oj0ezwr6QBDCYd+ELbzCSp8lIIPBEIlEkpLWN0ryty/3P/ef9U9/v24jNcTlcquqqoxG48WL
      F91u96MJgjgFACBpJkZty063Xq9f7jRPnI+Gr//+ub97+ezf9ntGV5B9bguUn5/f29u7rkcz
      t4x5aAhtfnzcvaG/dQRBcnNzDx06dOvWrUdb2X/+dMkr+zP+7YXibN32m7kAAMRiMYqiVvD2
      6HT2U5AOkuFB70o64LMWU6VSKZ/PNxqNAoFg3knhNVlMNcoFQ87QicKk392Vgs4I4bLgYuoj
      xBvqxKetZ5ohFArT09Nra2tpmlar1dPXFSLewVxtlka0TRdTlUqlXq8XCoULrVQutJhqkiYN
      +8aLNbmfK3yWz5mVNxGbZy1ldHV1xWIxo9FoMBjmTb0F3TlWYMbZX3+ve8Qz6nLsqzqsS5JZ
      +weydx6QC/lGrdLs8Aac9uQUA0+qYSJunlTnsZvTcwrEgnkmZLfOYqrdbp+cnOTxeCUlJQs9
      8I04K8Pv90ulUq/Xu5CAFucn//Z1m484/pnPcyPu9IzMYChgmbIXFmYNjjsiEceB/ce/+qVX
      JKbkU8+9FA6EM4xKiyuUkZEc8nm9EUbIBPgKg9M8Qng9MUM+j/BnJGvNFgfEBPt2la/t4MLn
      tvEFGr0ejPd119y267mwrXekMCenpqH3U/tzW8e8BoNYxYE3b3fqktUBq+MP/+b/HN25YEih
      rYDX6+VyuX6/f2XZ6ajnm9/8NsFXffb5YzjFTdGrfH5PkECkHIrhi8at1kqd8J9fPStVCn/v
      089EGR6KexmRTi/neZy2WQLi8/mRSMRkMq3MjmDAS/iCv3375xl6ff/oYF9vb2FK8k9f+7VU
      LNRmGfdVH9fqUp96cs+3f/laaMJeUJxv1KpGhmV9Pf32KGaAFqA0ec1mKoKI0u65LeP6/Dwk
      SElQesfOcuGaDk6zC3d97sSnb9Zd5dDomNfZ39Tkt7tswWhesjSA8I7s3SHXKeUIhXGEfKnY
      a3ALsK3utymRSLxeb4Kni84DpH1+TzDieutiWEKKkzOlUxNuvlTbX3+Jo0nP211Wrkwt33kY
      i7S++vb7pDuoVYoRRXK6IDBkny2g+KmIK+5B55dUTNqDhsyMnDTDxQvXKiv3VuakCLUpTrc3
      LTsZA0CqFF6/Y33u2L6B/onk3JKKFNmHl28XFOUZQpgc6mISoU6twQCXI5bFkpS6zGylVM4j
      cWytpzb2nvg0AODg/uMAgH0AUE+/cLPmWpCg0wyGwpJiHu9+o727+sgaF7xu4DjO4/FWvPsb
      4QiLiksJIMopTucH/V3jtt2790ql8hQ5FuXIU9JNQpXWbb2gMmTvzPd7wyA3I4OOeIbG6JyC
      oll9oM7OTg6Ho9FodLp5zqYDj0sfaF6mpqZaWlri668Jds+3Th/IYrF4PB4ul/voKTbTbEQf
      SCAQJCcnr2DR/zHAZDKp1erbt29brdbdu3cLhdvpxCeRSMQwjEq1zivv8zGrBcN8svYAABM8
      SURBVIrFYhwOJ/77C7ptdh8V8VtJjpQOOcWatKLc1Me4BYoTi8UmJyc7OzurqqqWHElsnRYI
      PHAxAwBAhuq8ey8tRdvUOZSZZpiweg5W715RkM3lt0BWq3V8fDwrK8tkMkWj/kmrH6MYEOpD
      VDnE5EQ0RRsPspl4wMrEV2fgjMO8lyS+pJWgn8ayzGAYJjU1Va1W37p1S61WV1RULKLpRQIV
      rnfiR912a2trtVptRUUFiePj9qmQL1Cam3TuQteeyjSPLxIPsrncmOuJ2Dzr6QiFQpqm41FU
      dAbTqC0W9lpInpT2jYtlGxRkM5HEy2qBlmUGAIDL5SoUiqeffrq3t/fq1au7du1KSkpaKPvW
      8UjkcrnhcBhCyBNJDDqtSsRr6RhKzVQOW51ZpeXiFQXZTMTmuS6tgUAgNTUVAAAwyZ6dJRAW
      AwAAgOATc1RWHARBCgsLTSZTY2OjSqUqLy/f+l3D6VHYrp27AYSZBaUIQCCA6xrIcNatY7FY
      SkrKTHUj99nQIJtbB7lcfvz4caFQePHiRbvdvtnmLIZIJJrV8UcQBEHv/7uePLx73Bsax/Gp
      qSk2Ftg0GIYVFxcfPny4ra2tubmZouaPMbC5xHuQsVhsbGxsg4ueJU+Px8Pj8RQKxSfwiLXF
      kclkTzzxhFgsPnfunM1m23jX48VxuVxCoVAsFm/8e3bWMD4u5Jlxmefw2A/jlxy4+v3+5uZm
      kUhUWVm5rN3pG7AzNb6QsFCWdRrGzxLKxMTErVu3uru7l1XMJwq5XH7s2DG9Xn/58uXx8fGt
      s+WjoaHh/Pnzm78rY3EVswAAUBTNyso6fvz4xMTE9evXA4EtEaCIJEmNRrPx5c4SkMvlSktL
      MxqNG2/HtkMkEu3fv7+wsLCmpqazs3PTm6K4rDfZqV6j0bS0tLBhUBMkHjv26aefpmn6woUL
      Vqt1EzvXBEG0tbVtfLlzW6A9e/aEQqGNt2P7gmFYRUVFdXV1T0/PrVu3NmsGRCQSKRSKTe4D
      8Xi87u5uuVy+wUY8BiiVyiNHjqSmpl67dq2np2dZK1+rx+/3MwyD4/gmv8JGRkbUanU0Gt1g
      Ix4PUBRNT08/deoUjuPx6aINK5ogiHgM/01ugYqKijgcjlgs3mAjHif4fH5FRcXhw4e7u7uv
      Xbu2MZEqtFqtXq+XyWQbUNYcZk3c4TiuVqtDodByY0OxzARBkPh0kdls7ujoEAqFRqNxXTeM
      UxTF4/EoisJxfINd4WYJKBAIkCRpMplY9awJycnJycnJPp+vvb2dJMldu3YpFIr1KIggCL/f
      r9PpNt6RctYrTKvVOp3OGTt/YU9HW0fPYFtzQ//I1AZb9tigUCgOHTqUm5vb0NDQ3Ny8Hl1M
      iURC0/TU1MM6CrisNTfqRkaGa2/foZh17BjNaoGCwWBaWtr0MB5Cpq//XoxhTCmVoZHRVIPq
      sfdIXD8nw6SkJL1ePzo6ev78+YyMjKKiokWa+RV4JHK53Jnf1DLWOzo2anGGi1KVHl9YyN0Q
      j0SdTtfS0pKVlXX/bwjFEoWAQnyecbFMF9/vjCBIgkueAIDEU4LlhKGMSydxl4FlmbGuifPy
      8rKysvr6+i5fvlxQUJCZmbnQt1j8zo9WrVqtnpiYmP4TokKjLilKkMMWR3ZZhZjPCYVCy7I2
      ETPAHAG53W4EQaYHDgjKOfnE0wBB4rqe/hEva7Ih8RZone683MTrbQOXyy0pKcnOzm5vb+/r
      6yspKUlNTX1URsud0RkaGpq52F5QUZUHIYogDIDoA5+yFcwSLZllrk+0SCQSCB5GekdQdGUF
      syyOUCisqqoKBAJdXV39/f1lZWV6vX41N9RqtbOaJQSJH4qOrrMv8iwBDQwMoCjKHm+7McRH
      +9XV1T6fr6Ojo6urq6ysbKEtnYtjsVh8Pt8K3lCrZ1aRZWVlfX19GzwN/wkHQRClUnno0CGX
      y9Xa2oqi6I4dO5a7mmQ0Gr1er9lsXicjF2GWgOJugY9HhM3tBYIgWq32iSeesFqtTU1NXC63
      srJSpVIl3nlgGGZm32PDmCUgj8cTDodZAW0iBoPhqaeeGh8fb2pqEggEJSUlGo0mERm53e55
      Q/etN3OH8QzDbMqSCstMjEZjSkqK1Wq9c+cOh8MpLy/XarVLZtmUsPyzBBSJRFJSUhL0mWdZ
      V1AUNZlMBoPBbre3trbGZbSI06pYLF5xYKfVMEtAHA7n0qVLubm5i0QJYdlIUBQ1GAx6vd7t
      dnd1dZEkWVJSMm8Y3aGhoe7u7pMnT26whbME5HA4GIZhPRK3CEGc/M6VgUiM/u+n8jQazZEj
      R/x+f3t7e0tLS25u7sMFAwAAAG63myTJjY81Pndv/GNzzsFjwOm7ltfqxwAAOin/707mAQDk
      cvnBgwf9fv/w8PDMlF6vNzU1dVOc2ee6tC53vY1l/TAqBBiKAACSlQ9/0giCKBSKoqKimSn5
      fD5BEBiGbfyawawWSKFQyGQy1qV1i3AkX/fOn1XhFLM3cwlnNJFIJJPJAoHAJr/ChoeHEQRZ
      76MOWOYFQkiS5MwhMIog5SZJKByJxWIkEcW4fAyBOBETSebuUJ6amopGo4vEMVo/ZgkIw7BA
      IMAuZWwKDOF/9zfnfv9zL1w8f0GVnGkZGdh96OT43Y8u3QtFPMNRD6ZRCsLhaE5eMoEZ/vzz
      z83Mi6IoQRCbsrlxVh9IJpNRFOXxbNcjj7Y7JEX6rGMtd5r/9ev/RGLyi2evQgBohjm2/0hm
      fnl+qiYaY3yOSW1G5pyMBoPB5/P5/f6N35UxqwVSq9VdXV3TuzIgpG9drUFF4pDfK1aaDuwt
      22DjPlGgHKFGI2rqHCkorti9/3jQ7Tzx5Cke6fzSnjSdgPK7P1Ql7/x85cEd5fnN7fceza5U
      KmfuC5sc6O0YGFPIpC5f+OSpYyL+ei3Uz7qv0+ksKip6GDGfoSxOq5jHURjLQMQdjUZZl9Zp
      fBHyv73TYfXj//J8UWWaci3ujD7xzKenEz9wzowvK3FefPn34h9BAHZVlMfHXLMyoyifz5/+
      ppOTIxhCj455ywv1wRBOxzbEpTUzM9Nms92PkQgAgvJy83IpyKcJp8SY8skJsplIstujjoYR
      DwDgrZapquyEnHjWNchmSUkJRVHTXzO/uORO11D5Dq3NFchTiHgYuhFBNsPh8OTkJMMw91dV
      EGRH5Z7lFvkJoTxFYVQIfBHycP5KXMDWnKGhoXh82biGVEmpJ5NSAQAl61zuXHcOu90uEok2
      ZVlue5GmFp/50l6SQQzyTfDCeRSLxQIhnDPBuAHMPbVZLpev0+a3bUrE7/nhd/7vj954r6Nr
      cM5HCiEX9Yz3mmcNWnv7BzbQuvtYLBaVSqXVajd/JtrpdG56rKQthVCmzEsWK/dWnfvBv/6n
      N4px+Rq5Si7Fhu3Ossr9RhQXFBxGJu/8w3d/ptcmR1FxqhxQMGL3Md/97nfE3A2KVRrvnsZi
      sY0pbiazviFBEElJSew80EwQBBGIpVwOh8cVHDp46OSJIxya4XK5UoXmUHUVXyBouPLR3YFJ
      oyk9NTOd8jtUOh0mkCUbjegGNgZSqTQSiVAUtfHzQHOPexoeHo7vWpo3NRulNQ5D0yiGzUxM
      0zSGojSEKEAAAhgIsdlbvdY1SqvD4bh79y6CIIv4A23EYSsikaiiomLFJyd+ckAf0W5czdgD
      mWIb2xfR6XRxR+SNX0yd9SuJRqMNDQ1sfKBth8Ph8Pl8Ho9nkzvRNE2zPtHbEYZhNmvsPKsF
      slgsXq93q8XxZ1kSv99vt9s3xRlwVgu0a9cuCCHr0rrtMJlMSqVyU0IYzBLQkpuPWLYmEolE
      IpFsStHsqTwsq4IVEMuqYAXEsiqWEBBkqGAw7LRZAhFiYwxiWSsC/gARDZut9nUdVC+xdNDd
      Wj/qpPkcLgZGjp3cv56WsKwlsbDntV+e3lmehROMRKpUSNZrbm8xATFUzGy1hoOYyJQGYhHW
      pXXrJH40SuscBnt7RALUF8AVchFJksEgsU4urcjidQYZyheIBjxWscqoUUjYxdQtkvjRIy8f
      xefxcblwwubLz85AkA1ZTH0UBOUoFVKlYnkFs2wFFCoFAKBAurTD/2pgR2Esq4IVEMuqYAXE
      sipYAbGsClZALKuCFRDLqmAFxLIqWAGxrApWQCyrghUQy6pgBcSyKlgBsawKVkAsq4IVEMuq
      WMydA0L6dt2tCEFDkhSrTNV71jvaFcuaYR7p7ewb4fMkITx24uRRES/RcIDLZXF/IDTFqB8c
      M/PlqUyIDbK5hRIv6ZGYZEyF3WM4TmfqlcFglOZtSJDNuUC6s3fAlJIdDtilejbI5hZKvGTV
      jg31AaE4VSuzuIN5chGPs15BNpdwaZ0D69K6RRIn4tI6h3VyaWU70SyrghUQy6pgBcSyKlgB
      sawKVkAsq4IVEMuqYAXEsipYAbGsClZALKuCFRDLqmAFxLIqWAGxrIoEBAThcH+PzRNYf2NY
      1piQz93VO8isZ+T4pQXExPwTtmhPS/v6GcGyTnS0dYWdDl9oHc8RS6AFQjE84mOwTYiCzrJK
      OBzgDYUxdB3rbmn/G5Qr3VtVzhOyQcq2HzuqqvzBqEy0jqfnLMOhLO7SiiBIgm5fBEHweLwE
      PbkYhqEoKkFXNYqiAADrYQaO4wJBoofobm5isViMogmNgSiKitedUChM0IDEzUioDuJMu7Qm
      WM0oisazJJKYpmmCIBI852VZjpEYhgkEggTNQBAk8UMntkjiJeFwOFKpdAX3TCTL8lxaWVjm
      sOx5oN6OljNnL5EQ3m2sv3LtBsXMo7+Jga4zZy/6w0Rr460b9XcWVyikY6fPfwwhtI8PfnTm
      nNMfXiQxTUbOXLgCABjounP+8q3FB6iTg71nz110B6M9bS0ff3wZpxdL3N/VfubMBZyGt2uv
      NtzpWtzmrtY7Fy/XMAA23bxxvbZ+0R8hbG1suFZTDwH4+OwH3QPji94Y0GTko7MfQwjbG29f
      uTr/410ZDEVcvXqhsf1eohkgdeb9C0tuy1i2gNzBcLJWFKZhMEKreRxivlqxuty5OcnecISD
      8bweS5Ra9CkgmEjAAwC4LI787CynJ7iYuShXyOcAACDEomFHMLbYnXVGEw8yPA7m8kUzFOIA
      sdjTSE5NwQDAEMjjCuwO8+I1l12QE3TbSYYhKA6fWVSYEOTkZ3s9DhpSYqF0bGoJAdXfuDZp
      s5IQBiKURsDBF390y4HCQ3xlCh5wJ5wDlYmW7jMtW0BGjdYdoAN2i1YpDGKYgDNP5zTNlDw+
      5qDCAYaDKuWqxTe1ISiWbDJG/A6hTj88MW7QLnZ0I4JxTSaD12WNQkQqUQq5i3WNRwZ6Ga7Q
      bp8y6OSTOKUULGZHb2eXQCo1W6YAF1Mr1YvPWgwODGqNRrvVKpegQCxavH8+MDiUZDBYLRYa
      Q/UazaJpwZ4Dx/ftKndYLVqVyI+gi3/BZcEVybCIU642JZoBQU2pxiWLZ/tALKtiy6+Fwfvc
      /yuxPgHcvJ8F3MSyVwpMwGgIIZz9XOOZljGM3yjgxNioQqv3Oh3GlNT+e3c9AVwsU1SWFY32
      dw6bPSIRf3x8orKsyOb2llftByFPIEKajPqg1x2hUb1GCRmypbWjt7P76Sf3t/X78jNUPCbU
      68LyjZKeocnSwmyEI6RD9mEbUZSXEokQeDSUpE+y2pwmvbatvs4LhMWFuUox3xuKiXmQBDyE
      ivaOmg9W7ZyanFRodB6HPclgsFhseMAr1xsZBiiEHH+UxENhoRAdH5vkSdQ7K4o2+zEmSjTg
      uF53VyAQlpfmMQgfxkI0TbmjoCjTNDo6rk1K8vhDqSZDS10tCRGFKaMoK9XvcUUp5lZNzZPP
      v7DlBESGXY2NTTyRxGWzn/ydFzVq1choWyCC+zKzRiccJSUFza1dUp7wxo26lMx0GsJ7d9oA
      gomkyrstbaa0TL1GGXVPMmINhntqmnpBGB8XYVPdt2Rpu27cvAd4wvMfneNrDQeLU4iA8+23
      2vLT1BxdSt2tOpwgJBpdmoIfDIRHe++14xGLM5hhVGMIA6GI4SAUEe7uGbRbLxXs2NV2u8FN
      kGmGlFGHg0MzDII4rV69EgXKVA6CUb7EO6qbj3NsJKOkKkkQbm5qpxCGDjkFYo0+O98xPtzY
      0MjlqKIQf/GlFzU6bVtHD06DrPSUxuZmGIMipVKI4FtOQJCBMpVWJOALOVwMRfTJaZmuoN1p
      pWimtDin/d6ATKEwaPRpKTqGL+IhSIzEoUgd8rpVGqnT5ZbLpFqZlAraKg4cDQRDsnSZw23P
      Ktxp9YTyCvKJGAOSZAxfLpLIQ7iluKwkP0Pb0tGXnp4ZCPk0Wr3HaTfpVESMSZLzARSkpKcJ
      eRzr5ATkKwAAHoelqHyn3+1Ky8sVerwqmbRvbEinS1OKKQTBDElar9sl0uhD/u0kIGNe8Y2b
      jR6RVKMUE5gIEXG4UiUZiwEhojOaAMKRQxmAMDU9JYhD29QkhCBJqfBRXL1WgXLE274T7XG5
      lRr1nMGC0+HSaDVrewo2Q1M+f0Slks286PY4lUrtzMVKhox6wrRGsTlnKG88215ALJvLlh+F
      sWxtWAGxrIr/D1VZRNeEueGrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly Data Allowance vs Cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Costs Table' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Economic Classifications by Gross National Income per capita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Costs and Data Caps by Service' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
