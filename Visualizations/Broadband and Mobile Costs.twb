<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' inline='true' name='excel-direct.42472.868056562500' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Telecom Costs (Single Sheet).xlsx' password='' server='' validate='no'>
        <relation name='&apos;Cost Data$&apos;' table='[&apos;Cost Data$&apos;]' type='table'>
          <columns header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='as % GNI p.c. (Mobile cellular sub-basket, 2014)' ordinal='1' />
            <column datatype='real' name='USD (Mobile cellular sub-basket, 2014)' ordinal='2' />
            <column datatype='real' name='PPP$ (Mobile cellular sub-basket, 2014)' ordinal='3' />
            <column datatype='integer' name='GNI p.c., USD (Mobile cellular sub-basket, 2014)' ordinal='4' />
            <column datatype='real' name='as % GNI p.c. (Fixed broadband 2014)' ordinal='5' />
            <column datatype='real' name='USD (Fixed broadband 2014)' ordinal='6' />
            <column datatype='real' name='PPP$ (Fixed broadband 2014)' ordinal='7' />
            <column datatype='real' name='Speed in Mbps (Fixed broadband 2014)' ordinal='8' />
            <column datatype='string' name='Cap per month in GB (Fixed broadband 2014)' ordinal='9' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband postpaid)' ordinal='10' />
            <column datatype='real' name='USD (Mobile broadband postpaid)' ordinal='11' />
            <column datatype='real' name='PPP$ (Mobile broadband postpaid)' ordinal='12' />
            <column datatype='integer' name='Monthly data allowance (MB) (Mobile broadband postpaid)' ordinal='13' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband prepaid)' ordinal='14' />
            <column datatype='real' name='USD (Mobile broadband prepaid)' ordinal='15' />
            <column datatype='real' name='PPP$ (Mobile broadband prepaid)' ordinal='16' />
            <column datatype='integer' name='Monthly data allowance (MB) (Mobile broadband prepaid)' ordinal='17' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband postpaid 1GB)' ordinal='18' />
            <column datatype='real' name='USD (Mobile broadband postpaid 1GB)' ordinal='19' />
            <column datatype='real' name='PPP$ (Mobile broadband postpaid 1GB)' ordinal='20' />
            <column datatype='integer' name='Monthly data allowance (GB) (Mobile broadband postpaid 1GB)' ordinal='21' />
            <column datatype='real' name='as % GNI p.c. (Mobile broadband prepaid 1GB)' ordinal='22' />
            <column datatype='real' name='USD (Mobile broadband prepaid 1GB)' ordinal='23' />
            <column datatype='real' name='PPP$ (Mobile broadband prepaid 1GB)' ordinal='24' />
            <column datatype='integer' name='Monthly data allowance (GB) (Mobile broadband prepaid 1GB)' ordinal='25' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GNI p.c., USD (Mobile cellular sub-basket, 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Fixed broadband 2014)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Fixed broadband 2014)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Fixed broadband 2014)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speed in Mbps (Fixed broadband 2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Speed in Mbps (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Speed in Mbps (Fixed broadband 2014)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cap per month in GB (Fixed broadband 2014)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cap per month in GB (Fixed broadband 2014)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Cap per month in GB (Fixed broadband 2014)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband postpaid)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband postpaid)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband postpaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband postpaid)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (MB) (Mobile broadband postpaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband prepaid)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband prepaid)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband prepaid)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband prepaid)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c. (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>USD (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP$ (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP$ (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>PPP$ (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]</local-name>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[&apos;Cost Data$&apos;]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Max Cost' datatype='real' name='[Calculation_2170502013938548]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX(&#10;MAX(&#10;MAX(&#10;MAX([as % GNI p.c. (Fixed broadband 2014)],[as % GNI p.c. (Mobile broadband postpaid 1GB)]), &#10;[as % GNI p.c. (Mobile broadband postpaid)]),&#10;[as % GNI p.c. (Mobile broadband prepaid 1GB)]),&#10;[as % GNI p.c. (Mobile broadband prepaid)])' />
      </column>
      <column caption='Economy Classification' datatype='string' name='[Calculation_7610502200112783]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt;= 1045) &#10;THEN &quot;Low income&quot; &#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt; 4125) &#10;THEN &quot;Lower-middle income&quot; &#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt;= 12746)&#10;THEN &quot;Upper-middle income&quot;&#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &gt; 12746)&#10;THEN &quot;High income&quot;&#10;ELSE &quot;No data&quot;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Monthly data allowance (MB) (Mobile broadband prepaid)]' peg='0' size='500' />
      </column>
      <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[as % GNI p.c. (Mobile cellular sub-basket, 2014)]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Calculation_7610502200112783]' derivation='None' name='[none:Calculation_7610502200112783:nk]' pivot='key' type='nominal' />
      <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
      <column-instance column='[as % GNI p.c. (Mobile cellular sub-basket, 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile cellular sub-basket, 2014):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Telecom Costs.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:22:59 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]' formula='SYS_NUMBIN([Monthly data allowance (MB) (Mobile broadband prepaid)],500)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11' timestamp-start='2016-05-01 05:22:59.495' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Cap per month in GB (Fixed broadband 2014)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cap per month in GB (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cap per month in GB (Fixed broadband 2014)</remote-alias>
              <ordinal>0</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unlimited&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>3</remote-type>
              <local-name>[GNI p.c., USD (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GNI p.c., USD (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>2</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>949</statistic>
                <statistic aggregation='Max' datatype='integer'>53986</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (GB) (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>3</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (GB) (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>4</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>60</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband postpaid)</remote-alias>
              <ordinal>5</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>500</statistic>
                <statistic aggregation='Max' datatype='integer'>2048</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid)</remote-alias>
              <ordinal>6</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>500</statistic>
                <statistic aggregation='Max' datatype='integer'>4200</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>7</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Fixed broadband 2014)</remote-alias>
              <ordinal>8</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>7.1500000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>78.280000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>9</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.4400000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>51.590000000000003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband postpaid)</remote-alias>
              <ordinal>10</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>5.1699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>11</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.46</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile broadband prepaid)</remote-alias>
              <ordinal>12</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>5.1699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>35.07</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PPP$ (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PPP$ (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PPP$ (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>13</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>9.0399999999999991</statistic>
                <statistic aggregation='Max' datatype='real'>29.600000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Speed in Mbps (Fixed broadband 2014)</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Speed in Mbps (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Speed in Mbps (Fixed broadband 2014)</remote-alias>
              <ordinal>14</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.5</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Fixed broadband 2014)</remote-alias>
              <ordinal>15</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.8900000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>51.299999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>16</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.4900000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>22.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband postpaid)</remote-alias>
              <ordinal>17</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.0</statistic>
                <statistic aggregation='Max' datatype='real'>22.100000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>18</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.5</statistic>
                <statistic aggregation='Max' datatype='real'>22.100000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile broadband prepaid)</remote-alias>
              <ordinal>19</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.0</statistic>
                <statistic aggregation='Max' datatype='real'>15.779999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USD (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[USD (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USD (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>20</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.7599999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>19.399999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Fixed broadband 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Fixed broadband 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Fixed broadband 2014)</remote-alias>
              <ordinal>21</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.69999999999999996</statistic>
                <statistic aggregation='Max' datatype='real'>14.789999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband postpaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband postpaid 1GB)</remote-alias>
              <ordinal>22</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband postpaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband postpaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband postpaid)</remote-alias>
              <ordinal>23</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>4.1200000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband prepaid 1GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband prepaid 1GB)</remote-alias>
              <ordinal>24</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.48999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>5.1500000000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile broadband prepaid)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile broadband prepaid)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile broadband prepaid)</remote-alias>
              <ordinal>25</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.26000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>7.3099999999999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[as % GNI p.c. (Mobile cellular sub-basket, 2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>as % GNI p.c. (Mobile cellular sub-basket, 2014)</remote-alias>
              <ordinal>26</ordinal>
              <family>&apos;Cost Data$&apos;</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.19</statistic>
                <statistic aggregation='Max' datatype='real'>8.6199999999999992</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly data allowance (MB) (Mobile broadband prepaid) (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Monthly data allowance (MB) (Mobile broadband prepaid) (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Monthly data allowance (MB) (Mobile broadband prepaid) (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>8</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.554439' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Fixed broadband 2014):qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid):qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile cellular sub-basket, 2014):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid):qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid 1GB):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid 1GB):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_7610502200112783:nk]' type='palette'>
            <map to='#1c70ae'>
              <bucket>&quot;Upper-middle income&quot;</bucket>
            </map>
            <map to='#26456e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#69afd5'>
              <bucket>&quot;Lower-middle income&quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TableauData (Mobile Cellular Subscriptions)' inline='true' name='excel-direct.42472.869711678200' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Mobile Cellular Subscriptions.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' name='Year' ordinal='2' />
            <column datatype='real' name='Mobile cellular subscriptions (per 100 people)' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile cellular subscriptions (per 100 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile cellular subscriptions (per 100 people)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Mobile cellular subscriptions (per 100 people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Mobile Cellular Subscriptions.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:23:58 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='202' timestamp-start='2016-05-01 05:23:58.506' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>0</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BRN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VNM&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>1</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mobile cellular subscriptions (per 100 people)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mobile cellular subscriptions (per 100 people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mobile cellular subscriptions (per 100 people)</remote-alias>
              <ordinal>2</ordinal>
              <family>TableauData$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>202</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.015785413008589301</statistic>
                <statistic aggregation='Max' datatype='real'>158.130119762151</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>TableauData$</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1996-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#32a251'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#82853b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#acd98d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TableauData (Internet Users)' inline='true' name='excel-direct.42490.980789548600' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Internet Users.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Year' ordinal='2' />
            <column datatype='real' name='Internet users (per 100 people)' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet users (per 100 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet users (per 100 people)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Internet users (per 100 people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Extracts for Tableau Public/V2-Internet Users.tde' schema='Extract' tablename='Extract' update-time='05/01/2016 05:23:34 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='194' timestamp-start='2016-05-01 05:23:34.989' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>0</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BRN&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VNM&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>1</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Brunei Darussalam&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Internet users (per 100 people)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Internet users (per 100 people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Internet users (per 100 people)</remote-alias>
              <ordinal>2</ordinal>
              <family>TableauData$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>188</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>82.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>TableauData$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;01/01/1996&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;01/01/2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Telecom Costs Grouped)' inline='true' name='excel-direct.42492.894420509300' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Telecom Costs Grouped.xlsx' password='' server='' validate='no'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Service' ordinal='1' />
            <column datatype='real' name='as % GNI p.c.' ordinal='2' />
            <column datatype='string' name='Pre or Post Paid' ordinal='3' />
            <column datatype='integer' name='Data caps' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Service</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Service]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Service</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as % GNI p.c.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[as % GNI p.c.]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>as % GNI p.c.</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pre or Post Paid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pre or Post Paid]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Pre or Post Paid</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data caps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data caps]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Data caps</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Pre or Post Paid]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Pre or Post Paid]' derivation='None' name='[none:Pre or Post Paid:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Pre or Post Paid:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Postpaid&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Prepaid&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='excel-direct.42472.868056562500'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.42472.869711678200'>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.42490.980789548600'>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='excel-direct.42472.868056562500' target='excel-direct.42472.869711678200'>
      <column-mapping>
        <map key='[excel-direct.42472.868056562500].[none:Country:nk]' value='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='excel-direct.42472.868056562500' target='excel-direct.42490.980789548600'>
      <column-mapping>
        <map key='[excel-direct.42472.868056562500].[none:Country:nk]' value='[excel-direct.42490.980789548600].[none:Country Name:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Costs Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.868056562500].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Fixed broadband 2014):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid 1GB):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid 1GB):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.42472.868056562500].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Fixed broadband 2014):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid 1GB):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid 1GB):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband postpaid):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42472.868056562500].[sum:as \% GNI p.c. (Mobile broadband prepaid):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.42472.868056562500].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.42472.868056562500].[:Measure Names]</column>
            <column>[excel-direct.42472.868056562500].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.42472.868056562500].[:Measure Names]' value='135' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[none:Country:nk]</rows>
        <cols>[excel-direct.42472.868056562500].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Costs and Data Caps by Service'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs Grouped)' name='excel-direct.42492.894420509300' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42492.894420509300'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Data caps]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Pre or Post Paid]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Service]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c.]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pre or Post Paid]' derivation='None' name='[none:Pre or Post Paid:nk]' pivot='key' type='nominal' />
            <column-instance column='[Service]' derivation='None' name='[none:Service:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data caps]' derivation='Sum' name='[sum:Data caps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c.]' derivation='Sum' name='[sum:as % GNI p.c.:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42492.894420509300].[none:Service:nk]' />
              <shape column='[excel-direct.42492.894420509300].[none:Pre or Post Paid:nk]' />
              <tooltip column='[excel-direct.42492.894420509300].[attr:Country:nk]' />
            </encodings>
            <reference-line axis-column='[excel-direct.42492.894420509300].[sum:Data caps:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Above: Unlimited' label-type='custom' scope='per-table' value='4500' value-column='[excel-direct.42492.894420509300].[sum:Data caps:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42492.894420509300].[sum:Data caps:qk]</rows>
        <cols>[excel-direct.42492.894420509300].[sum:as % GNI p.c.:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Economic Classifications by GNI per capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column caption='Economy Classification' datatype='string' name='[Calculation_7610502200112783]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt;= 1045) &#10;THEN &quot;Low income&quot; &#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt; 4125) &#10;THEN &quot;Lower-middle income&quot; &#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &lt;= 12746)&#10;THEN &quot;Upper-middle income&quot;&#10;ELSEIF ([GNI p.c., USD (Mobile cellular sub-basket, 2014)] &gt; 12746)&#10;THEN &quot;High income&quot;&#10;ELSE &quot;No data&quot;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[GNI p.c., USD (Mobile cellular sub-basket, 2014)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7610502200112783]' derivation='None' name='[none:Calculation_7610502200112783:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GNI p.c., USD (Mobile cellular sub-basket, 2014)]' derivation='Sum' name='[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[excel-direct.42472.868056562500].[none:Calculation_7610502200112783:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Lower-middle income&quot;</bucket>
              <bucket>&quot;Upper-middle income&quot;</bucket>
              <bucket>&quot;High income&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.42472.868056562500].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.42472.868056562500].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' scope='cols' value='GNI p.c., USD' />
            <format attr='subtitle' class='0' field='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42472.868056562500].[none:Calculation_7610502200112783:nk]' />
              <text column='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' />
            </encodings>
            <reference-line axis-column='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Avg: $&lt;Value&gt;' label-type='custom' scope='per-table' value-column='[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]' z-order='1' />
            <customized-label>
              <formatted-text>
                <run>$</run>
                <run>&lt;</run>
                <run>[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[none:Country:nk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:GNI p.c., USD (Mobile cellular sub-basket, 2014):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Internet users by cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
            <datasource caption='TableauData (Internet Users)' name='excel-direct.42490.980789548600' />
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='real' name='[as % GNI p.c. (Fixed broadband 2014)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[as % GNI p.c. (Fixed broadband 2014)]' derivation='Sum' name='[sum:as % GNI p.c. (Fixed broadband 2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42490.980789548600'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Internet users (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Year]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Internet users (per 100 people)]' derivation='Sum' name='[sum:Internet users (per 100 people):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42490.980789548600].[none:Year:nk]'>
            <groupfilter function='member' level='[none:Year:nk]' member='&quot;01/01/2014&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42490.980789548600].[none:Year:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42490.980789548600].[none:Country Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='log'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42490.980789548600].[sum:Internet users (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Fixed broadband 2014):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.869711678200].[Country Name]</column>
          <column>[excel-direct.42490.980789548600].[Country Name]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance postpaid (500mb)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (MB) (Mobile broadband postpaid)]' derivation='Sum' name='[sum:Monthly data allowance (MB) (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='9'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='log'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (MB) (Mobile broadband postpaid):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance postpaid 1GB'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (GB) (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:Monthly data allowance (GB) (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (GB) (Mobile broadband postpaid 1GB):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid 1GB):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance prepaid (500mb)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (MB) (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (MB) (Mobile broadband prepaid)]' derivation='Sum' name='[sum:Monthly data allowance (MB) (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='13'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (MB) (Mobile broadband prepaid):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly data allowance prepaid 1GB'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='integer' name='[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly data allowance (GB) (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:Monthly data allowance (GB) (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid 1GB)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.42472.868056562500].[none:Country:nk]' />
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.868056562500].[sum:Monthly data allowance (GB) (Mobile broadband prepaid 1GB):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid 1GB):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Postpaid handset-based (500MB)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband postpaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[as % GNI p.c. (Mobile broadband postpaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband postpaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.869711678200].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42472.869711678200].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='9'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='exp'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.869711678200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband postpaid):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.868056562500].[Country]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Prepaid handset-based (500MB)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (Mobile Cellular Subscriptions)' name='excel-direct.42472.869711678200' />
            <datasource caption='Sheet1 (Telecom Costs (Single Sheet))' name='excel-direct.42472.868056562500' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42472.868056562500'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[as % GNI p.c. (Mobile broadband prepaid)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[as % GNI p.c. (Mobile broadband prepaid)]' derivation='Sum' name='[sum:as % GNI p.c. (Mobile broadband prepaid):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42472.869711678200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42472.869711678200].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42472.869711678200].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.42472.869711678200].[none:Country Name:nk]' />
              <text column='[excel-direct.42472.868056562500].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42472.869711678200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42472.868056562500].[sum:as % GNI p.c. (Mobile broadband prepaid):qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42472.868056562500].[Country]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Mobile Cellular Subscribers vs Cost'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='15' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6482' id='14' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='93518' id='7' param='horz' type='layout-flow' w='100000' x='0' y='6482'>
              <zone h='93518' id='5' type='layout-basic' w='83505' x='0' y='6482'>
                <zone h='93518' id='3' param='horz' type='layout-flow' w='41752' x='41753' y='6482'>
                  <zone h='93518' id='4' name='Prepaid handset-based (500MB)' show-title='true' w='41752' x='41753' y='6482'>
                    <layout-cache minwidth='145' type-h='fixed' type-w='scalable' />
                  </zone>
                </zone>
                <zone h='93518' id='13' name='Postpaid handset-based (500MB)' show-title='true' w='41753' x='0' y='6482'>
                </zone>
              </zone>
              <zone fixed-size='160' h='93518' id='6' is-fixed='true' param='vert' type='layout-flow' w='16495' x='83505' y='6482'>
                <zone h='39384' id='8' name='Prepaid handset-based (500MB)' pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' w='16495' x='83505' y='6482'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Monthly Data Allowance vs Cost'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6482' id='12' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='92870' id='10' param='horz' type='layout-flow' w='100000' x='0' y='6482'>
              <zone h='92870' id='1' param='vert' type='layout-flow' w='83505' x='0' y='6482'>
                <zone h='46435' id='3' param='horz' type='layout-flow' w='83505' x='0' y='6482'>
                  <zone h='46435' id='4' name='Monthly data allowance postpaid (500mb)' show-title='true' w='42474' x='0' y='6482'>
                    <layout-cache minheight='165' minwidth='151' type-h='scalable' type-w='scalable' />
                  </zone>
                  <zone h='46435' id='5' name='Monthly data allowance prepaid (500mb)' show-title='true' w='41031' x='42474' y='6482'>
                    <layout-cache minheight='165' minwidth='141' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
                <zone h='46435' id='6' param='horz' type='layout-flow' w='83505' x='0' y='52917'>
                  <zone h='46435' id='7' name='Monthly data allowance postpaid 1GB' show-title='true' w='41649' x='0' y='52917'>
                    <layout-cache minheight='165' minwidth='133' type-h='scalable' type-w='scalable' />
                  </zone>
                  <zone h='46435' id='8' name='Monthly data allowance prepaid 1GB' show-title='true' w='41856' x='41649' y='52917'>
                    <layout-cache minheight='165' minwidth='139' type-h='scalable' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='92870' id='9' is-fixed='true' param='vert' type='layout-flow' w='16495' x='83505' y='6482'>
                <zone h='39384' id='11' name='Monthly data allowance prepaid 1GB' pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' w='16495' x='83505' y='6482'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Prepaid handset-based (500MB)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
          <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
          <field>[excel-direct.42472.869711678200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Postpaid handset-based (500MB)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
          <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
          <field>[excel-direct.42472.869711678200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Internet users by cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[sum:USD (Fixed broadband 2014):qk]</field>
          <field>[excel-direct.42490.980789548600].[none:Year:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance postpaid 1GB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance prepaid 1GB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance postpaid (500mb)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly data allowance prepaid (500mb)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Mobile Cellular Subscribers vs Cost'>
      <zones>
        <zone h='6482' id='14' name='' type='title' w='100000' x='0' y='0' />
        <zone name='Prepaid handset-based (500MB)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel-direct.42472.869711678200].[none:Country Name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Postpaid handset-based (500MB)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Prepaid handset-based (500MB)' pane-specification-id='6' param='[excel-direct.42472.869711678200].[none:Country Name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Monthly Data Allowance vs Cost'>
      <active id='12' />
      <zones>
        <zone h='6482' id='12' name='' type='title' w='100000' x='0' y='0' />
        <zone name='Monthly data allowance postpaid (500mb)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance prepaid (500mb)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance postpaid 1GB'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly data allowance prepaid 1GB'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Monthly data allowance prepaid 1GB' pane-specification-id='5' param='[excel-direct.42472.868056562500].[none:Country:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Costs Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[io:Max Costs:nk]</field>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Economic Classifications by GNI per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42472.868056562500].[none:Calculation_7610502200112783:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42472.868056562500].[none:Calculation_7610502200112783:nk]</field>
          <field>[excel-direct.42472.868056562500].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Costs and Data Caps by Service'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42492.894420509300].[none:Service:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42492.894420509300].[none:Pre or Post Paid:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42492.894420509300].[none:Data caps:qk]</field>
          <field>[excel-direct.42492.894420509300].[none:Pre or Post Paid:nk]</field>
          <field>[excel-direct.42492.894420509300].[none:Service:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Prepaid handset-based (500MB)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Postpaid handset-based (500MB)' width='192'>
      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
      hux0Wsb9vf4/jh++XfHkEVAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Internet users by cost' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance postpaid 1GB' width='192'>
      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
      mvQgJEmS/j/U69+U+Kf6DQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance prepaid 1GB' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance postpaid (500mb)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO2dd5Qbd37Yp6ANeu9YLIDF9k5SEqmjxBMlS0dF13S+2Je43XP8XuzEdhy/
      vJydvJzLucR27vzOybv4fHas+OJy9pmqFEWKR1LsW7EF2IayaIu26MBgBpiZ/DG6vV1wuYu+
      WBKfP/aJEL7z+2HmO99f+ZYfSFEU0KFDrUBH3YEOxxtGPcI4jncM2BNOXQqUzWYRBHn4c4/H
      g2FYX1/fAbKlUonB+FHra2trvb29FbZbJlsVBEHAMFybLEVRFEVBUC1m+6jaBeq7XYfK1qVA
      MAzvq0ASiWRpaWlsbAwEwUfJ4jjOYrF2/slkMkEQ5HA4lbRbJlsVxWKRwWAc0LEDIAiCoqja
      HsZRtQvUd7sOlW3KHEgmk6VSKYIgKhcxGAw+n68ZnenQVJqiQEwmEwAAHMcrFxEIBLlcrjOj
      OnY0axWmUCi2t7erEuFwOCiKNqk/HZpEsxRILpcHg8GqRDQaTSgUalJ/OjSJZimQTCZLJBJV
      DUkikagzih07mqhAKIoWi8WqpBAESafTTepSh2bQLAViMBhsNjudThMkdXEu8FtvLy8HU4dK
      abVaeuAjKeqdheBX31qe9yaa1MMODaGufaCDUavVwWBwJUH92j/MkxRwbSXy7i+f5bMPapHL
      5eI4ThCELZD+lb+bJ0jqg+XQO798VsqrcRujQ7Npoi9MqVSGw+HtHE5SAAAAiRxeJMhDpWQy
      WTwej2dxgqQAAEgVilipiv2kDi2miQokkUgymcxzPdLXxjQ6MfLrL/eJEOahUiqVKhQKfcIq
      //ykTidGfuW8VSWoaHu6w5Fw0ICS3g4tu0MTQxbb8sbE6ODS4qK5fyiwbleY+pUi3qGX5vF4
      DAaDxPLf/MnJyjtEb0LCAPk/vjheuVSHo+IgC7S1FUHywW9/7z0xG/+nty9TEOvK9y9Gcsz7
      1+5UuNSmp0H0f5fSgd///T/44z/9X2ls/yHpwdw9ggL++ht/8Oab//TutTuHXnz17vWVKFZZ
      Rzo0i4MsEI8LLfk5vWpAwGFjWBFBEIDEWSwOAyYLKIrjeLFYPNhfoVQqHQ4H7ZbHs9G1VVcJ
      y/0pGslv+U++9jPuhTvuDa9AZSiG12OU4tQJ3eDgpGc98O9/9zd/67//ztSVtwqQEEo6QbH5
      wiuTV977aCOS+sS4acYR+LHnJq9/eE0p1gl6XX8yfXPk7JnFB7ZiEejvG/q1X/n5g38w7Zis
      4U4BP/SKk+ThM7n2aZduuiq3UlWyBygQtR1LSDhwd/eA3e1/7ZVziwsLT7/0it/l6BkbQxAE
      QZBUKnWwq1atVs/MzMAwDMMwxWTI1UZRKRKKJL70+dc+nLbhhfTY5It4cmM5V2RzKbSIMpms
      Ipabvn8Pz5LuVIbDyFu6R3q1/IUFO8zmihhhXxxillI356YgBhSNJ7c9bgaFB7a2z7z0Ui5J
      QIlNJot1sL+7441vrCxYz85vKpUSiUQHf+fy5csTExNKpZIsoovLDpDFUyvEIpFwZnrOYOzi
      sPkgUMrGw3mQLxOzFXL15ro9kcW7LaZLb7018cyzEh5XyIXs6169Vu31Bk1mg3tzS6UQRONp
      qUjCZDPCoYhCpRII+CQJUCVcoVJ1FKiM461ACwsLhULhqaeeqrZni4uLAwMD+961TjxQVRy/
      eKDdGI3GcDhcm6DH42l0dzo0mKYrEI/HwzAsn89XKygUCrPZbFVRaR1aT9MViMFg6PV6r9db
      g6xKparNenVoGa1I6zEajZubmzVMtlQqVSQS6QR4tDOtUCCFQpFMJkulUrWCEASJRKJ4PN6M
      XnVoCK1QIBiG5XL51tZWDbJ6vT4QCDS8Sx0aRSsUCARBk8nkcrlqGIyYTCaXy00mk83oWIf6
      aVFqs06ni0ajtW2o6/X6TsZP29IiBWKz2RKJpLYlFYfDYbFYnVDX9qR1xRUsFkttoxgAAN3d
      3Z1NxfbkQAWiqEgoiudT96ZmMawwOzOdzKHL8zORVK6Glrq6ura3t2vYUQQAgM1mMxiMTCZT
      g2yHpnKQAkU8K+9cu7n44J571X71Bx/VEA+0GxiGNRqN3++vraNWq3VjY6OzJ9RuHOSfU3Rb
      ta6tNJrpMartnoSpu7vaeKAyDAbD/Py8yWQCagpSQRAkFouJRKI6A1w68UANlD1IgUAA6jWb
      RWxqzrH5Yy+fW7UvVRsPVIZWq52dnc1kMjKZrAYXsdVqXVxclMlkAAB0vPGVc7zDOcpYWFjA
      cfzkyZO1/SqPx8PlcsVicUeBKud4h3OUYTKZPB5PDW4Nmq6uLp/PV7Mx79BwWq1AAoFAKpVu
      bm7WJg5BUFdXV83iHRrOERTZHBwcdDgcNYvL5fJsNlsoFBrYpQ41cwQKpFQqSZKs2ccOgmBP
      T8/6+npje9WhNvYoEEEQXq93eno6GAw2b54BQVBfX9/y8nLN83cEQbhcbiwWa2zHOtTAHgVK
      pVL0+41hWFPHCIvFEgqFatuVpjGZTLUFqXVoLHsUiCTJe/furaysJBIJLpfbvFYZDEZfX9/q
      6mrNV4AgyGq11jOX6tAQ9iiQXC4fGRkhCEKlUjW7YavV6nQ667FzAoEAhuFEolNA6CjZo0Cx
      WIwkyVwuV/M+TeUgCKLT6eoxQvRoW8+uUof6KbdAyWQylUqlUodXE6uf4eHhjY2NeowQDMMm
      k6kGJ2syj4fTBZLsTKHqpXwZLxKJ1Gp1zbvmVSEUClUqldPprOciYrGYwWBEIpHKRZYCqde+
      eev8n9z4zm13PU13AB5WIIqimEwmj3d4+Z+GMDw8vLKygmF1VWkxm83hcLhyS/bmfNCXQLNY
      6a9udRSoXsotDR05arPZ5HJ5Ib516dby5KBicW3LZDK61p0SuSoeDYsUxk+99EwtXsGHEIvF
      arXa4XCMj9deTmpnY2l8fLySE0kmusQwBBIkdbJbWnOjHWj2eOOz2ey1a9cUCoVAIBgaGiJK
      hQ9u3GFmIigFoyRy6sT47PWrXePn08H1My+cKeJ4sVgUCoW1Nbxzek0ul7t8+fKFCxcqPGkF
      eMTJN/F4PBwODwwMHCoLQtC0JxHLYuf6lFxWFSfoHNPTeupp+lDZPQpEUdTy8nI6nTYYDAaD
      AaBKt+/NKPng8kZQbewKeDxKtT4aDojlXZ88ewKsKZxjh504AYqipqenIQianJysMNph3xgD
      iqK8Xi8Mw3q9fufDTDrO4onZMAQAAEkUU5kCn8fZN6wiGYuJ5PKDm++EczzMnj6BIJjJZHK5
      XDweNxgMAMh49vTTAABYhkgIgsjxcQiCSJKs+VXYFxAER0ZG3nzzzf7+/nrmXiAIGo1Gu92e
      TCbFYjH94Q/e/Rum5ZmoY+XpZ0/f+uDtGKSzijG1dSTiXmNKu5RwdgtjG8XgRgSDshGlWu6P
      E1/8/KcaMjo/IZQrtVQqLRQKZRuJtMbs/ttYOBzO8PDw1NTU888/X9s7ukN/f//CwoLVat3R
      xcXbPxjq7vmjr/3xq1/4icCt72+C55ff+mZaMKl1LP/DhgPC2EPPDKy5UmYhPLsIrS86P/35
      T+1zBFqHR1CuQIlEQq/XRyIRtVrdyn4MDAysra1FIpE6N8EhCBocHFxeXh4eHmYymWqducQn
      +3ssF0hqdf5Wz1M/5nXY9KZnhVqzjDJJtcpQjNSr2GRRbFQj4VQCAKB8EaigGnGHjykPafV6
      vTab7ezZszujwAE0ZA60QzAYnJ6evnDhwqGD/aEDM4qidrt9dHSULhpMQ1EUCIJFHGcwmbSd
      2/3bQZC+FQdZwM4c6GHKx6NAIDA0NGSz2ao9J6V+NBqNSCRaW1ur/1IIgvT29tpstt31qT5+
      eLseIbiLH/6z/safLMoVyGQyEQSh0WhaH3cMguDk5KTdbm9IAqFAIOjt7bXb7Z0aZ01ljwIV
      CgUYhiUSicFgYLPZre+NQCAYGBh48OBBQwJ9hEKh0WhcXFzseFubxx4FwjDs3r17kUjEbrcf
      VYf6+/txHG9UJrxQKDSbzXNzcx0dahJ7FEgkEg0NDW1tbe3ei2sxMAw/88wzs7OzjQqJFAqF
      Q0NDS0tL9QRAdngU5XOgUCgkEomOdjIpFov7+vpu377dqIhVLpc7MDCwurraKVTVcMoViMVi
      5fP5ozX4IAgODAxgGOZyuRp1TTabPTIy4vf7O2VfG8s+4RxbW1tH/qbCMHzmzJnp6ekGlnRh
      MBhDQ0OZTGZ9fb2T29ooyhUIhmGlUllngE5DEIvFExMTt2/fbuA6nI6ClUgkNputHX7jY0C5
      AtGnxNH+hGIhO3V/DgCAqQe349vRS+9dcjg3P/zg/TmHpzWd6+3t5XK5CwsLjb2sXC6ns2M7
      x9TXz57d8WQyubq62tXVFQ6HtVptJh5zhbe0K9Bd2wpIgJbe/oWb1/Wjz0U3NnCLliAIgiBq
      ni2RJFmJ7OTk5JUrVyQSye6FYYWyj2qXjnEZGhry+Xzz8/P9/f0VegnouJzamiYIoualCT3g
      NvtW1ya758bl83kIgiKRSE9PDwAAUo1ezHMl0nkOiaaxUibghwX8+LafAD/2yYMgWLNzvkJZ
      Lpf7iU984saNG2KxeCd4rZ526QdJP0uj0ZjL5ex2u0ajUSqVhz5g+kHW1vRun0kN1BNQ1tTH
      tMeZShDEgwcPuru7o9Ho6OgoQFHpTFYoFGSzaQ4H8fv9CrU2EQkKZRohjwM02pl6AKurq+vr
      65/61Kfo6LjGHvdEUdTm5mYikejr6zs4nbLjTH2YPcoFw7Barb5+/bpUKgUAAABBoVAAAACf
      L2QwmN3dJh6Hre8y0drTSnp7e+Vy+Z07d5qRywyCYHd39+DgoNPpXFlZqacW3RPIPt54pVLZ
      bsdTgCB46tSpdDq9tLTUpCbojSKdTme3291ud2edXyHlCqTT6TAM+9gCtRMwDJ8/f359fd3t
      bmIujkAgGB4eFgqFNpvN4/F0PPmHUq5AkUhkdHS0PRPOORzOJz/5yZmZmarSCKsFBEG5XD42
      Nsbj8ex2u8vlQlG0ec0dd8oVCEEQt9vdguIKtSGRSM6cOXPnzp1sNtvUhiAIUigUw8PDcrl8
      fX19ZWWlU+Z8X8oVKB6PUxTVzqZbq9WOjo5evXq1BYYBBEGhUDg6Omo2m0OhkM1m8/l8nciQ
      3ZSvDNVqNV2j40h6UyFmsxkAgCtXrlQSQN0QWCyW1WolCCIajdJFiTQajUwm68TA7rFA8Xjc
      4XBwOJymTjIaQl9fn8FguHLlSotjt+Vy+fDw8MDAQD6fn5+fX15ejkQibf6+NZU9G4nFYpF2
      MbLZ7N35DI+iZRuJ+8pSFDUzMxOPx8+dO1f5pRq4oUdRFI7jsVgsGo0iCCKXy0Ui0aMs4uO6
      kVie1hOJRILBYHd3d+vTemqQJUlyamoqnU4///zzFV6tGQ+SoigURePxOL16FYvFUqkUQZDd
      ToAnRYHu3buHYRifzz9x4sShVz9yBQIAgCCI+/fv53K5c+fOVWI1m/0gCYJIJpOJRCKbzcIw
      LBaL5XI5i8UiSfKxVKA9fcpkMkwm0+PxnDt3rrb2Wg8dQz01NXXt2rUXX3yx5jIUDeyPTCaj
      T4Shlcnn86EoShAEl8tVKpVisbgZ6eFHRbkC4TguFAo/DraiqHg8yUdgh9Pf12fxbDh1JkvE
      65ToTFJ+G+WPQxB06tSpmZmZy5cvv/jiizW/bQ1ntzIVi0WSJEOhEL0RQB+hJ5PJxGJxJYaz
      bdkzhJVKJY/H4/F4RkdHlUplxO14567juXFLPh13BPMGjXLL4xGqjVg68+pnztPlXWj3dQ23
      oOF2lSRJm83m9/vPnz9/gFO9HU7roXfaCoVCJpNJpVIYhlEUxeVyWSyWSCTicrllSXnHZgjD
      cdzpdPb09NAuVfrAOaVK/v66t1cnQyTSwKqdJ5AS2SSKonSBqVwu5/F4BgcHq+1ZM05BGxoa
      gmH40qVL586dEwgEj5JtkwPnWCzWjn0iSRLHcRRFE4mEz+crFosURXE4HA6HQ+sTi8WqOdWz
      dQfOkSSpUCjm5uaee+45AABAADR1GQKbHiGXK1TrXeurE+fOB9wOQ/8AF0EABEmlUkKhEIZh
      iqKq/XlNei1GR0cRBLl+/fq5c+foZ1NGO1igfeFwOLvLvdF7BIVCIZvNxuNxOkuOIAgGg8Hl
      cjkcjkAgYLFYMAzDMHzwz2n1KoyOjJmYmDj06vQqDMfx1dXV4eHhqp5KU39VIBC4c+fO6dOn
      dTpdWa/aVoEqbJcgiHw+n8/nc7lcsVik91Fp1xOLxUIQhM/n83g8+n2mmysWiy0awlAU5XK5
      165dO3PmTOVt0P2OxWIKhaK2XjYcnU734osvXr16dXh4uL+//3FyOMAwLBAI9h2gcRzP5XL5
      fD6RSNDzKjr6m1Yg2nTRMy0EQRo1c9+jQNvb28vLy0KhsNpZgsViWVxcpNW/Id2qH4lE8uqr
      r167di2VSp04ceJYr3QqhMVisVgsiUSy8wk9acNxnMFg0NP2QqEQi8UwDKNNF0mSMAxDEERb
      RxiGad1is9kwDFdit/YMYYVCYXNzk54UGwyGQ4V3byTiOO5wOHp6eiqsc9jUIWyHUql09+5d
      FEWfffZZumPHfQirgYNvF52mQpIkSZL0Mdy0eu383Xn3GAwGvAtaX/f0KRAI2O12mUwGQVC1
      tWFZLFZ/f//S0pLVaq259m/DYTAYzz777PLy8uXLl8+ePds+g2z7AEHQzsYmgpRv75Vt+pdK
      JfpvqVQqFosoiu5RIJlMZjAY8vl8MBikvTlVdYXNZo+NjTkcDrlcrlar22TmAUHQyMiITCa7
      efPm6Oio0Wg86h4dV2jDU/Zh44/9pijK7Xan0+nh4eEDrG5rhrDdZDKZmzdv0olmtU2JHssh
      rE7ZPU4ZHMeDweD9+/cjkUjNcXcgCJrNZqvVuri4GA6H26cqj0AgeOWVVzgczocffuj3+9s5
      6vIYsUepC4VCJBJBUbSeXEYaHo83MTFRKBQ2NjZYLJbZbG5N6ODBwDB88uTJYrE4NTXlcDhO
      nz7dPsvGY8oeLVlZWSkWi0aj0el0NsRjzOFwhoaGVCrV4uLi5uZmm0QTIwhy9uxZvV7//vvv
      u1yuThphPZQfOBePx51O575OgNoAQVAkEk1MTLDZbDoovR3GDgiCBgYGzp8/b7fbb9261TmF
      /lCSefw3/3nxF96YXvTvqR1VbmZcLhdJko/yRNaDWq2enJxkMpk2m21zc7Ph168BiURy4cIF
      Pp9/8eLFYDB41N1pa964u/nd+94P7OHf+Oc9ycF7FMhkMn3uc59LJBK5XA4AAICi4tuJEpZb
      tK8Ui/iK3Z5BMeeqPZ6tMZ8GBEG1Wj0xMcHhcGZmZtohgxiCoImJiZdeeunBgwc3b97sVJ2q
      FvirX/3qzj9WV1evX7+u0Wg0Go1AIIh4Vt66PpVPBphg8e7cCgNm2u7dz1Ncz4rT2m8GAQDD
      sMoP+doBBEE+n69UKkul0traWrFYFAgEVU256jkAiz5tqGw5zeVyLRZLOp2+d+8egiBisXjf
      9TY9W6ptdrhvuxVST7tAg84L61MLsoWSWsT5jQv9KuGPHvqefaB4PB4MBhkMBoqivb29XC77
      8rWbDAofNmsv3V0/fWp88c4t3fCz6S3Xcy+ebciBcxRFxWKxra0tsVis1WorXKk17wS1eDz+
      4MEDDodz6tSph30ynQPnHqZ8IxFF0XQ6LZFIWCwWQBGrG24Fn/FgyTU+Nri4sGjqGQi4HXJ9
      /5DVADQuqJ6iqO3t7VAoJBAItFrtobt8ja0PVEapVHI4HKurq4ODg319fbtv3xOykVjKBBwB
      cqTfUCZ77/oluyvUPzqxMXcf4MnPnxm7fPVGuQLF4/FAIGAymSrZIGl4VkYymfT7/RwOx2Qy
      HaD4TVUgmmw2Syd7nDlzZicD9QlRINR3+7s3ij/zueH//a2/xPlqXiGSAcW/+u++/Ed/+JWJ
      p1946723BSzrv3xe+r0P1nIsUblVXF1dzeVyKysrtfW1TsRi8fDwsEqlstvtGxsbR7jg5/P5
      L7zwwokTJ65fv/7ETa5BAEXReCQcjkZv3vgoluMwo95skSBLmDeY/qWf+wUAoAiSABgMhM0q
      t0AOh2Ntbe2ZZ56ppEBH8/LCKIrKZrNut5vP53d1dZW9fC2wQDsQBLG8vLy6ujowMGC1WmEY
      fuwtUCkb+Zt/vCQRSdF8EkBkOl4pyZD/ixdOLyzO9fSPs6j89//ue6BIde7U0DbGKVegu3fv
      WiwWv98/OTl5aEvNTiykKCqVSnm9XolEotVqdwa1VioQTSaTmZubSyQStD+/hvnsMVKgqmTL
      Fcjv9y8tLU1OTiqVykOv3prMVIqiwuFwMBhUqVQajQaCoNYr0E437t+/z2QyT506JZfLq7rI
      k6JAt27dUiqVdALloVdvZWozSZLBYDAajRqNRj6f33oFAgCALo29tbU1Ozsrk8nGx8cFAkGF
      l3pcFajcFMtkskgk8vFOdDsBQZBerx8bG0skEjab7aiiRCAIMhqNn/nMZ1Qq1bvvvnv79u02
      vFetZJ8aiS6Xq23rA0EQZLFYBgcH3W43vYt9VN3o6+t7/fXXeTze22+/PTc3d+Q+maOiXIHo
      s7oOrrd95DCZzMHBQbVavbS0FAwGj+rhsVis8fHxz3zmMxiGvf322y6Xqx0CDVpMuQIJhcJw
      OFxtNHTroasXjo+PkyS5uLh4VBUwQRBEEOTpp58+c+aMy+V677333G53m4Q9tYbyeVk6nc7n
      80deJKVCQBDU6/VqtXptbQ2CIHqf5ki6oVAozp8/H41GFxYWbDbb4OBgmwRhNps93ngAADKZ
      DAiCRqOxklz32rzxNA308NEleZlMpsPhgGH44MS05nnFQRDk8Xgmk0kul6+urs7NzUEQJJVK
      6e8fd2/8o9gnNx5BEPpwv0OvfiQVytzRbCyDThhlDHifG7q2toaiaH9//6NegJYtp+nVYjQa
      7e/v7+3t3cn+rKHdVB5fDqb6NUIpr5YCHS3dB1pZWYlGoyaTaed8rtW529Mrvr6BftfaukKt
      j4UCImX3S+dOgkehQDfXov/2uzOFIvnTp43/7bX9VTyXy7lcLrlcrtFoHv6/rdyPoSgqn8/T
      5e61Wu3Y2FgN0S9ZrPRT37lv8yV1YuTiLz0r41etQ62rDxQIBLxeL/DDg7Fo0ol0KZv1OH0n
      Tz0ze/2qcfx8Ori+Ux+oeYVn9uX6SjiHEQAAXF4OfeVl677fYTKZvb29wWBwbm7OarWW/f4W
      1wdiMpljY2NWq3V1dfXy5ctSqbS3t1ehUFQ+Hnki2UV/iqQAXwKd98bP9lQdrt66+kAIgkgk
      klwut/sFZSFsiVzCl8tmZh5ITT2bzimhVI8gCBdBUqlUi5MDzw+q/3E2kMeJV0c0B4ubTKZC
      obC2tqZSqXYfJnckO8IsFmtycnJyctLj8czOzrLZ7J6eHqPRWEl+o0kpnOgSz24mDDLupFFW
      w01r6RB28+bNUChktVp31wciCRKCIZIkIAim/9KfH8kcaHM7F8+gIwbpvnOgh/F6vZlMpre3
      l35aR15cgaKoSCSyuLiYSCSsVqvVauVyuQf3J43iq1vpHpVQwqvljjVVgcpXYaVSic/nC4XC
      3Sc+gRAIAAAIQjt/aZq9CpuZui9TapyrixyRggVDoYCb4giVAraMy2AyP36KPtcGExEyGY9U
      JpFIxOfz6QgnPp9/VKuhnXbpkHCz2WwymcLh8N27dxOJBIvFOiAThgEBahGHx6mxQk1LV2E0
      FEVVcoubbYF+/rUzX/iNP/vz3/5PP/7lX4yEtgQCghQasGBIr9MOj/Te+sFHiSLQpZSy2ZBr
      M/KFf/WzGskjtZkkSZfLVSwWzWYzi8Vqk/IudA2ozc3NlZUVkiTNZrPFYnn4nWxnZ2q5Bbp/
      //6NGzcAAKgkoKzZFmhz3f6DK1eFsi60kFmfu4sJ1NFY2D0zrdKrv/3nb2j0qoX5+XiOSMf8
      S7a57tHnu5SPDMMFQZAO9Lbb7Twer7ZuNzwrg04hl0qlVqtVLpd7vd65ublYLIYgCIfD2Wmo
      nfeBypWaxWIZDIY28emcfP5Vy4mkQKDaCvk0UpHK1I8VEzGByDowML8R/OSpEQJk91h68WRA
      IFEqhIfcIzpHdmRkZGNjIxaLmc3m1hT8zmGlPE4IWQfZPBAEZTLZ2bNnURT1+Xz37t1jMBjd
      3d0mk6nmV7Q17BnCMpnMhx9+KJfLFQpFX1/focJHddTB5toixlH2dtVyKh49lITD4Ugk0tfX
      V1Vx2RqGEl88/2/emPbG8z972vDrLw/a7775/64us2GWedjw+sufnVu477Q7uwaHnh4ZgRhM
      iigCEHz/1p2nzzwTSyQ9znWny2PQ6wxGo7Grq8UL3gply+dANpvN6/UODg5aLJZDr94OZ2VU
      y85cpFAoLC0t0a60CmVrUKBvf+T62rsOAAC4LHjuv740/d63/u8tPydfQBlZDinS9aky4SRb
      wAu5AhyFHvM7eBoTEyJSuRQJCpXstM3hZQiQRBr40hc/O9zXY7FYdpdArJCWBpShKCoUCpPJ
      5L7ffpzgcDgnTpwoFAoOh6N5ASFDWiGLAQEAMKzhwxAIAvCFL/7rP/7G18wDw88O6rIYCgJU
      sYQzGEyKACAAZIAghhV1AyNPD3QXIbjbaJg8MSGEyf7xMywW6+bNm9///vdXVlbaJ4qtPDN1
      eXmZJEmj0djd3X2o8LG2QPQ/6bh9j8djsVgOLSlRgwUiKWrOm3BFc89bpQoht4QXSIjJZsA5
      FIVBoESSAAVg6eg/X7r9+o9/7m+/8+df/NkvI0wYgCAYBAGqtJ1GxTx2Mp1XKBUsJoMkyUQi
      sbq6GgqFeDye2WzW6XSHBm+1bggrlUr37983GAyJRGJsbOzQqz8GCkSDYZjD4ZBKpQaD4YAV
      fpMSCymKIikKfnRh04fbxXE8Go06nc5oNCqXyy0Wi1KpfNQ9aekcKJlMbm1tVc3eVioAABDm
      SURBVDj5f2wUCAAAiqL8fn8ikaAP3NhXtg0zU3Ec93q9Tqczm82q1Wqz2axQKMoOP2ipAvl8
      PqVSWeHa5HFSIJpsNruystLX17fvcNaGCrRDPp/3+/0ulyudTut0OrPZvFMot6UKlEqlLl68
      qNfrn3nmmUNLhj9+CgQAAEmSDoeDx+MZjcayr9WjQPkCtrSV1YoRvaTqePOq2sUwbHNz0+Vy
      pVIpnU5nMplqqNi8Q3UKlE6np6enxWKxRqMRi8V0q+vLD+YcAUuPydkG8UD1y1ZiCejhLJlM
      9vb27jbGNSsQSVG/+nfz7ywEhQjzjS8/Nao/POduNzW0Sx/j6vf7Nzc3E4mEQqEwGo0ajaZa
      TaouHojJZCqVynA4rFQqd1ryrDnZEMPt9rdDPFBDZCuJB1KpVHw+f35+3mQy7eRY1nxeWJGg
      PnSESQpI5ou31iL9yuqMUG3t0nvZ3d3d2Wx2e3vb6XROT08LBILu7m6NRlNh4k118UD0Fq3V
      at2dlqo3dq16Qgq1oh3igeqXrXwuwmKxTp486XK5crkcnQ9fswViUNQrw+qL80Exl/lcn6ra
      ztfpTOXz+bS7DcOwSCTidrsdDgebze7q6urq6uLz+fVU0infB5qdnZVIJFwud2BgYOdz2hHY
      JvFAdcpWO5mlw3eCwSC9OqtnDrQayauEHK246ulIw73xJEnGYjGv1+v1emEYVqlURqNRqVQ+
      7O6tToGy2eytW7cIghgbG9uJiT6AJ0GBaFAUdTgcWq1WLpcf+iApiiqVSgwmc3cb7ZkbT0dt
      00c0pdNpuVxuNBoNBsPOJk4txRXkcrlKparE5/LkKBAAAARBrK2tgSBIp1g86msUgX3j934b
      RHjSnqeG1IjCYE5HA0UKwinWrYtvnPvxn7PqpEtr/tEh84ff++vVtPzk6VFOKTs8cULIfeTW
      SQvigWilD4fDbrc7Go3SJQA0Go1IJDp43l2uQPPz88FgcHx8XKvVHtqzJ0qBAAAgCCIej/v9
      /oGBgUdttGKp8Ne/+cZ//i//cfrq+3//ziVKLOIWySCKqlgCsLStlGk2A+Fzzw//xRvv/NQX
      Xp7dwPBSHks4T3/xF7/0wlMHtNuygDI6xi2VSvl8vmAwmM1mFQqFVqvVarV8Pv/h+1beJ4Ig
      dDpdNputra/tBklS2zmcy4J57LqSRFNokSApIQeWSCRCoXBlZUWlUqlUqodvKEsg4THRr//J
      H6bTeAqjOEVqzDqoYZTYKdTjjkZQssesXbD7nzo5trS+KRT2uD1BCGCiaI2LyoYDgiB9oL1M
      JhsbG0ulUtls1uVy0UmbdIkmhUKx8/7ssUAURS0tLSUSia6ursfAmUpR1Nevrv3FR+4uKffb
      P33SIOUCNVmgmc34L313rlAkfvNC/+cmtAwGg6Iol8uFYVhvb+/DhuHjw0oZDHKXb6tYLDJg
      mKQAGAIJkoQhiCBImAHTy3P4wASBdghppSgqkUiEw2Gv15tOp0UikVqt1uv1e/rtdDpnZ2cB
      AKi5vbYCJ8jvfOTO48RKKPP+Uqjm6/ztA18oXUiixb+87aY/AUHQYrHo9fqFhYWHIyvolxgE
      gPLlMQjCMASAIAzDAAjCDBgAABCEDtaeNgEEQalUOjAw8PLLL7/++uujo6MURd25c2dP1y0W
      y4ULF0KhUM3bdG0FA4LoPV8WDA3paj+Fc6JLTNurya49O8hCoXB0dNTlcvl8vro6etyAIEit
      Vo+Njb366qt7hjCn03n16lWz2Tw6Onq0VVobJZvI41ftYbOCN9ElgX54iHq1Q1iJJD9ai+Ww
      0rk+OYcBlQ0lFEX5fD66TsgBl23PZXz9snsUiD6lFwAANptdSdJk+yvQwzTpQQYCgXA4PDg4
      +KjV2eOqQHvSenbOcq4wC6RNyrv8EOrGe2//7h9+bWPNu11EujRSDM0VCfL21Yu37F6zVkGQ
      QAHNYUUCJEvv/NP3xd19fNa+HcC+9T//z1Cv8hvf+guBUs8BKSLlurOckghgCgAxNFckgBKO
      ogWsgOE7KWZCoVAkEm1sbIAguG+m6ZNS3qUq2tAC/e5v/4fPvvzpb/7NuyajqRTbcGOsASmV
      ZkqLW94UW8JIbfM0anYuFc7jX/na17vE+1/kz/7od9QqZYKCnKtOl8spl8t4bGWBKqgNeijm
      nYkCvUjCl8VkAvUvf+W3zKofBb1QFLW5uZnJZIaGhsqe9+NqgY7B/L8qKACkKOCFT382i4fn
      7Z5kJonjpWQkuB7YjiW2LYOnrEYjUaJ4rIMi5j79yrNvXFl6atSIF4sylX7AbMAzqRPPvSYA
      ijbHRjae0uusTz09fnqst1DYU+UTBMHu7m6j0Tg1NXVUVfdaTEUWaME2YzSapqdmu/sHgxsO
      aVf/kEUHtKUFQtE8i8kkKJAgSvlsBmYhHCZEAmA+m2VyEDaTSRAlgCLQIikViSDoEfaAInJo
      kcOCSySZTqZFYlEBRdkIlywVc9kMg83lsJkACEAACDOZ8H4jC+33YLPZ3d3dtCl6XC3Q4QoU
      djn+9oOPzo6PcCWK5bt3tENn0lue8xfOkQSRz+drPi+sVCrVfEeOSpYkSYqiKp9PRKNRr9fb
      39/P4/HqbBeoYw7U1Nt16HWp4FYEAfBEHsPBBMhh53KJEkDuxDfVWayp9bJAHX2uVlwulwuF
      wtXVVTrIs84+t+etrmgISyXjCJe3sbGhN5rDfpdUbZKJuEBbDmGH0vqhhKKoUCi0tbU1NDRU
      VSZ1ne3ucMRD2AF0FKhy8vn8+vo67dluZbtAZxX2eMBkMkdGRkiSXFpaepyOqe8oUOug3R0W
      i2V9fX1ra+uou9MYOgrUahAEGR4eJghiaWnpMThJs6NAR8COKaLLJNS5KjxaOgp0ZCAIMjo6
      WiqV5ufnj++s6PE/DaTN0ev1CoViaWlJJpM9nEzd/nQs0NHDZrMnJyfZbPa+8Y1tTscCtQUg
      CGo0GplM5nQ6WSxWd3f3cTlxq2OB2ggWizUwMCAQCGw2WyKROOruVERHgdoOpVI5Pj4ej8dt
      Nlub1Fs+gM4Q1o7QZwvncrnFxUWFQlF5HdnWc7gFKhZyGy43Xixuejx5DA94Pen8sd/+Ohbw
      eDy6UuX8/HzbTq4Pd6auL84mEjFfkpQKeanYNksgI3Hi1dfOPcYFph7FUZW4KxQKTqeTwWBY
      LJYaWm/dgXP7ojMa5p0+k1ImUupiHqfaNJbe2njsC0ztS80Fpupsl85jzGazMzMzWq22koyr
      sqabd6sPtUDU4oMb3kTRau1xrq4Ye/qCnlWZtm9iyAx0LFDL2yVJMhAIxGKx3t7eQytY7tCJ
      B2qk7LFWoJ1L0cec9/b2VrJd1IkH6rAHJpM5ODio1WoXFhaCweDR+mI7CnQsoY+uGhsbI0ny
      aHcdOwp0jIEgSK/XDw0NxePxxcVFFEVb34fORuKxh8lkWiyWfD7vdDo5HI7JZGqlH61jgR4T
      uFzu8PCwRCKx2WyhUO3FkKqlo0CPFTKZbGJiolgszszMxGKxFrTYUaDHDRAEDQbD2NhYJpNZ
      Xl5utg+kMwd6PGEwGCaTCcdxt9uNomhfX1/N560c0lAzLtqhTWCxWH19ffF4nI5TM5vNNWcn
      PorqhjCKJJfnZyKpNvUMd9gXPp8/PDysUqmWl5c9Hk9jL16dAmWirkiOef/anWOch/KkQm88
      8ni8qakpj8fTqHOGq1MgkiRZLA4DbtYZxx2ajUKhOHHiBIfDsdlsDXGDVKdAQoURxII9Y2PH
      LPekwy7oIr2jo6MAACwsLGxvb9ejRjV641EUxXEcRdGa5/ZHVSSqnoqTdDxQbYWe6ulzPe0e
      3DRJkn6/n8vlyuXyamVpjiyc46hkM5kMj8er7WHgOE4QRG3vzFG1CzT5Vte1qKuklnS7ydaz
      jq3ZBtDt1px1CtKnI9RKU291XRaoQ4c9hcarBcsl3nn73UAsZ+rSXr/0zoJjw9RjZTyq9Ckt
      ko2/8/a7we28yah96x+/G0gUu7u0lb+YjukfOJMMvUL44Pq1O/dnjf0DrAOb203Qbb+9tNlj
      1C5Nf3T9/rK+q4vDqtQazd+7dfvejFilL8a9712+hkF8jaKyk5cp8saVDx5ML1oGBxzTN288
      WDZ0dbErbtd2/+5Hd6c0XeZcxHXpg2s4zFfLKz3x2b+6dPnDa2yJgU/F//rv3+II5QqJoEJZ
      AABuvnexyFeK2MD7b7/r9IUs5v3z9uvyhWUzcY11qFhMAQBRpBADn53BD1nhp9Pbur4RHE8B
      QIkJIdvxUJGswgSKBTy8RAAAlcyRJ/WyULZ4uMwP4fJEIIkBAFDESCaMbWeq2A7tHR7mMykG
      A464fSdf/FR8012xKDg2OcYAKRgEijjJhLHtbL7ydgfGRmA8my3gEbf/5PlXtjc9lcuqui06
      KXM7mcllCgqZ0BeuwkUf9izbfdF8HsXRnEBuYJVw4hFPqS4F4nJFXscSRbFdbg+BJVyJNI95
      yAV5PJFneQEA2E7XBsFkgKVSVUOoUCyFYcjpcnFg7MFmUIZUMaHhC0VMBtPjcRZhiKqy3Rvv
      vBnKAumoFxBLpj68hCgrzfSjqNLF7/49gPBdbmcJhqttd35uhuJwtkNuSCyeuvY+t+J2AQDw
      bjiiBaiU9vpSKEFRYDU7hxyh3GKQ55LR4HZ6O+hME+SjDH29cyCSJEEIAgGAokgKAKEK5ok/
      EiFJCqxI5GEoiiIpat8i35VIE2TNsgB9XFyr2v2RSPXt/kiWJAkQgmubw5MkCYCPrMnemUR3
      qIsnIh4onYhG4+lE8uPI81Q8suFyF7BCPJEisFw6k8mij5xL4fl0JBbLosVCPpNFMQAAKLKU
      zuQBgErEtjN59IdfyxXw/QshlPBCIhrH9ptEZNLpfWeAJFEqlX404lAkkU5nKYpKp9LJZLLS
      n90SHstwDmplYS6Jw2ohYytDPD05sjg9F0nlRVrNC2eeJrHEB1fuDg7opmbCd2/d+IkLn1iJ
      kVxlzykjb3rWpurq6TGqVxZmUJA/PtwPAtSd2/dKpVwW1ohyK5DpKVY2pjKoP7h8+/kXz6c9
      yxmOUkChKlM/M+a6vrF9emJoK+AVCPgoyVAKIH8kZzWqpu/eyicoSqN5/qlRz7pdrNRnoluI
      TAXmt2fszp/4yS/515e2otkek86x4R3oM62uOQXMUrIkAEu5noHBLdcaIpYVMZLIxTa8aaWc
      ffrceeSwuWbLqGsZ36ZQpbu3p13rHiZc3NiMDg/1C4XcWGQrmUoRDETKLARSHAEj7fYGe8ym
      6XsPxBoDkyeVApmtHOX3bFh7uh/cWTKZ1VyBCAaJFY+PC/OwQiwdz5WwrFTVs7IyJVGaE1vr
      qe1EJh/f2s7hiYRShLA0BtvNHyBiRTScBAthd3Q7sLnpj8ZGRvq2NqODn5icuXYth2Eenwfk
      ioupyFYEk4s4XZae+btTRiXnry7ee/WM9YPrC4lYmC8VgViOqepz3LuSyeMerw/djpNiBZui
      5EI2W6TkIbXvDTaWx9ICATwRW8VUMPhiNVkAQUAsFSt0ZiTmZ0AwS6KTQNcCMbzH2isQyQxS
      fpEng/kIABY8K4sjJ076NrekUtjp28KLsMWsBwsluVGjgviZrl4OG/R5NkzGYe+GS91tZcmS
      gEAcCfqV6m6ulLk1v9w/OiFRqGKB9USWrWXjDBmjy6hdXfd295ncC7a+4dFgOMhjSAx6LYcs
      wV53imBBIIAXs8sB1mdfPPFg2TcyYgn4AyKhzOdfCoWnTgyN+f0hjkCsUygjkQBLKEthyR5u
      Gx2J/P8B5KyB6QFkf6YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monthly data allowance prepaid (500mb)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mobile Cellular Subscribers vs Cost' width='192'>
      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
      uQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthly Data Allowance vs Cost' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Costs Table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO29d3xc13nnfW6budMbBoMywACDXgmADWAvIkVSEimJlER1qtpx7JRd590k
      b3btz5v4za6zie3EjiVZIlXYe+8dIFGI3jswA2CA6b3cevYPkBRIUQZEkNLavt//eHEa7/3N
      Kc95znMQCCEQEHhY0O+6AQJ/2AgCEpgVgoAEZoUgIIFZIQhIYFYIAhKYFYKABGaFICCBWSEI
      SGBWCAISmBWCgARmhSAggVkhCEhgVggCEpgVgoAEZoUgIIFZIQhIYFbg33UD/ui54/KJIAiE
      EEAAEARB7k8BIQAIgiIPLOJRtYTnAfqoqxAE9HihI97ulg4/osovzFGisb6eQW1qtkEnu/sZ
      mahvoKff4QsDVJSUnmUyagOj/RZHOC1/jlbMDHf3xlQpKRJq0OIx5WQopaKHbQgMTfS3j4CC
      LEVf9zANAAAAFcuNyXqf3aZMzTeqxNMWwcU8nT3D8RnFBvmXssF++tOfPmybBKZnovviF7vP
      dPUNIUmZCm/zoQv1pvzSOIX4toD4cOWBz3aduDQ04eiuv1jX71cbTZ4b+z/cfYqR5+Sno4c/
      /PAWnZrJ93+641JayZx4teThmgHpwJXju6+PkBkK26//50ft1pERq2Vg3KfWSBuuXOSNc8w6
      ctpCOHfHL3/zsaRgVabmSx0LPdBsCF7ev+965yipTn16y/NJ3OCRY+dGPFRq4coXnluuwAAA
      IOpzYPHJaWLa7Xc1tl5T5W42J8jvdj+UvfVIZUfa8pdfXJnLR6wnjjdzFIVzgKPDNdfPFBY8
      xyEIy99XKdtXdf5044gI8fn4+Kc2byxM1k2OS2Fb586d+2ysunT5+vULs8X43Qku9I72NLU5
      5r+WjYEOIEle+8wr8wuSEBSXAO8AIPmw8+j2XbG0xevy8S92XyxYsSmLHN97/AqQ6tc+83xR
      etxQ7ekDp+ulMtYTiN7XHGES/fD4eqqvtg1k5GdFx+p2X25rOvt56wSVl50y0HChbcQ/mUZn
      miNxjPWPSBJ9Hdfc2kVF8WPW0UCMmfyro6ebFpELly1UQt/QkC+7IEOFUQwAuDhBHug9d+xs
      IBD7yheCzsHOtuZmRm8mfW2//N3ZKM0CAPjQwK9+9eFAOCUvUVJ/+OiQLzQlB+8Zd/lggjlO
      BQAA0ZFjBz/5+c//defBm1EuanH2BRCx0ai8+vl//j9/+z/HaZlBZN/5xU5KnalHxz/ec2xw
      oP5/f3SMU2XoSRm80/K7CD3QwyPWphVkpnk9nmiMi/kiCUUlst7mG9U+Q1aJjLj93TUpZX/5
      szw25jr8H79JK3mict+HA8Phgpf+7O0V2QAAUi7lOT7gCzFi+8hw243L9ekrNhbhQGKcv2Wt
      aMdnR50hrnTh/fWiAEoUZW9tfXbgWKTvzHiY52UAMAGnj4pVbNv6tIlfsS6mUsum5OCC0QCn
      1EnFYg4AQKiKSxZnpmhVepMEoSGEAJMUli4suNVU1Rp4cv0mFdUU9AUVJopBpWiE8o4NQ4V8
      8ebnK7DmpsHBrzRG4GFxdV65UtsRl5ahVUkACt0TvqSMoqXluYNtN6u6PbcTIaiYJO0tt5rQ
      vOVmPILpF+Touoedk3/U5JQmgfCVE4daXaJEfRwCUBRgEABAg+ziRUsLzSL+/gFsEibaX9fQ
      2TM2FlSqOJ/18rnLExGcQLHem9WNNVWH9+wbdDprL59vG3LwAACASkgJ9HuiFA0B4Ii4wnlL
      1m9Yt2R+ngQDAADA09aBviEbJSeQ9hsX3CxBiFBULNcpJPFxSo1WByPRvuamWw1dwWD0vpYI
      Anp4lIkZOBO5frXSHmQjfr/aoBvtqr9Z34EqzYvyDXeT0T5rZWPbolWLklRaYG+/1jGUla6f
      /BOuML/17isKb/vuzz7bd/yKqnjVmtWL1SKcwFGxKnH1uifSU3W4CEVQFJdgCPZl1Uxk5OTn
      H13sCKxdvwhE7ReuNYxxKVs3Leuv3P/pvhMe0qBGmaaLl3sH3BAAgGAqpVwRHXeHoyhCiMUE
      ht2dhuE4LmL8tkvHThlKn/jxX7w8UlfdPMwvXTzf1nL9coNFY0rXmxc+tzS9+uQX+07eiDJA
      dK8dABFOps4GnqVZHhWJbs8EOJZlGE4kFk01t7BU1B+MKVRKEYFEQv5gFNFplTg25afLcwzD
      8KhITMzk98xU7/jl7t6kn//TVpzncYL4siYIeZamAUoQBHZvHi4yvveTDz3pT//w6XkzNATR
      sRhAMZGIAAAAyLM0A3DinmYDAIQ50CxBcdFUywyG4xh+/yvFxRKd+PbyWyrXSOVfLQUjxNhX
      nn5tnfHm0qVSGYZhBHZvLgRBCfEDl+OYNH5pxYqLwzQ3408uIqeUhKC4+MGGIqEH+sODZ1kO
      Il/pZaYBckyE4iRS8tHOWgQBPXYgz0YjEUhIZGLi4QpgaToaZUiZhI6EEJFUQhLfaD+CjgRp
      iEulEhQBAEKGjkViFIQIKZWJRThPx4KRKIISUqkUx1EAeSoaYRFCSopQBAEA0pFQlEVlUiIU
      CIlkSqn4ni5MsEQ/dtiA5dOPftHCGOeb4x+qADjSeOUX/3Y4scB88uf/o4NNnZOb+I16kdpd
      /7znpqtwXpEUg0zYXXXs4w++OHj+zHkH1Gakahsv7P3Zrz6pqm3A9Wkmg9o/2rnzk99ct+Nl
      2ekiDKED48c/+l/bj3YWLjRf+OyDxmjc3AzD1MKFOdC3xFhfw2F7mywpa8H8YmakqbJjhOex
      jLKFBs52q6mHEmmL5y/MTZSN9bc3tPVHOSK3bFFRhmq4raGhdyzscQRYABAA2NhYd+0xtkes
      y1m1tIR3j9TUNrjCTLwpf25x6lBd9ThPsN4JoM5ctqRURHkb6mqtXj5sdQFlzmQzoiGvdSxU
      sWZzQqTpYENloZE/d6123lNbFBO1V282FmgD+3fubWwbLkp7AgAAmVBj1fkLrTZUpcXkhrLs
      1P+8fNWzslg7pScVBPQtMXijxbgwqedqZRj/nmn8+oHj7eq4bKUOPXTuagxRkVyo5mb79370
      fPX+nROKLKm3u8vm4pekXzh0wBNXpAr0uPgEgADARcbGLRqRq/1qQ5DHNe4bZ9oiJUZ4YP8A
      Jl3fev5sZxRJT1Jah6sQfXzC6Nmd54bzMg3Nff6MubebIdUaN7z6fakSv/bxJRGuRWIBJiZa
      vLyCaXLduhmhKC59zgpSWhkEAAB+YrD9XOVwdm7qsANBAGEqzJRc2Ndmjy43frklJ9iBviXK
      Xnhl22tby4vVvVZHjA4bM4r/5ic/zkXGA5T4rR//3Y+/9zRG9fYHpAvWrMuII/3BiNs91tU6
      aHWY/vy9NzevXWtEAOABQJWlc59+989/sEhMDXSN55SWL52THPJ4A263z+WPcTB9+Tt/8daW
      NINowhOwdnblzFv82nt/vnWB/k4rEJwQy0nm7Ce/PjtEP7HxlXQlBiGGowgCEAIAUl/wzOr5
      iRopAICJBi/v/5yNN+SmqFk66JgI4CSJomyE5qb+vwQBfUv4hsddHo/PHxGLMRRBRLhSIRWJ
      JBKW5ezjtgmbi6YA47Me/3zXcFSSn5uEAFQkJjAiMD7hcnvcUQAAAgBkAkG3Y3zCA3keBK5e
      OHKueTwjP1+NQRQBCACEWIJhOEAQgCCEmPD7fG6Xbcx795NDOuy5uv+LU5Vducs2ZGk4Fpfg
      omh7x8CEw47LxRiBY3csWDzPoJgBDzqq6gYCfkd74xD3oP+XMIR9S/RUnv6dSxUMkxuz0sXd
      NZMPtdlLio1dh7Z/KGWihoKVJUaNRamZGOtn2QBPqXTmnPyeht07dmDhCSc0AQQALNLVdPaT
      UdkYHf/KsuLYrX5p1NXWFKAxLkrFAATgztKeICRZc8urDlV9/rvOoV53XjkGAAAQeMZ6btQ0
      BwHSef2Eazh7y4vPVMxJP7rvCwWJLdiwWiMjAA0AQDEARBL1uvf+bBUAE9V7P77sXbg8h3VW
      cgwZd6/nkLCMf+xAjnI5nYEww9IxQq5NMsTxYac3hscb4ggUBt3j404fj4rjEpK0Usw1MeYJ
      shIZCRBUGxfHBVzjngAuIlGcTErQhRwjQRrSDINLtanJcZTPOe704SIpjgGZSsmGgogyXi+F
      doeTUMYrCdZuGw/SUITjUrlaH6/BAaSjgYlxF4sgAABcLImLj0ejnpFRJxTLE5MS5BIR4Fmf
      x0mhMr1aMdkb0UGX3c8lJOs6D+/4qJX4l59sk04Ztx4gIIqiOO6B3ZXAny58dOL48aNkwYZ1
      halTnz9AQD6fj6Kob7FtAn/ACEOYwKwQVmECs0IQkMCsmH4Zbx+ov9Yw6ciIaBLSy8rm6OQP
      tykI7J3XWx3i8qULFRjgqEhX/ZXOsTAAABer8svmZqXEfbP95RnAxXyNDfXAUDg/M+FRl/1H
      BGRtQz12Spafkya+06U4+xqvN/XzhLK4vFwT6r7aZAUAQXFEpk6tWLZAfUc40/dA9qG6A8fO
      NXb2D/W3H/r084s3mu53zJ8xYe94n8XJ8AAAwNGR9htnjly+2TXQc/nEzo92Hu8c8T/y6RhP
      +RqqL9YM2h91wX9U2Lquf/LrT+p6LPSXX9Z59MCRUZpkxtr2nqilWZ5nAcaHrl84V9nlnOpV
      NhNDIpTGpy9/8rlsHTy9/d/cfv9Y3Ynf7DnPQOmceZnDnQNrf/CTEr7r4y8uL37t1VDl7iv9
      FMd4WN7w4g/ezRXZj+7a02CLpuQv3rp5LUfHAmHytkogABDkzlv23gvr+PGW7f+2vb1vTlw0
      sv13R+0xRpUy9/1t65uPfHSuw8mxsjVP5fYMY6+9/lKk5tP93ZrXN+Zf2buv1R4kVanPvrwl
      jen/z48P+yARlznvndef5ifqd+05Y/OGVKaKbVvLJ6sS+HqCl49eDckIHZhiu6GD9kAoP39O
      wtBEU79Pm75yS2bZ4M3D1dKM999dK58ioBnNgSK27sO7Pvzlv/977QQpU8aDsCMYpsxzl5Zl
      J1KUN8RwHBWOeG1Rio64rT6OXLVurTgwUHn51sUTJy93I6tXlbpvHb9a3xFwjfrcdmbq90QB
      QYh0+uSUNLEnEBjp6SQTMucXpTo7ztZaPGHfBFQkLF69Nl4U9EaDDM/TQXvE7xxsbWjssGUU
      lSVKGduEvf7MqbGoorA4Dws6bN6Ia9RCJmUsKU0b6a2p63E9orf8R4zi5b/722dW5E31MeJ5
      pUlCXdv30fHKRoVejeI4Hxy9UtNb+MzzaeJ7vJFmJCCxPnPds6+9/862FTlkR3uzPRCRKZKe
      feHpwvQEHAAMxSDkIM9hAACA5ObnlS9enq/BYTjkioUpjguFYtrURAxDeR4g91aJIBiCIDQV
      9rkpUkxgIhLyoSiDoAQeoxgAsOJ5Fc9tWq6YPDiOoDzHAoAm5xcurMgYbKkddPkZns9cvjwj
      gW9rbvFT4QjFohjBRqJhFkd5SEXvP8ck8FUwCMC95xfp8cZ2r2Hb9//svZdWBztv2SnKNjBk
      j8Qtyr1/KjkjAbGxoHNibHTEYrO5EBwBKIoAEYECwPMAwLaamzVNHVbH5C4tigAUARAAgIol
      alKGikQJRiMMIyRKfsUjG9gGuq9fPLNzx/ZmOiE12TBQ3eCIatNT4wjAYxgGAEagGIIAwLEu
      20RPS9XZugkI6aHu/o5hbP3mTWkyb9dgZ/XV9og095mnFkFPX8+4a6jpegCRmY0agCLgTpVu
      a/P+vUct46Nnvvj4WpfQLX0dMOQbH7CMcQBhkSAktRJSilAcDuhx75gsOyNOc79H9/RzIKky
      KV0/aumosQBEllrx4tPrkvx1qakuEQpECQXPLi44cutiLYEnpZvVJIklmCmNCkMQXYoJSUle
      PzcrFDpw7uQlg7m4rCCV7TQZA3IcAQAABMd1RpOm3XPr5g2xPPmt955bVJQ67F3SeKaxtl0d
      n5LNhZn4xHSpWoEiwFSyalHzriunLylkutTktKKyXNfg4KVTFwh11prylfnk6Ae/O3bxKpBn
      rV5TbAqAlbfONp6m4nNSkzCO1yWkoioJzbitzlAhTY27AoqQ0C3dB6pUGRJIJYoA53jLlR7+
      uaeeeGmldf8vfwqBbO7zzxtEuJ1UpBv1JH5/H/AILNEMw6Bf7+ENIcswEMOJr3Y/D0oMeZYF
      6P3HDQAAPMdxAOBfnmjiaZpFbpcLeZ5jWIjjOIYiAPIsy6EYhqKClWsWQMjGoixKiMW/zwVb
      2MoQmBXCb1RgVggCEpgVD5hEcxwnjGsCM+TBAuK/JiiEgMB9CEOYwKwQBCQwK2YqII5lKZoW
      BjaB+3jA2fj7J9E8bWmv2r1777lL1zv6vQaTSS2d3h+IifgrD33R5RelGA347w0FQE3c+vUX
      ZwiCv3zkEEjJMcinDxcqMHui/v6jhyp1ublyLHRx945dR8/cbLPo0tL0stvv32u59dF/bL9w
      s5FWJafplSiCePurP9tTXbCgYOrnn74HGu2q+ujf9/gkyQvLMsfaL566cMkTiTlso8PDlrFx
      F8VwsZB3fHxibGzUMjrh9brHLMM2p5djGbetf8RmHRmxjE54KA4CyPpc9uHh4bFxZ4xhIc8F
      3HbLsMUxPjYwbA0CMS6Lw1GMocITYyPDw8M2u5cRerzHAu/oqfzFP/5H69gEywNX/ekbw+xL
      775TKnV/caD+dgpq6HcfnEhYsXljRVrDmaoYw0YdPfuPnqztGL3vvM70e2GjHbWx9OLXn9+S
      oxcXZWU5gD48UPn5rsuMREQzoqe2va2zXfz45IBSCcYdsdzs+IDVEpSZ/+z9FwFgG2uuTXTX
      uELqF155MZMcPXzwxFAQIUWSuWs3r8wW7fndF8M+TgX8AFVzsaB9bCxMxQYarx081wIAE0CN
      r3/v3SKD0CE9cli7ncpeUtjWy0AARPFFm17QZ2pEdhmOs7dHHmq0z80QGYGB/ggzf/VcjItU
      Xa0M0YhcfL9gpu+Bol6fTEFKpGIEw5Lz5pbkmWRydWZ+QZZRF3P1dYy4WS7CytQrn96QhEU9
      TML6dYtx94g7xgKApOTM2/ram7mi4eb6qutXK/t50zvvvLEgRXLt9M2RoYZOP/7Ei69tWDYH
      AMDT0ZjfTbO8RB6fXZCXnqD0OwZ6Ld5H/vIEABAVLHti7ZICHAAeAGVqXpFJ0nzj5PkBds2S
      /MkUEACOd/gZqYhyV1640dd0qW2Ce+KJhWoC/cY9kDxe728JeD2BREJ069SOVjo1Dx9r7R7N
      LsxX65QMywMcyNVqY2qCGMfFamOKgRbdDtyHGAz6hOS0NL24hwv7ohymNWelm6LdBtDhoWKo
      RK1MSk1NURhAleV2ZRw70nOrtYcvyUkSIW6WFc43PhZQAAB3e34AObb21I4zXczqDZvLswwQ
      8hACwLOk2Pz0uhVKB9n6QX1vXVv/EHDauh2u2K5PL23btlp6p6jpBWSet9Zcs33vp79N0yDN
      nc7lz83h7MNhWquWgr5ghGc5gAMEAAQADACWvcev7cbVa6LQUF0rt+T5IhPXO3ju+Mc7be6h
      Lt3cNUmJYsR17PTBXchwC0A1t+8f4fmQy0FIUlE+ChGe4XgIwGO9gORPmMkoCvxo7b7PL/bM
      WfGUKDhc187lxoc6bXxZQUGitu7o+ep0qptTKJa+9ZM1KBa1VP3qs47nX14hnVLK9KswqUJr
      zkzBeR6I1XMWrVhWPi/ZoOJBjEdkpoycpGRTukFJqhLMKUlSBE/Mzk5LUGKkMi0zQybC1Do1
      yqO58xYuW7YgK9OklhBhikvKKnt61QKDwWiME0djTFxyWnZuTnaGWalQpWZmGuLiYhGKlRkK
      zKbklNRkvVwQ0GMBAhSXp5mSQg6fVK2TQCoQCkUxtSkO2sMw0Zibkyi3DQ+EecWidWvMCVqS
      FJMiHJDa3JzUqb3OA9w5aJr+6lYGz3E8hBh+e0nOcxxAsJn42/AcB7DbvkAQQp7jERS9HQUX
      8jwPERS95/ojCHmev/+hwLcPhDzP8QDBpkSV/iozFZCAwAMRtjIEZoUgIIFZ8YAhTBi/BGaO
      4BMtMCuEIUxgVggCEpgV01uieY7lIMAwDH2wYQayDAtQDMMe8kJpCCHkud9bhcBjBXIsy/EQ
      QVAcx6aY3yDkIcdDFEMnL83gOY4H6H03Pk3fA7Vf+fC///Jji//rTnPGtv/4zz852DSbXavu
      yi/++YPdIwF2FmUIPCRMYPjjf/5vf/cP//AP//wfLcPuu89ZKlR/4eAvP9pr9TIQ8mHv+MmP
      //VXJ1ruyz6jONE8AGzEeaOhH0hwv8uvNuUvKEwJe0ZaWrqCmNgeBfEo4CLejqYGi4fWJmeU
      5GdA31B9uw1B2WCIzZ67KCdJPD7Q1dwzQsgNc8qK9STVXF9ndUYkqoQ5ZcUSeUKKBhFj9GBL
      Q7vFgZPq/NLS1DjFQ/ZpAt+EkLWbS1r01xvLL+/55Fy7rSQ9bvL5YPWJPceuEJnLUQQwkUDV
      yd1najtNzzx5X/aZBhpn/UOHDu1DFckq3DdxoVH39+/0n/jd+SE8PQHrCiPxIFh9+uiJC/Ua
      U2Lg0oWx59+eS7R++mlVZn5aaGSgZTjw8vrUs7v3+NRZuPuaLRhZluDbe+BcQvYcf021A0pK
      oM3iwtzDDUf3HyYSs0KjVzuDxI82LRR/5SS2wCNHYV70vDbWffVQS290xZIvYyeokwpXryFb
      LCEeABQTZ5WuLp/g7OD+kWbGXwhyUIQseemdbc8uVXBuu9fV1eifv3jj2++8VyKDrNvW2N1m
      WPvmX/3grQX58ZV1fTGaUphM619+7611Wc6xoZ7Oga4+1qBPlIn5pvbBCU8gEKIGugckyTm5
      JgPHxiJMjNBmrVy+XC+B0YBnaNjBcYJ94dsAFUmVKnliWl5aPFZXO3D3eXxWYW5qHA4ABAAX
      S8wFBck6+VddI77BTxxBELlWJSHFKIpgCIYTHEVFIsFAlAcIhkEEpYKRcCQapSiCxBEE4KRI
      ppSTJIEAhMBRFHqjLK3QpmSnGdTGvJXlC3PMccPNV397vGmyfHfnxd2HT9Gy5GRjghBU7FvD
      1XX1dGVPSuniNXNNgQknQ0cCoTB3243mjpEQAQCB8EFfZUZDGHLHKQcFPAAoAAgpUxfNNZ6s
      OjbehrXHkCfUCfONpfsPHP3diDIUZlZvzhMxN1AAkTvXNyRn5uaZG5zjo56gMyllHgiMNDa2
      a7PSxUp9hikegEEEAIKU4wDxOEcDHn9MFWYFC+e3gohEOy7ucdnzPYPjefM32i23bgxwa59Y
      pcEB8mV8JQAAwNEH+GZNb4kOeUYmgkhinGxszKFPyZRxfuuo22BOR8PuYcsYhRAEhmvikw0K
      ODxk9UVouSbelJKIRJ0jHjrZmIIGbCMePjU9ITQxap3wIGK5MdWkk/KWgUF3IIaRCmNaGsm4
      7CGQqJOPDg+HGERCinhCmZOeOKOQMAKzBFKW3r4JT4iQadIz00Ss1x6EyYmJYhRGgz6nL6ZP
      MEgIFADeOz4WwFUmvXJq7lltZUzmvWs5uFPU13ryTE1/t96pqe8rUODb4YHfYoYIe2ECs0IY
      IwRmxQMm0UKfJDBzHiAghmEElyCBGSIMYQKzQhCQwKwQBCQwK6a3RIfcoyNuxpiSopDM/Ipn
      ztbX6QhPhq7HE1LMOhFlHR0NRjkAEJFUlZKaJMOBfaTf7qcBAAiCyrXxyYnxX41jLfCYYOnA
      yIgvIS1VggEAeb/HEWJFhnjt3Vg8Iefo4JgLYmSiyaRXSBAEUAHH0Fg4My99qg6m18RI2/kP
      LgffeWdbsUk14+Yx13b9+vIEFh+v8Ts8GQvXPFlmOLlvZ29UlUCyIQovWLVl6xLTzWOfnOpl
      jXEaJhqgydSXX99ampXw+w6xCTwimND4tXOnbw1wr/7F+6kY8Iy1H91/Bs1etGX9UvntEO/+
      S0f2dsZUipgHyVz+3sYFIj5Yf/Xo3kvhf/7VX0+97mB6AXGQoXnA8XcCf3jHrp490zbmVxlz
      nnxiZWocXnv66M12C2nI2bBprUktmUyG8HhK1twXX3oiWHfk87pmW+YqAEHJ2i2bCpRtl8+c
      OXNqcem7gAdppYtfXLOYsffs27FvyDZenCkI6FuAajh/rrK5l1ekoQAAELqw+0CrPVKQPcV8
      QztbLa7yt99PHjz1af0wx5UOddVfqGwKc1n3lTXzUQkAAACkeurrqrqCpaWJdafOV2sTw7Dp
      s3P9c+YX+Yeqf/nr4P/3968pUAAAQADndVtab1Vb6/tJaaqIQAEACrU2JTWdnD9S23Z03BsD
      AIx0NB4Pjkc9VrfEnKjT//5YZgKPCFHJU1vNi2598HkbBwAA0qd/+FcJ1af6ol8aACGaWKyh
      T/72ZyImmLTs1bDDculS/bzFi+ibgfuMhDObcyAA3N4lwQxmc3GG3ud20zgTpf19rRaNruK1
      1159cWk+7u5w0l9mosOR0VGXNCX/2edfLdCKAAAoggIAqRjFshyCoAAAUikXi5hRWyS/vKI4
      N0lwQfxWQEgxSX6574XKSInoXl0w9sZ6h2LT62+98kyFraGu/tLO/igO+Ggs6mxvt0z1bp5R
      D0QFvX1drdArw1C+q772Wie15ZnckcZuBCFUcaJQz2BzW7tzcJwCevmd8niAJZtLXnt3axyJ
      ogji7bUCAEYHuur5odbqWieZna4TewFIyi59bVP5Re4XlbeqO4qzF+QKQ9h3C4yFfb4wr6Bi
      HIqnpKZriVEpa5Wnzi1Xw6hniGGj/mBsaoaZCAhnvNbLJ/ZV4ahYk5ieqJVxfZfOuWgcDYaj
      OU9uyRj6eM8nHzO88qmtb+julIfgCIqJMeLOWQ0UAAT0XT9hu4mIVKnPv7zRIBUBDCAAAly9
      euNzox9+cr6yKd/0hGoGETwFHgX4lBuR7nj+QDA+XH2ui928ftGC9NoP/+VnIoYxzFldtngZ
      gaKU9XprL1axMHvqF5o+OsdXE7A0DQmCuNsFQp6mGQwnMOxuTJb7HQRmvr8m+IvBUDkAABxT
      SURBVHJ8O9zje/PAzwMhEwkzmEhCihAAEOSOVO79QkJ4F4FZIRjuBGaFICCBWfGASTSCIMJl
      kQIzRHBpFZgVQk8jMCsEAQnMCkFAArPiAYHG72O8t/rwycsORpykV9sHG46fvDgYJMzJcV/G
      A4LMcEfD9XZ7cpJeNFOHHubWqaN9PqkxWS1I+LuGarp84vz1usGJcFKigRTdXVdB34Slvm1A
      rosXA6q7/tq5S5VtVp85J000JfP0n89pbTp16tT+Cw2BUKS/5uyJkycv1PWx3BRLI2RGBtsv
      1HRHqJkHCeIDXrsrGBEm8N85vvbzB87WaJKThpsuHG0aufs87Ozd/dtfnK3tDlLQ6+g4eKqG
      0MeNXj+z78rQ1Owz2QuDGIYGuztHXOW9zV2ESAx56Bmt/82nB4bcYZ5M/cu//3MAIA8BHXZ+
      8cknNb12FshXv/Qa23zEY1z9xsaFV3/zT93SkmW52KH952MYEZ9R/sara8Ner18VdXRW7/ps
      vzXCSOKy39z2akGqTtjJ+JYR6XNf2DY3Re11tuCBUOTu884r58fwBIznAIDOlhtiQ8H69RtY
      rf3np2tDK9Pv+pTNaADRJcYlKP03ai4PUbpssxkHIOS0kwlpSxbmA3/X1Rb7ZDI24vZimgVL
      KrS4/1pVT2JafG9Lx/h43412Z5LRMNTY6kTUc0rySCbkD0e9VpvfGXQ6PUh8wdIFecGuto7B
      0a+Lgibw+JAasvJTJI0XzrX0enSiL3++8zf/8J0NyxQo4AGAGEIgYhGCIBICgXDKLuzMBKTQ
      J+Umaluv3mRUprRkHQIAx9DhUCRCoziKU5HbTkA8R0WjYV84JsMxLIakZRbpQv2njxzwq+KL
      5xXNW1Q+JxFvaWhxej1RKobiAADIcRzrcwcZRK4CLCcE5PgOCDstVj9S8fSrW1el1d/o/PIP
      GISAvT1T4SAHWA4AwHEQTJ2+zExACKnOz0vCIa9MLtCpxDwAE101jjBMSdHjGIQYAgEACIi5
      +vtGPcaUFFSEQxGIN5nTTbKG2k5NzrJMWaiutdmryHr2qcWou9fm9fMAAC7aN9DTy6nz0uO5
      IEAQFAhxgb51PJ2Xdn2634Wi4TDDiyUBz0hXv4Wa1Ahy249QmZbpdgz0WkauX+uTpKVOvURy
      +lVY2Dvu5bXz5+V7A3TxklVxRJAWx88vTB3oGbT42SSNSqZPy9ShNKqaW5wT6u/tt3o1erVG
      ps+fX4iN97b32je+/352vCaOBP2dzb3DzoTipasrSmj7mDilqDRT7hvt6R8NxafrdcnpWcYE
      XPBK/HZRpZjc3TfOnq+ywfitL69HfO03+5zp5gwJBulwIEghGZnp8bokcajn9JkrTiztvfef
      U02ZOT/sVgaEHMcCBMPuCeEDeZ6HEGAYBtnYQPPl/QfOjaEF///P3lehAAAAOZbhIYbdE/eH
      ZRhAEN/QN1vgUQJ5nqZojCDwqU5m9ydiKZrBCfF9l3w9rr0wyNGjPU1tlmByTvEcc/zjqELg
      /wYe22YqhDzkIQSocHXcHzXCbrzArHjA3INlWUFVAjPkAQLieV7wiRaYIcJWpsCsEAQkMCum
      t7+M9dw4d6MHAAAQ1Jg5t2JBaseVa4GEsrUlxjsJrt8aRcvzE29WNxaUrwgM1PmVeSuK0n+v
      SZCpOXEkop+3rNwsWIC+a5jWq6frB91irWn1qkUJytvhMSyt16/U9/OYrLB8aQrXe6ZmEAAU
      JRCF1rzyyaXaO59t+h7Ia+u4erNp3BvyWDoOHTx0ra67o6WhZcjLMDTDsDyEbCQW8ESpkL2u
      rmY0SEd94VCI4XmOYRiGYWia4XgIeZ5lWYZlaIZhOR5CSEWDQYqGHMcwLMswDMNwPA8h5DmW
      oWmGYSGEEPIsy9D07Yoe3yv8U4a1Nxy6VG/IzooM1x1vtE4+hP7uPccvkqaiVKn32IFzlEiV
      nJBiSlJ0NzZ0Oxlyavj6GVQBSYN5+frNaWLrL392MOiLQAAsNfv/1y2vF0nZ+u7bmmjA6wMc
      lAAAIOTCAU+QjI42Hv3V9iq5SuJ3BZe98b1lycyenYcdgAj7Akk5y9/YujzocvpkoY7LB3df
      7NCo2HEnO/+pV56dn3zxwBfVbSOc2rjljdfN6Niezw/awjQiStz06qsLcw3CyflHDhOJ8oxM
      Fad0AyJE3b6yjYdE+aJnF60s9re7q1r7ZcaCJ82g69oBXJX3/rZV0inZZzQHitoHLx3f+/ln
      h5n4pNQULQ6ASJG0ZsPGRHSsfnAiRrmdET89GUCIZwIRpzsWZbhYTCwtW/3U5lWZN88dHXCH
      6Jhfl1Gx9ZnF/o7K9qFRn80R8FB0NBTzUaVPbC7P1Ta09I92Xj/ZYstaujSFmTh04OLA8PCA
      LWrMzTeq8XAoIqwMHwc8qUZC49dPXey1OmTE7W4eU2esWDknaG07eKZVX1KqJvCYZ7iqYXjO
      uif192afkYAIhTqzYM6K9Vu+/85LZbkJEAB9bsXc4hydXs3zXzuyKOIT8krmL1qUz3FMJMYA
      QMxdVFqcl5+m5yIsjWIATF7EQqYvm5dvSklCeT7kdnIc6/eGFIakNA2uS89fNt/s6Gkfsrv9
      HictKOgxYGu8yWSufPvNbc8uSe+ubrsbn8czcOuT3Wcx09wX1pbhGLQNWV2MYW7G/btSMxnC
      ELFMl184ryRNhSAIYB0AAIhMxnKYvL5lcly5O7rc3rlwDQxWnj3d7L0lk6k0MhIBsTPHzkZT
      6F6bLFcqi95NjiIIgABCBABlQpKcHNbF6fjugbAs3zvY1OyEK57Z2Hlq77jDzgqzoMeAWCFB
      PBN+hglEOChXRFzDPW7eHBf77adH6OTydSVGj92tlWgcfpsyO12rkt2X/QHuHBzHTbVEx0Le
      EFQW5mZq5CIAAICs3+lRGDNzEqVeX0CdmGWUwyiiyjYlhkJ0Zk4BwURkcWlxwFbbO0GI0RhP
      rn5+W47Y29DURSiIgI8pWrF6cWl21OmQJmUbtWgEqEpLzXTQz4vUZfMrjGSwt2cghhuefPbJ
      7EQ95bZ29wyKEnKWrVydqpUKU6BHjsqYStnab9yst3PaZ55bQ0QGWqx+GR91eMMY5R3q6+sf
      8OeVZLFBH6FOzEiKv+/YxOOKzjFc88Vvr/refu89s5ogMMzTU/nR9iPLf/B35UYNRH/vAh/y
      HMsCDEdRFAEA8DzDcSgm3Pz0GIE8z9AMRuAY9vXuHF/D4xJQxGXpczBpGWaVGAUAUEHHwPCo
      PiNfLyWnzSvwB8TjEtB9d4fN5kYqgf+beVx24PuEIujmj5UH9ED3TaIFBH4PgkOZwKwQ1jYC
      s0IQkMCsmJmAeI6JRSmafcyNEfjDY/pVWNA5eHjP7uYhD4KAwtUvbXnCfG77F/a0DT9cn/st
      tE/gcQM5+tLe/zjXYpcnFLz+6nNmgxIAELVW/9v2U/4wzQGOgdq3f/yu48rBy00WqM74i//6
      TrL4S9lMfzK1r3r3rhuuFeufzlNGGrus8qQMSdBOxKWnyOlhy5jbPjYy4YKEVCbB/eOWzr5h
      t9tjd3ilKiXtt/f3DYzYJlhUQqKUZdDi8Dit1vEYj8tlEkiHhvr6hkfGQhSiVkmCLttA//DE
      +HgIEjDk6B8YtPsouVIpEhw4HjOe1oMfXXG+9Wdvo9aqq3b5soIUAAAqVhhTsorz0v22obA2
      f57WdrzK8+L7ryl6r5/tky0uNd4duabvgUi5ThbrGhkcNKoTli3OKEgSnz9ttYuDg61N2/dc
      0pmSvKPWtGUvvLDMdGLXzkYHpsMjoxPgRz/9K8e5HTdHOIJyIcYFW1ZkHd+1x8pp1USYxjPf
      ef/ZYP2Rw1U9PAJ5cdym17eJBi7u2H1JrNNlVKwV9dc6USLqjy3c8Mr6FfmiaZsoMAsm+oZl
      yRXFaWnSdGN10+1AKxipzsiWW9oGvazmhedWwo5d2oSMnLT0tOXm2mNDFCi/q5vp50DGglVv
      vryWDFovnDl39mpVy4A9EIl5oyzDMZTMtHrTa5tWpI+ODg+1N7QPhV569/0tq0rVGI0QYlPh
      3JJ8sxRlx4Y7xnwhhqEXrNu0bcs6pb+l19J69lKzrvSpH/7ovRxu4sKF1iDLsfqiV956p1Dp
      qrVEkrMK4hBrbV2lPSxMvB4vKEChiAAAYCg61dzL0bHOmzUac0lOkhbBEBSgCACAwMC9ople
      QI0nP7/cFV73xg9+8t+3gcEB26j77jaHWBmfHJ+g1aoBgDzHAcBKSKlEhGEopIOuyuP7W0eC
      GflmCCHP8wAgGq1KrVbJJSjHc1EWI5U6rTZOJSUYmoIAyBOMZrNZQwI6FA56fApTSU56BokI
      68THCyImuHCAYtlwlOIh5DiGohkeglhkorGPzy2bIydQDMFpNhJj2Ig/DAhk6j7X9ENYXFrS
      WNWNT7ePyFl7NCHFaIzrbwEYAhAAIAIgMukVhOgyCtISOrb/6hdxhN8eYCEEFKMQi3DXhBvh
      IcMABMSO7d1t0bOWcNLypGwsV3/tys6P+7T9HnzV+gLSdp2HCEAwvTEr09jNY8Bjtao1C2Vi
      QUCPF/OCRaraw4fOsONtjqJ55c7R5iYrt7iiHIatYbXKlKpDAIjLnw/rzp48ddpeM5iz9t2p
      PkHTT6IVcammRJ1CJo9Lyly2fMXcApNSpkrLSE81aA2JyWlGvVQq1RtMafFK64BFrDHlGnC7
      zb9gw9P56XE4LkrMLCrIyTFIuJ7O4dyFC0wJKQtXLSvMSs/Iy1RJJaQqvrRi5er5GRKRJCnZ
      mJYcp9bEpSSpAcsnZM1ZtHhunFyYAj1eMHlioooIeKOGzLInKvJwPhblxQa9XoSgCk2i2Zgg
      RoFIokvUED5fKDF77toVpVOd6me2lTEZKQEg2NdfgcD7ev7pf/y7jReRIMzEL/jHH7+hkRAQ
      QgRBEQS4u6785sM9K/7yH5ea9ABB727R8xCiCPKVrVbI8zxA7h2TBR4bEELI8QC97YL1NYl4
      judRFLt/m/yR7YVByPNRh90DcZlWoxTh9wTl4Dk6EqPEEhkh3MLxx4WwmSowK4T+QGBWPGAV
      xjCMEJ1DYIY8QEAQQmFcE5ghwhAmMCsEAQnMimkt0XzA5YrdmREhGCHCMZaFao0Se4DNALI0
      FQxGJQo5Gw5wuEypIKe15EAImVgwTCMKhVwIEv1dwIf9vjDFYiJSpZDjdw7gcXTU5wtyCCZV
      KKQiLBIKRGMMgpMarXLq4bFpBUSf+s9/qXNFAoEAItXGp6SZlGRfP/+3//RenOwBNmLPaPfe
      fZVLXtjUs+uXLvOL33+9nPhqoq/QX7tvbwv6zptvmNQzSS7wKKHcfTs/+tSJqnkgWbd564LM
      ydPv0YZLh07dtBIYrc5ZuXVp3IEDR7w0HvLjm3/0vbmJirvZpxUQsfTlt81DbadOn1ct3vRU
      aYqrvaa3x1J37bQ/guWXLchP0w83Xm/sGQNi9ZyKJQaxRJeoI8X45CSc9k/U3ayx+GKqRHP5
      3DncRGtNlwfDYqEQWrZqlUlCtdyq7bcFQNDGA6Ow8PtOiLls0syV768purL3s6pe+6SAGFfX
      uWtja7a9Gh8d6bQCKuLVpFc8v6Kk6oN/u1o9Ovf5vLvZpxUQZszKkwP/NQmhN6blZqZ2Dzei
      1NCt/jiRt6/dzf1gvfmTA2cSM/Mj3TfaPOT3l6tGu0cyK2gUAMDHWq5cPHTDOq8kvurgUUKu
      TRyvOXrGkpVj8lv7+wOSdYWRXXtvZM/Lmbg1BIqNj/ElCXw98rSFGzShhpM7azqCTy9VTT5k
      /C5fZPzc3u2QZdMqntGmFG9Qjl8/c6Bm1P3EltSp2Wc0iZ7sTu6u7aEo//1trzy5ojzm9tNE
      wrNrF2sIOhwOuAfGGcBxDA04CAAAiChz/vwnynPDXpc/4vMEQiwTM5qytn3/e88UJgZGJxy2
      fs2CxZtffn3L5nmP7H0IfFMQhJDI8+evmp8lu3y54/ZDCAlS8ux7/+1HL6wYuXbDz7CYRFe2
      aFlFnr7m9LXolNwPtQrDxTiKIDwPAGDsDR8dvBiVGlL0Ggy/tzg+dPP82WPX+lJzcuJlGIoA
      BEEQIMJQgCAQQVAcF0fcTqdrwmJ1POR/XmDWuLuun7rSojbnzckw0KEwHQt6fQGEJAlMLRcD
      sQRDUdQ1cOP8zTZpQubCIiMb8tJTss/saDMCAALQewNkICggUIBLVAZA2Xr7QDDMs8Hw1Esv
      EUKjlYtEro7mrgALQ9Eox08pgSTTs+ZI607t+3wsODikLDUJC7DvBKlWPbLvyMdjjUG7r2R5
      hd1af72f27BqXkVB4xeffKxh/ZrCBWq5YqjxzOBAW8w2WrbuHfmU7DMKrsDREa/Xjyt1aglB
      hQLeEBcXr2KjoUAUalSkx26PsigpxiEQaTSSoC8s06gYv4cVKWUE43S6eZFEjAKRVCkBsSCN
      aXUq2ucOciKdWhxwOX1RliRwXCJTq9WCC/13AGTd9gmPP0JIFPEJeowLBymgVqm4sHfC4WIR
      kTY+QSlGA84JVzAilij0CQkS4suO4HFF5xD4E0GwRAvMCkFAArNCEJDArBA8EgVmhdADCcwK
      QUACs0IQkMCsmNYSzXZevzbO3P4HSio0cmkkBEoW5EmJbxxTGAAA2ehQX7eL15blpuAziP1M
      hdw2P5KerH2IugR+D0zM3dVlTy/KV+AAABh02vpG/Vm5WQoJAQBg/KO1Lf0UwyMoAhGycN6c
      iKVzaMKPyw3zFxZKppQzvYB66m/U29xjYzZEn56daTbFaWwOmFOW83AC4ilf7dVjNdHSwkzj
      77mk/HbiqKvy/OEboYKfvLH4IeoS+Doon+XkgUOtdvHbefkKHLCxYOOlvQc6JH/zo9RJAfF0
      0Do0HKUp62B3XyD+x7roqaOVCeZMT9c1G02+uDRz5uFdRGve/mFJ/63Pdu4xbHh164LUic7a
      MY+PjfkvnzrR4446x8fU6fMN2HhTy3jF828+Mz+pt/760XM3Qpxk9bNbFxcqLn6+s3rQh6uT
      nn7h+bL0OAghD3mGu7v0gzztPPjRJw0jkZyFa15YvzA4XHvg6IVxH505f/3STKTq4vXuaPPR
      AtMcvPfIiWtuSrrxzXfnZ2iFQ6uzIFZ76kyTxcaQKZMnhB29Vw9fbo7pK+6uyEW6rOe2mIIT
      vXtHLbkvbRCPXRMpil7c/FSw7tP/vNK8aUmm5M7rn3YQQeVqrUqhwFGUkEo1agXndVvax2mK
      dg40ddu50uz4G+eODXokZgVzeueVvq7qz3fsE5uK56Tw+3bsqGq19vQN2aNMdmEmSYeGBgdG
      xl3MVLsBpKs//9eLPaGyuZldl7cfq+truLB/KEKWFWda2m+OhqBUSWJSYxxrObh9BxWXWZgQ
      3L3jt90u5mvbKzA95OJXv/83/+U5EQA8AGFnx45PGxZveDFLTXwZDx7FSTE60FnlM8xbUVpA
      yuXRiLVrYLCzz0ExDt+Uja5vPIlGcYCgAAUQALy4tGTF4gJCrs6pWFtsNhAkGgl6PfKC1StW
      r924JTka8Hl8HEDMy19/eW3p8NXD//KvP/907yU/B8Bd32c+bB1iIEQoCqh1SV4fbSpaqKQ9
      VTXtpC5ZpdWp4/WagooMFed0onwsSmMauUwZ9EcewWv8EwYDANyOeEnXHzk2wqAx+4BtbKC6
      eehuGjrqb68bKywo0CvwhKIni+PRm+fPdTsCOKqQTJl7zC5SPQQcxwMAAM/xAAIEEZNy0jvY
      3NHm5/vHSekClRwDAIoJgMpKVq6PK10kRvjGurOBob7q2ioxQEQqDUkCNICqdeqxfkQfJxrr
      HNGb58zTUocu3NKnmyGEkYneUX+eguTFcqVOSmMBVKUWLtx4VKApC9ZsTvMG7YMoiovl4kjQ
      6QryiQkGKmqxQtX8/DQcAJ9v0CNNWreufODQRy5V4lR3jhkJCBWJ5CqVUiICAMFFpFIlw1CM
      lOl4MYmLgUallJM4KZGqFLLUnLkb1/Sdu3SoGRHN37Closhou6BkJBhARcnZeckAcGH7QIdS
      Ghk8fmgEAKDMWvrmC68MfLzjysWrpKFwXo6RZsw1J6stENWnzlm+oGAi1NE10FrrXfrkc6tO
      XKu5AtG8Va+maMWP523+CYGiUrVciiG4qXieCUJP/63RgHxedpLdcv1cF7fl2Y0iKiqN08Up
      xAAAsczID5/a0VLHYsk//H+XThXNY9nKYGmaQzDxjJdpPM/TDEsQxORRIY5lGZYTi0UIggDA
      0zSDicQYAAzDcBAhRcI9z98BPMfQFEOISew+v0JhL0xgNgiWaIFZIQhIYFY8YD4hXPckMHMe
      LCDBJ1pghghDmMCsEAQkMCsEAQnMiumMcpznwAdHVEWLli/NI1iq6eI+K5GAen18avlzC+85
      ZM+EHa1dvqJ52UJg8D80wjdPnGge8eDKpFXrV2fqboducfXVHL7QyEn1K9evztSQnTWXbraP
      oFrz1q3rlFMyT9cDoUoi0lrZWDvup+mY7fzhWx4vRyAxyLKQ52KRcDAQiMRojvac3rd3z9G6
      aIymotFIJBIKBkPhKMvxkGcjoWAgEAxHYhzP07FIOBIJhYLhSCwWjQQDwSglXKfyXeJtuXC+
      wVq2fKkm0L/neMvkQ0iP7t17lsgoSUHdO/fesFkbj1/rMZeVIj03d53umbpEn64HQvCi5UvO
      7+qwjtiJWLVFo19UkOW91uZSxBxDrQf2nRgPhsSJJevLk3uHep1jzL7jCdpAW8NQSMQGglC3
      +c3Xcoi+33x4KowhmDT5lXdeHr+445qVQ2POiDg1Q8f2dowkzX/+v7yzUtie+M6QmZ7cUr4g
      S4n2yJonwpPPosNtExHdXz+5SGaBLR/UWzqgIiF3cXnFAmLgF6dbIxty7l6XMf0cKC6lKJf0
      9Fm6Gyrb4/XpuSa5NxCecPvaG652RsULVy4ONt+o67bLlVpSnbWszMjCECs1bnrpORM20Tds
      8YeppKyCOTnG2ERz64iHDXkJdfLTayrC9iFWM2f13Iyhxm562kYIPDY0maULclQ99RfO9oSW
      VNyJHIUBBBGLAAA4AlAEwxBs8qYnEYZ80+ue5GpDVlFq86XTl3t95pLyODEKAOA5Lhbwx6iY
      xxFKzclIjFeKxVJCkWpKVCEAJBXmZ5uzjHoJAnm/3TbuGGMwKSmTUgwHAZqYZMzJSsJJscGc
      bzSoCZEQGPE7pv3q/gNXe8qWbVxZkHT7EQcgpBkAAAcBZDkOcoDlAAAcBwE31Ug4vYAwUpmd
      la+gvCFct2hhBgYAAgAuIrRJySqJTJ+o8dsdgIzTijHW03Gz0cICgKJ3q2DH+0f9jM6gkwCa
      ArcN3AgEEECAAAiAYPP+boGO5iPbTzclFS5IU1IDVpfX0d/Q3gOSc7USx/nK1ura7rAmMTWn
      OODsbWhtP3O+V5OfJZ2S/wHXPd2/lYGgMhnJY7gmZ9GKIiMKuZAvrDXllhflEDHX4JAtPnve
      suULjAokylAoFp+UKFfr09IN6lg4rEzKzs1McLpsMYaIT0yJS0gzKnCpIT0tUeULg+ycfL2Y
      ZQhNcXH6wzjoCzwCOEv3UAyI2IDTah2xxeRmXbh7IpKSXpwTBxvr6hwx2fpNT2YY0xScvb6h
      jVFmvfTCatmUrzW78C48x3I8StwOF8OxLEDvP6sDIYQ8BxBcuKbnDwwIOY7mAUbgOAAAQI5m
      WRwjUHQ6fyAhPpDAzPk/o/MtCrcG6z4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Economic Classifications by GNI per capita' width='192'>
      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
      /wHGDBhGUczPeAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Costs and Data Caps by Service' width='192'>
      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
      uTNfbBny/wG3aofOxnNUrwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
