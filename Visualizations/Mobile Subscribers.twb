<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='TableauData (IT.CEL.SETS.P2)' inline='true' name='excel-direct.42464.897890104200' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Mobile Cellular Subscriptions.xls' password='' server='' validate='no'>
        <relation name='TableauData$' table='[TableauData$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' name='Year' ordinal='2' />
            <column datatype='real' name='Mobile cellular subscriptions (per 100 people)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile cellular subscriptions (per 100 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile cellular subscriptions (per 100 people)]</local-name>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias>Mobile cellular subscriptions (per 100 people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[TableauData$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.479326' measure-ordering='alphabetic' measure-percentage='0.477795' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Free Basics Launch Dates' inline='true' name='excel-direct.42464.905007847200' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/margaretpearce/Documents/Graduate Coursework/LIS 677/Project/lis677-project/Data/Free Basics Launch Dates.xlsx' password='' server='' validate='no'>
        <relation name='Categorizations$' table='[Categorizations$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Southeast Asian Country' ordinal='1' />
            <column datatype='string' name='Free Basics Available' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Categorizations$]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Southeast Asian Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Southeast Asian Country]</local-name>
            <parent-name>[Categorizations$]</parent-name>
            <remote-alias>Southeast Asian Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Free Basics Available</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Free Basics Available]</local-name>
            <parent-name>[Categorizations$]</parent-name>
            <remote-alias>Free Basics Available</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Categorizations$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' name='[Free Basics Available]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Southeast Asian Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Free Basics Available]' derivation='None' name='[none:Free Basics Available:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.464012' measure-ordering='alphabetic' measure-percentage='0.462481' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Free Basics Available:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='excel-direct.42464.897890104200'>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.42464.905007847200'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='excel-direct.42464.897890104200' target='excel-direct.42464.905007847200'>
      <column-mapping>
        <map key='[excel-direct.42464.897890104200].[none:Country Name:nk]' value='[excel-direct.42464.905007847200].[none:Country:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Cell phone subscriptions'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (IT.CEL.SETS.P2)' name='excel-direct.42464.897890104200' />
            <datasource caption='Free Basics Launch Dates' name='excel-direct.42464.905007847200' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42464.897890104200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Avg' name='[avg:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42464.905007847200'>
            <column datatype='string' name='[Free Basics Available]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Southeast Asian Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[Free Basics Available]' derivation='None' name='[none:Free Basics Available:nk]' pivot='key' type='nominal' />
            <column-instance column='[Southeast Asian Country]' derivation='None' name='[none:Southeast Asian Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42464.905007847200].[none:Southeast Asian Country:nk]'>
            <groupfilter function='member' level='[none:Southeast Asian Country:nk]' member='&quot;Yes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.42464.905007847200].[none:Southeast Asian Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42464.905007847200].[none:Free Basics Available:nk]' />
              <text column='[excel-direct.42464.897890104200].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42464.897890104200].[avg:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42464.897890104200].[yr:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='TableauData (IT.CEL.SETS.P2)' name='excel-direct.42464.897890104200' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42464.897890104200'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[Mobile cellular subscriptions (per 100 people)]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mobile cellular subscriptions (per 100 people)]' derivation='Sum' name='[sum:Mobile cellular subscriptions (per 100 people):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42464.897890104200].[none:Year:qk]' included-values='in-range'>
            <min>#2014-01-01#</min>
            <max>#2014-01-01#</max>
          </filter>
          <slices>
            <column>[excel-direct.42464.897890104200].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[excel-direct.42464.897890104200].[sum:Mobile cellular subscriptions (per 100 people):qk]</rows>
        <cols>[excel-direct.42464.897890104200].[none:Country Name:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='48' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Cell phone subscriptions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42464.905007847200].[none:Free Basics Available:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42464.897890104200].[none:Year:nk]</field>
          <field>[excel-direct.42464.897890104200].[yr:Year:ok]</field>
          <field>[excel-direct.42464.905007847200].[none:Free Basics Available:nk]</field>
          <field>[excel-direct.42464.905007847200].[none:Southeast Asian Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42464.897890104200].[none:Country Name:nk]</field>
          <field>[excel-direct.42464.897890104200].[none:Year:qk]</field>
          <field>[excel-direct.42464.897890104200].[yr:Year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cell phone subscriptions' width='192'>
      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
      zZTn/wH2E/xtUm2xSwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
